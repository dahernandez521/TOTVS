#INCLUDE "rwmake.ch"
#INCLUDE "MATA410.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "XMLXFUN.CH"
#INCLUDE "TBICONN.CH"
#INCLUDE "FWEVENTVIEWCONSTS.CH"       
#INCLUDE "FWADAPTEREAI.CH"     

#DEFINE DIRMASC "\MSXML\" 
#DEFINE DIRXMLTMP "\MSXMLTMP\"
#DEFINE ITENSSC6 300                          
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Define para tratamento do IVA Ajustado³       
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#DEFINE __UFORI  01
#DEFINE __ALQORI 02
#DEFINE __PROPOR 03 

#DEFINE SMMARCA	 	1
#DEFINE SMCODTRAN  2
#DEFINE SMNOMETRAN 3
#DEFINE SMVALOR    4
#DEFINE SMPRAZO    5

#DEFINE SMNUMCALC	6	
#DEFINE SMCLASSFRE 	7
#DEFINE SMTIPOPER  	8
#DEFINE SMTRECHO   	9
#DEFINE SMTABELA  	10
#DEFINE SMNUMNEGOC 	11
#DEFINE SMROTA     	12
#DEFINE SMDATVALID 	13
#DEFINE SMFAIXA    	14
#DEFINE SMTIPOVEI	15       
#DEFINE SMEXISTMP	16                        

#XCOMMAND CLOSETRANSACTION LOCKIN <aAlias,...>   => EndTran( \{ <aAlias> \}  ); End Sequence
Static aFreteP	:= {}          
Static lValOp	:= GetNewPar("MV_A410OPE",.F.)

//Variaveis para identificação do cliente Aus/Equ
Static cNomeCli	:= ""
Static cDoctoId	:= ""
Static cA1End 	:= ""
Static cA1Mun 	:= ""
Static cA1Est 	:= ""
Static cA1Cep 	:= ""     
Static __lM410REC


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±    
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ MATA410  ³ Rev.  ³ Eduardo Riera         ³ Data ³ 26.08.2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa de atualizacao de Pedidos de Venda                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Void MATA410(void)                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ ATUALIZACOES SOFRIDAS DESDE A CONSTRUCAO INICIAL.                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ PROGRAMADOR  ³ DATA   ³ BOPS ³  MOTIVO DA ALTERACAO                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Andre Veiga  ³24/01/06³089953³-Tratamento do codigo do cliente com PadR³±±
±±³              ³        ³      ³ para completar a posicao do array com o ³±±
±±³              ³        ³      ³ tamanho correto do campo. No portal,    ³±±
±±³              ³        ³      ³ o cliente 169 loja 01 estava sendo      ³±±
±±³              ³        ³      ³ considerado como 16901 loja 01          ³±±
±±³Jonathan Glez ³01/07/16³TVGUG8³ Adecuacion para Colombia, cambio en     ³±±
±±³              ³        ³      ³ Ma410Impos, se agrega MaFisLoad(),para  ³±±
±±³              ³        ³      ³ actualizar el campo NF_TPACTIV para el  ³±±
±±³              ³        ³      ³ calculo de los impuestos.               ³±±
±±³Jonathan Glez ³26/09/16³TVGUG8³ Adecuacion para Mexico, A410Adiant      ³±±
±±³              ³        ³      ³ Se agrega funcionalidad para anticipos  ³±±
±±³              ³        ³      ³ de compra para Mexico.                  ³±±
±±³Luis Enriquez ³27/10/17³DMINA-³ Se agrega validación para captura de da-³±±
±±³(MEX)         ³        ³392   ³ tos para comercio exterior A410TudOk.   ³±±
±±³Luis Enriquez ³30/10/17³DMINA-³ Retrab. DMINA-900 se sustituye el uso de³±±
±±³(MEX)         ³        ³392   ³ texto fijo por STR de .CH.              ³±±
±±³Ivan Gomez    ³10/11/17³DMICNS³ Se modifica Valdiacion en linea 4252 se ³±±
±±³              ³        ³-86   ³ realiza primero la Validacion de Pais   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MATA410(xAutoCab,xAutoItens,nOpcAuto,lSimulacao,cRotina,cCodCli,cLoja,xRatCTBPC,xAdtPC,xParamAuto,lSigaDPR)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Define Variaveis                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aCores   := {}
Local cRoda    := ""
Local bRoda    := {|| .T.}
Local xRet     := Nil
Local nPos	   := 0
Local cFilSQL  := Nil
Local lWmsNew	 := SuperGetMV("MV_WMSNEW",.F.,.F.)

PRIVATE lOnUpdate  := .T.	
PRIVATE l410Auto   := xAutoCab <> NIL  .And. xAutoItens <> NIL
PRIVATE aAutoCab   := {}
PRIVATE aAutoItens := {} 
Private aParamAuto := {}
PRIVATE aRotina	 := MenuDef()
	
PRIVATE aRatCTBPC  := If(xRatCTBPC<>NIL,xRatCTBPC,{})
PRIVATE aAdtPC     := If(xAdtPC <> NIL,xAdtPC,{})
PRIVATE nAutoAdt   := If(nOpcAuto <> NIL,nOpcAuto,0)
PRIVATE cCadastro := OemToAnsi(STR0007) //"Atualiza‡„o de Pedidos de Venda"
If ( cPaisLoc != "BRA" )
	PRIVATE aArrayAE:={}
	PRIVATE lImpMsg:=.T.
EndIf
DEFAULT nOpcAuto := 3
DEFAULT lSimulacao := .F.
DEFAULT lSigaDPR := .F.
PRIVATE aHeadLEA :={} //Template GEM - Solidarios
PRIVATE aColsLEA :={} //Template GEM - Solidarios
PRIVATE lShowOpc := .T.
PRIVATE aMemoSC6 := { { 'C6_CODINF', 'C6_INFAD' } }
Private lPlanRaAtv	:= .F.	//LOGICO PARA VALIDACAO DA PLANILHA
Private cFilAux	   := cFilAnt // Variavel utilizada no FINC010	
Private bDoRefresh	:= {|| NIL}       
Private lExAutoDPR	:= lSigaDPR	
          
Private aColsCCust:= {}
Private aBkpAgg	  := {}  

Private oOrdServ   := Iif(lWmsNew,WMSDTCOrdemServicoCreate():New(),Nil)
Private aLibDCF    := {}

AjustaHelp()
AjustaSX6()	//Ajusta parametros
AjustaSX3()

aCores := {{"Empty(C5_LIBEROK).And.Empty(C5_NOTA) .And. Empty(C5_BLQ)",'ENABLE' },;		//Pedido em Aberto
			{ "!Empty(C5_NOTA).Or.C5_LIBEROK=='E' .And. Empty(C5_BLQ)" ,'DISABLE'},;		   	//Pedido Encerrado
			{ "!Empty(C5_LIBEROK).And.Empty(C5_NOTA).And. Empty(C5_BLQ)",'BR_AMARELO'},;
			{ "C5_BLQ == '1'",'BR_AZUL'},;	//Pedido Bloquedo por regra
			{ "C5_BLQ == '2'",'BR_LARANJA'}}	//Pedido Bloquedo por verba

If cPaisLoc <> "BRA"
	Aadd(aCores,{})
	Ains(aCores,1)
	aCores[1] := {"AllTrim(C5_NOTA)=='REMITO'","BR_CINZA"}
Endif          

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ajuste no pergunte MTA410				  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
AjustaSX1()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ajuste no SX3                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
A410AjuSX3()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ajuste no SX7                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
A410AjuSX7()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Tratamento de Rotina Automatica            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If ValType( cRotina ) == "C"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Faz tratamento para chamada por outra rotina             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty( nScan := AScan( aRotina, { |x| Upper(Alltrim(x[2])) == Upper(Alltrim(cRotina)) } ) )
		bRoda := &( "{ || " + cRotina + "( 'SC5', SC5->( Recno() ), " + Str(nScan,2) + If(ValType(cCodCli)=="C",",nil,nil,nil,nil,nil,cCodCli,cLoja", "" ) + ") } " )
		xRet  := Eval( bRoda )
	EndIf

Else

	If  ( Type("l410Auto") <> "U" .And. l410Auto )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Tratamento do tamanho do campo do C5_CLIENTE. Por algum motivo, ³
		//³ a MBrowseAuto sempre retornava este campo concatenado com o     ³
		//³ C5_LOJA, por isto, foi feito o tratamento com o PadR para manter³
		//³ o tamanho do campo C5_CLIENTE cf. o SX3                         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nPos := aScan( xAutoCab, {|x| Alltrim( Upper( x[1] ) ) == "C5_CLIENTE" } )
		If nPos > 0
			xAutoCab[nPos][2] := PadR( xAutoCab[nPos][2], TamSX3("C5_CLIENTE")[1] )
		Endif

		// Valida o array Rateio por CCusto - rotina automatica
		If a410RatAut(aRatCTBPC)
			lOnUpdate  := !lSimulacao
			aAutoCab   := xAutoCab
			aAutoItens := xAutoItens
			aParamAuto := IIf(xParamAuto<>NIL,xParamAuto,{})
			MBrowseAuto(nOpcAuto,Aclone(aAutoCab),"SC5")
			xAutoCab   := aAutoCab
			xAutoItens := aAutoItens
		Endif
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Define variaveis de parametrizacao de lancamentos    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ MV_PAR01 Sugere Quantidade Liberada ? Sim/Nao        ³
		//³ MV_PAR02 Preco Venda Com Substituicao ? Sim?Nao      ³
		//³ MV_PAR03 Utiliz.Op.Triangular     ?   Sim/Nao        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ativa tecla F-10 para parametros                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SetKey(VK_F12,{|| a410Ativa()})

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de Entrada para alterar cores do Browse do Cadastro    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock("MA410COR")
			aCores := ExecBlock("MA410COR",.F.,.F.,aCores)
		Endif

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Endereca a funcao de BROWSE                          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistTemplate("MT410BRW")
			ExecTemplate("MT410BRW",.F.,.F.)
		EndIf

		If ExistBlock("MT410BRW")
			ExecBlock("MT410BRW",.F.,.F.)
		EndIf
		#IFDEF TOP
			If ExistBlock("M410FSQL")	// Filtro SQL na MBrowser
				cFilSQL := ExecBlock("M410FSQL",.F.,.F.)
			EndIf
		#ENDIF

		MBrowse( 6,1,22,75,'SC5',,,,,,aCores,,,,,,,,cFilSQL)
	Endif

EndIf

dbSelectArea("SC5")
dbSetOrder(1)
dbClearFilter()
SetKey(VK_F12,Nil)

Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a410Visual³ Rev.  ³Eduardo Riera          ³ Data ³26.08.2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Visualizacao do Pedido de Venda                             ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Alias do cabecalho do pedido de venda                ³±±
±±³          ³ExpN2: Recno do cabecalho do pedido de venda                ³±±
±±³          ³ExpN3: Opcao do arotina                                     ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a interface com o usua³±±
±±³          ³rio e o pedido de vendas                                    ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410Visual(cAlias,nReg,nOpc)

Local aArea    := GetArea()
Local aCpos1   := {"C6_QTDVEN ","C6_QTDLIB"}
Local aCpos2   := {}
Local aBackRot := aClone(aRotina)
Local aPosObj  := {}
Local aObjects := {}
Local aSize    := {}
Local aPosGet  := {}
Local aInfo    := {}

Local lContinua:= .T.
Local lGrade   := MaGrade()
Local lQuery   := .F.
Local lFreeze   := (SuperGetMv("MV_PEDFREZ",.F.,0) <> 0)

Local nGetLin  := 0
Local nOpcA    := 0
Local nTotPed  := 0
Local nTotDes  := 0
Local nCntFor  := 0
Local nNumDec  := TamSX3("C6_VALOR")[2]
Local nColFreeze:= SuperGetMv("MV_PEDFREZ",.F.,0)
Local nCont    := 0

Local cArqQry  := "SC6"
Local cCadastro:= IIF(Type('cCadastro') == 'U',OemToAnsi("STR0007"),cCadastro) //"Atualiza‡„o de Pedidos de Venda"
Local oGetd
Local oSAY1
Local oSAY2
Local oSAY3
Local oSAY4
Local oDlg
Local lMt410Ace:= Existblock("MT410ACE")

Local bCond     := {|| .T. }
Local bAction1  := {|| Mta410Vis(cArqQry,@nTotPed,@nTotDes,lGrade) }	
Local bAction2  := {|| .T. }
Local cSeek     := ""
Local aNoFields := {"C6_NUM","C6_QTDEMP","C6_QTDENT","C6_QTDEMP2","C6_QTDENT2"}		// Campos que nao devem entrar no aHeader e aCols
Local bWhile    := {|| }
Local cQuery    := ""
Local lGrdOk	:= If(lGrade.And.MatOrigGrd()=="SB4",If(FindFunction("VldDocGrd"),VldDocGrd(1,SC5->C5_NUM),.T.),.T.)
Local aRecnoSE1RA
Local aHeadAGG    := {}
Local aColsAGG    := {}
Local cMemo       := ''
Local cCampo      := ''
Local nPosCliEnt  := 0
Local nPosLojEnt  := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa a Variaveis Privates.                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aTrocaF3  := {}
PRIVATE aTELA[0][0],aGETS[0]
PRIVATE aHeader	  := {}
PRIVATE aCols	  := {}
PRIVATE aHeadFor  := {}
PRIVATE aColsFor  := {}
PRIVATE N         := 1
PRIVATE aGEMCVnd  := {"",{},{}} //Template GEM - Condicao de Venda 
PRIVATE oGetPV	  := Nil

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o campo de codigo de lancamento cat 83 ³
//³deve estar visivel no acols                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SC6->(FieldPos("C6_CODLAN"))>0 .and. !SuperGetMV("MV_CAT8309",,.F.)
	aAdd(aNoFields,"C6_CODLAN")
EndIf


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Agroindustria  									                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If FindFunction("OGXUtlOrig") //Encontra a função
	If OGXUtlOrig()
		If (FindFunction("OGX220"))//Encontra a função
			lContinua := OGX220()
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para validar acesso do usuario na funcao ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lMt410Ace
	lContinua := Execblock("MT410ACE",.F.,.F.,{nOpc})
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria Ambiente/Objeto para tratamento de grade        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ        
If FindFunction("MsMatGrade") .And. IsAtNewGrd()
	PRIVATE oGrade	  := MsMatGrade():New('oGrade',,"C6_QTDVEN",,"a410GValid()",;
							{ 	{VK_F4,{|| A440Saldo(.T.,oGrade:aColsAux[oGrade:nPosLinO][aScan(oGrade:aHeadAux,{|x| AllTrim(x[2])=="C6_LOCAL"})])}} },;
							{ 	{"C6_QTDVEN",NIL,NIL},;
								{"C6_QTDLIB",NIL,NIL},;
								{"C6_QTDENT",NIL,NIL},;
								{"C6_ITEM"	,NIL,NIL},;
								{"C6_UNSVEN",NIL,NIL},;
								{"C6_OPC",NIL,NIL},;
								{"C6_BLQ",NIL,NIL}})

	//-- Inicializa grade multicampo
	A410InGrdM()
Else
	PRIVATE aColsGrade:= {}
	PRIVATE aHeadGrade:= {}
EndIf

If Type("Inclui") == "U"
	Inclui := .F.
	Altera := .F.
EndIf
Pergunte("MTA410",.F.) 
//Carrega as variaveis com os parametros da execauto
Ma410PerAut()

If ( lGrade )
	aRotina[nOpc][4] := 6
EndIf

If lGrdOk
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicializa a Variaveis da Enchoice.                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RegToMemory( "SC5", .F., .F. )
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Filtros para montagem do aCols                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SC6")
	dbSetOrder(1)
	#IFDEF TOP
		lQuery  := .T.
		cQuery := "SELECT * "
		cQuery += "FROM "+RetSqlName("SC6")+" SC6 "
		cQuery += "WHERE SC6.C6_FILIAL='"+xFilial("SC6")+"' AND "
		cQuery += "SC6.C6_NUM='"+SC5->C5_NUM+"' AND "
		cQuery += "SC6.D_E_L_E_T_<>'*' "
		cQuery += "ORDER BY "+SqlOrder(SC6->(IndexKey()))
	
		dbSelectArea("SC6")
		dbCloseArea()
	#ENDIF
	cSeek  := xFilial("SC6")+SC5->C5_NUM
	bWhile := {|| C6_FILIAL+C6_NUM }
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem do aHeader e aCols                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³FillGetDados( nOpcx, cAlias, nOrder, cSeekKey, bSeekWhile, uSeekFor, aNoFields, aYesFields, lOnlyYes,       ³
	//³				  cQuery, bMountFile, lInclui )                                                                ³
	//³nOpcx			- Opcao (inclusao, exclusao, etc).                                                         ³
	//³cAlias		- Alias da tabela referente aos itens                                                          ³
	//³nOrder		- Ordem do SINDEX                                                                              ³
	//³cSeekKey		- Chave de pesquisa                                                                            ³
	//³bSeekWhile	- Loop na tabela cAlias                                                                        ³
	//³uSeekFor		- Valida cada registro da tabela cAlias (retornar .T. para considerar e .F. para desconsiderar ³
	//³				  o registro)                                                                                  ³
	//³aNoFields	- Array com nome dos campos que serao excluidos na montagem do aHeader                         ³
	//³aYesFields	- Array com nome dos campos que serao incluidos na montagem do aHeader                         ³
	//³lOnlyYes		- Flag indicando se considera somente os campos declarados no aYesFields + campos do usuario   ³
	//³cQuery		- Query para filtro da tabela cAlias (se for TOP e cQuery estiver preenchido, desconsidera     ³
	//³	           parametros cSeekKey e bSeekWhiele)                                                              ³
	//³bMountFile	- Preenchimento do aCols pelo usuario (aHeader e aCols ja estarao criados)                     ³
	//³lInclui		- Se inclusao passar .T. para qua aCols seja incializada com 1 linha em branco                 ³
	//³aHeaderAux	-                                                                                              ³
	//³aColsAux		-                                                                                              ³
	//³bAfterCols	- Bloco executado apos inclusao de cada linha no aCols                                         ³
	//³bBeforeCols	- Bloco executado antes da inclusao de cada linha no aCols                                     ³
	//³bAfterHeader -                                                                                              ³
	//³cAliasQry	- Alias para a Query                                                                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	FillGetDados(nOPc,"SC6",1,cSeek,bWhile,{{bCond,bAction1,bAction2}},aNoFields,/*aYesFields*/,/*lOnlyYes*/,cQuery,/*bMontCols*/,.F.,/*aHeaderAux*/,/*aColsAux*/,{|| AfterCols(cArqQry) },/*bBeforeCols*/,/*bAfterHeader*/,"SC6")
	
	If FindFunction("MATGRADE_V") .And. MATGRADE_V() >= 20110425 .And. "MATA410" $ SuperGetMV("MV_GRDMULT",.F.,"") .And. lGrade
		aCols := aColsGrade(oGrade,aCols,aHeader,"C6_PRODUTO","C6_ITEM","C6_ITEMGRD",aScan(aHeader,{|x| AllTrim(x[2]) == "C6_DESCRI"}))
	EndIf

	If AliasInDic("AGG")
		A410FRat(@aHeadAGG,@aColsAGG)	
	EndIf
	
	If lQuery
		dbSelectArea("SC6")
		dbCloseArea()
		ChkFile("SC6",.F.)
	EndIf
	
	
	For nCntFor := 1 To Len(aHeader)
		If aHeader[nCntFor][8] == "M"
			aadd(aCpos1,aHeader[nCntFor][2])
		EndIf
	Next nCntFor

	nTotDes  += A410Arred(nTotPed*M->C5_PDESCAB/100,"C6_VALOR")
	nTotPed  -= A410Arred(nTotPed*M->C5_PDESCAB/100,"C6_VALOR")	
	nTotPed  -= M->C5_DESCONT
	nTotDes  += M->C5_DESCONT

	If ( lQuery )
		dbSelectArea(cArqQry)
		dbCloseArea()
		ChkFile("SC6",.F.)
		dbSelectArea("SC6")
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Monta o array com as formas de pagamento       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Ma410MtFor(@aHeadFor,@aColsFor)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Caso nao ache nenhum item , abandona rotina.         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( Len(aCols) == 0 )
		Help(" ",1,"A410SEMREG")
		lContinua := .F.
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada para visualizao do pedido de vendas  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	
	If ExistBlock("M410VIS")
		ExecBlock("M410VIS",.F.,.F.)
	EndIf
	
	If ( lContinua )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Faz o calculo automatico de dimensoes de objetos     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aSize := MsAdvSize()
		aObjects := {}
		AAdd( aObjects, { 100, 100, .t., .t. } )
		AAdd( aObjects, { 100, 100, .t., .t. } )
		AAdd( aObjects, { 100, 020, .t., .f. } )
	
		aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
		aPosObj := MsObjSize( aInfo, aObjects )
	
		aPosGet := MsObjGetPos(aSize[3]-aSize[1],315,;
			{{003,033,160,200,240,263}} )
	
		DEFINE MSDIALOG oDlg TITLE cCadastro From aSize[7],0 to aSize[6],aSize[5] of oMainWnd PIXEL
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Estabelece a Troca de Clientes conforme o Tipo do Pedido de Venda      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( M->C5_TIPO $ "DB" )
			aTrocaF3 := {{"C5_CLIENTE","SA2"}}
		Else
			aTrocaF3 := {}
		EndIf
		oGetPV:=MSMGet():New( cAlias, nReg, nOpc, , , , , aPosObj[1],aCpos2,3,,,"A415VldTOk")
		nGetLin := aPosObj[3,1]
		//@ nGetLin,aPosGet[1,1]  SAY OemToAnsi(IIF(M->C5_TIPO$"DB",STR0008,STR0009)) SIZE 020,09 PIXEL	//"Fornec.:"###"Cliente: "
		@ nGetLin,aPosGet[1,2]  SAY oSAY1 VAR Space(40)						SIZE 120,09 PICTURE "@!" OF oDlg PIXEL
		@ nGetLin,aPosGet[1,3]  SAY OemToAnsi(STR0011)						SIZE 020,09 OF oDlg PIXEL	//"Total :"
		@ nGetLin,aPosGet[1,4]  SAY oSAY2 VAR 0 PICTURE TM(0,22,Iif(cPaisloc=="CHI" .And. M->C5_MOEDA == 1,NIL,nNumDec))		SIZE 060,09 OF oDlg	PIXEL
		@ nGetLin,aPosGet[1,5]  SAY OemToAnsi(STR0012)						SIZE 030,09 OF oDlg PIXEL	//"Desc. :"
		@ nGetLin,aPosGet[1,6]  SAY oSAY3 VAR 0 PICTURE TM(0,22,Iif(cPaisloc=="CHI" .And. M->C5_MOEDA == 1,NIL,nNumDec))		SIZE 060,09 OF oDlg	PIXEL RIGHT
		@ nGetLin+10,aPosGet[1,5] SAY OemToAnsi("=")							SIZE 020,09 OF oDlg PIXEL
		@ nGetLin+10,aPosGet[1,6] SAY oSAY4 VAR 0								SIZE 060,09 PICTURE TM(0,22,Iif(cPaisloc=="CHI" .And. M->C5_MOEDA == 1,NIL,nNumDec)) OF oDlg PIXEL RIGHT
		oDlg:Cargo	:= {|c1,n2,n3,n4| oSay1:SetText(c1),;
			oSay2:SetText(n2),;
			oSay3:SetText(n3),;
			oSay4:SetText(n4) }
		oGetd   := MsGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],nOpc,,,"",,aCpos1,nColFreeze,,,"A410FldOk(1)",,,,,lFreeze)	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Desabilitar os gets de cliente e loja de entrega na visualização para quando utilizado ³
		//³pedidos do tipo D ou B pois é utilizado fornecedores		                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SC5->C5_TIPO $ "D|B"
			nPosCliEnt := AsCan(oGetPV:aENTRYCTRLS,{|x| UPPER(TRIM(x:cReadVar))=="SC5->C5_CLIENT"})
			nPosLojEnt := AsCan(oGetPV:aENTRYCTRLS,{|x| UPPER(TRIM(x:cReadVar))=="SC5->C5_LOJAENT"})
			If nPosCliEnt > 0 .And. nPosLojEnt > 0
				oGetPV:AENTRYCTRLS[nPosCliEnt]:LACTIVE := .F.
				oGetPV:AENTRYCTRLS[nPosLojEnt]:LACTIVE := .F.
			EndIf	
		EndIf
		
			A410Bonus(2)
		Ma410Rodap(oGetd,nTotPed,nTotDes)
		ACTIVATE MSDIALOG oDlg ON INIT (A410Limpa(.F.,M->C5_TIPO),Ma410Bar(oDlg,{||nOpcA:=1,oDlg:End()},{||oDlg:End()},nOpc,oGetD,nTotPed,@aRecnoSE1RA,@aHeadAGG,@aColsAGG))
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de Entrada apos visualizao do pedido de vendas  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("MTA410V")
		ExecBlock("MTA410V",.F.,.F.)
	EndIf
EndIf	

aRotina := aClone(aBackRot)
RestArea(aArea)

Return( nOpcA )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a410Altera³ Rev.  ³Eduardo Riera          ³ Data ³26.08.2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Alteracao do Pedido de Venda                                ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Alias do cabecalho do pedido de venda                ³±±
±±³          ³ExpN2: Recno do cabecalho do pedido de venda                ³±±
±±³          ³ExpN3: Opcao do arotina                                     ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a interface com o usua³±±
±±³          ³rio e o pedido de vendas                                    ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410Altera(cAlias,nReg,nOpc)

Local aArea     := GetArea()
Local aPosObj   := {}
Local aObjects  := {}
Local aSize     := {}
Local aPosGet   := {}
Local aRegSC6   := {}
Local aRegSCV   := {}
Local aInfo     := {}
Local lLiber 	:= .F.
Local lTransf	:= .F.
Local lGrade	:= MaGrade()
Local lBloqueio := .T.
Local lNaoFatur := .F.
Local lContrat  := .F.
Local lQuery    := .F.
Local lContinua := .T.
Local lMt410Alt := Existblock("MT410ALT")
Local lM410Stts := ExistBlock("M410STTS")
Local lTM410Stts:= ExistTemplate("M410STTS")
Local lM410Bar  := ExistBlock("M410CODBAR")
Local lFreeze   := (SuperGetMv("MV_PEDFREZ",.F.,0) <> 0)
Local lContTPV  := SuperGetMv("MV_TELAPVX",.F.,.F.)
Local lAltPrcCtr	:= (SuperGetMv("MV_ALTCTR2",.F.,"2") == "1")
Local lIntACD		:= SuperGetMV("MV_INTACD",.F.,"0") == "1"
Local lWmsNew		:= SuperGetMv("MV_WMSNEW",.F.,.F.)
Local nOpcA		:= 0
Local nCntFor   := 0
Local nTotalPed := 0
Local nTotalDes := 0
Local nAux	    := 0
Local nNumDec   := TamSX3("C6_VALOR")[2]
Local nGetLin   := 0
Local nStack    := GetSX8Len()
Local nColFreeze:= SuperGetMv("MV_PEDFREZ",.F.,0)
Local cArqQry   := "SC6"
Local cCadastro := IIF(cCadastro == Nil,OemToAnsi("STR0007"),cCadastro) //"Atualiza‡„o de Pedidos de Venda"
Local oDlg
Local oGetd
Local oSAY1
Local oSAY2
Local oSAY3
Local oSAY4
Local lMt410Ace := Existblock("MT410ACE")
Local nX 		:= 0
//Gestao de Contratos
Local lGCT     := ((SC5->(FieldPos("C5_MDCONTR")) > 0) .And. !Empty(SC5->C5_MDCONTR))
Local aPedCpo  := NIL

Local cSeek     	:= ""
Local aNoFields 	:= {}		// Campos que nao devem entrar no aHeader e aCols, NÃO INCLUIR CAMPOS DIRETAMENTE AQUI
Local aYesFields	:= Nil		// Campos que devem entrar no aCols obrigatoriamente, em caso de execução automática
Local bWhile    	:= {|| }
Local cQuery    	:= ""
Local bCond     	:= {|| .T. }
Local bAction1  	:= {|| Mta410Alt(cArqQry,@nTotalPed,@nTotalDes,lGrade,@lBloqueio,@lNaoFatur,@lContrat,@aRegSC6) }	
Local bAction2  	:= {|| .T. }
Local aRecnoSE1RA	:= {} // Array com os titulos selecionados pelo Adiantamento   
Local aMTA177PER 	:= {}  // Array para carregar as perguntas de central de compras
Local aHeadAGG	:= {}
Local aColsAGG	:= {}
Local cRotAnt		:= ''
Local nPosTpCompl	:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Array para controlar relacionamento com SD4 (Remessa para Beneficiamento ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aColsBn := A410CarBen(SC5->C5_NUM)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criar array PRIVATE p/ integracao com sistema de Distribuicao - NAO REMOVER ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aDistrInd:={}
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas na LinhaOk                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aCols      := {}
PRIVATE aHeader    := {}
PRIVATE aHeadFor   := {}
PRIVATE aColsFor   := {}
PRIVATE N          := 1
PRIVATE oGetPV		:= nil

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta a entrada de dados do arquivo                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aTELA[0][0],aGETS[0]

PRIVATE aGEMCVnd :={"",{},{}} //Template GEM - Condicao de Venda

// gravando o historico dos itens em caso de alteracao do tipo do produto e/ou codigo do produto
PRIVATE aColsHist := {}

//inclui campos no array para não exibir
aNoFields := {"C6_NUM","C6_QTDEMP","C6_QTDENT","C6_QTDEMP2","C6_QTDENT2"}

If ( Type("l410Auto") <> "U" .And. l410Auto )
	aYesFields := {}
	DbSelectArea("SX3")
	SX3->(DbSetOrder(1))	//X3_ARQUIVO + X3_ORDEM
	SX3->(DbSeek( "SC6" ))
	While ( SX3->(!Eof()) .And. SX3->X3_ARQUIVO == "SC6" )
		AAdd( aYesFields, AllTrim(SX3->X3_CAMPO) )
		SX3->(DbSkip())
	EndDo
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o usuario tem premissao para alterar o ³
//³pedido de venda                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc <> "BRA" .AND. FieldPos("C5_CATPV") > 0 .AND. !Empty(SC5->C5_CATPV)
	If AliasIndic("AGS") //Tabela que relaciona usuario com os Tipos de Pedidos de vendas que ele tem acesso
		DBSelectArea("AGS")
		DBSetOrder(1)
		If DBSeek(xFilial("AGS") + __cUserId) //Se não encontrar o usuário na tabela, permite ele alterar o pedido
			If !DBSeek(xFilial("AGS") + __cUserId + SC5->C5_CATPV) //Verifica se o usuario tem premissao
				MsgStop(STR0167 + " " +STR0004 + " " + STR0168)//"Este usuario nao tem permissao para alterar pedidos de venda com essa categoria."
				lContinua := .F.
			EndIf
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o campo de codigo de lancamento cat 83 ³
//³deve estar visivel no acols                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SC6->(FieldPos("C6_CODLAN"))>0 .and. !SuperGetMV("MV_CAT8309",,.F.)
	aAdd(aNoFields,"C6_CODLAN")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Agroindustria  									                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If FindFunction("OGXUtlOrig") //Encontra a função
	If OGXUtlOrig()
		If (FindFunction("OGX220"))//Encontra a função
			lContinua := OGX220()
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para validar acesso do usuario na funcao ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lMt410Ace
	lContinua := Execblock("MT410ACE",.F.,.F.,{nOpc})
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria Ambiente/Objeto para tratamento de grade        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ        
If FindFunction("MsMatGrade") .And. IsAtNewGrd()
	PRIVATE oGrade	  := MsMatGrade():New('oGrade',,"C6_QTDVEN",,"a410GValid()",;
							{ 	{VK_F4,{|| A440Saldo(.T.,oGrade:aColsAux[oGrade:nPosLinO][aScan(oGrade:aHeadAux,{|x| AllTrim(x[2])=="C6_LOCAL"})])}} },;
							{ 	{"C6_QTDVEN",.T., {{"C6_UNSVEN",{|| ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),aCols[nLinha][nColuna],0,2) } }} },;
								{"C6_QTDLIB",NIL,NIL},;
								{"C6_QTDENT",NIL,NIL},;
								{"C6_ITEM"	,NIL,NIL},;
								{"C6_UNSVEN",NIL, {{"C6_QTDVEN",{|| ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),0,aCols[nLinha][nColuna],1) }}} },;
								{"C6_OPC",NIL,NIL},;
								{"C6_NUMOP",NIL,NIL},;
								{"C6_ITEMOP",NIL,NIL},;
								{"C6_BLQ",NIL,NIL}})	  							

	//-- Inicializa grade multicampo
	A410InGrdM(.T.)
Else
	PRIVATE aColsGrade := {}
	PRIVATE aHeadgrade := {}	
EndIf
	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carrega perguntas do MTA177, MATA440 e MATA410                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte ("MTA177",.F.)
AADD (aMTA177PER,{MV_PAR17,MV_PAR18} )
Pergunte("MTA440",.F.)
lLiber := MV_PAR02 == 1
lTransf:= MV_PAR01 == 1
Pergunte("MTA410",.F.)
//Carrega as variaveis com os parametros da execauto
Ma410PerAut()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variavel utilizada p/definir Op. Triangulares.       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IsTriangular( MV_PAR03==1 )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Salva a integridade dos campos de Bancos de Dados    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cAlias)
IF ( (ExistTemplate("M410ALOK")) )
	If (! ExecTemplate("M410ALOK",.F.,.F.) )
		lContinua := .F.
	EndIf
EndIf

IF lContinua .And. ( (ExistBlock("M410ALOK")) )
	If (! ExecBlock("M410ALOK",.F.,.F.) )
		lContinua := .F.
	EndIf
EndIf

IF ( SC5->C5_FILIAL <> xFilial("SC5") )
	Help(" ",1,"A000FI")
	lContinua := .F.
EndIf
  
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Se o Pedido foi originado de um EDITAL - Nao Altera  |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ             
If SC5->(FieldPos("C5_CODED")) > 0 .And. SC5->(FieldPos("C5_NUMPR")) > 0
	If !Empty(SC5->C5_NUMPR) .Or. !Empty(SC5->C5_CODED)
		Help(" ",1,"A410EDITAL") //"Pedido de Venda pertence a um Edital, e nao podera ser alterado, copiado ou excluido"
		lContinua := .F.
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Se o Pedido foi originado no SIGAEEC - Nao Altera    |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//| Somente altera se o parametro MV_EEC0023 estiver .T. |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SC5")
IF !GetMV("MV_EEC0023",,.F.) .AND. !Empty(SC5->C5_PEDEXP) .And. nModulo != 29 .And. ( Type("l410Auto") == "U" .OR. !l410Auto )
	Help(" ",1,"MTA410ALT")
	lContinua := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Se o Pedido foi originado no SIGATMS - Nao Altera    |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SC5->(FieldPos("C5_SOLFRE")) > 0 .And. !Empty(SC5->C5_SOLFRE)
	Help(" ",1,"A410TMSNAO")
	lContinua := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Se o Pedido foi originado no SIGALOJA - Nao Altera    |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SC5->(FieldPos("C5_ORCRES")) > 0 .AND. !Empty(SC5->C5_ORCRES) .AND. (Type("l410Auto") == "U" .OR. !l410Auto)
	//"Este Pedido foi gerado através do módulo de Controle de Lojas, e não poderá ser alterado."
	MsgAlert(STR0115)
	lContinua := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Verifica se o pedido tem carga montada               |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If OmsHasCg(SC5->C5_NUM)
	Help(" ",1,"A410CARGA")
Endif 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Se o Pedido foi originado no SIGAGCT - Nao Altera    |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ    
IF lGCT .And. (FunName() != "CNTA120" .And. FunName() != "CNTA150") .And. !ExistBlock("GCTPEDCPO")
	Help(" ",1,"MTA410AGCT")
	lContinua := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Salva a integridade dos campos de Bancos de Dados    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cAlias)
If !SoftLock(cAlias)
	lContinua := .F.
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa desta forma para criar uma nova instancia de variaveis private ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RegToMemory( "SC5", .F., .F. )

If lContinua
	lContinua := If(lGrade.And.MatOrigGrd()=="SB4",If(FindFunction("VldDocGrd"),VldDocGrd(1,SC5->C5_NUM),.T.),.T.)
EndIf

//-- Como e alteracao so ira mostrar opcionais
//-- caso alterere algo na linha (controle na A410FldOk)
If Type("lShowOpc") == "L"
	lShowOpc := .F.
EndIf

If ( lContinua )
	dbSelectArea("SC6")
	dbSetOrder(1)
	#IFDEF TOP
		If TcSrvType()<>"AS/400" .And. !InTransact() .And. Ascan(aHeader,{|x| x[8] == "M"}) == 0
			lQuery  := .T.
			cQuery := "SELECT SC6.*,SC6.R_E_C_N_O_ SC6RECNO "
			cQuery += "FROM "+RetSqlName("SC6")+" SC6 "
			cQuery += "WHERE SC6.C6_FILIAL='"+xFilial("SC6")+"' AND "
			cQuery += "SC6.C6_NUM='"+SC5->C5_NUM+"' AND "
			cQuery += "SC6.D_E_L_E_T_<>'*' "
			cQuery += "ORDER BY "+SqlOrder(SC6->(IndexKey()))

			dbSelectArea("SC6")
			dbCloseArea()
		EndIf	
	#ENDIF
	cSeek  := xFilial("SC6")+SC5->C5_NUM
	bWhile := {|| C6_FILIAL+C6_NUM }

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem do aHeader e aCols                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	FillGetDados(nOPc,"SC6",1,cSeek,bWhile,{{bCond,bAction1,bAction2}},aNoFields, aYesFields, /*lOnlyYes*/,cQuery,/*bMontCols*/,Inclui,/*aHeaderAux*/,/*aColsAux*/,{|| AfterCols(cArqQry) },/*bBeforeCols*/,/*bAfterHeader*/,"SC6")	
	aColsHist := aClone(aCols)	

	If FindFunction("MATGRADE_V") .And. MATGRADE_V() >= 20110425 .And. "MATA410" $ SuperGetMV("MV_GRDMULT",.F.,"") .And. lGrade
		aCols := aColsGrade(oGrade,aCols,aHeader,"C6_PRODUTO","C6_ITEM","C6_ITEMGRD",aScan(aHeader,{|x| AllTrim(x[2]) == "C6_DESCRI"}))
	EndIf

	If AliasInDic("AGG")
		A410FRat(@aHeadAGG,@aColsAGG)	
	EndIf

	nTotalDes  += A410Arred(nTotalPed*M->C5_PDESCAB/100,"C6_VALOR")
	nTotalPed  -= A410Arred(nTotalPed*M->C5_PDESCAB/100,"C6_VALOR")
	nTotalPed  -= M->C5_DESCONT
	nTotalDes  += M->C5_DESCONT

	
	If ( lQuery )
		dbSelectArea(cArqQry)
		dbCloseArea()
		ChkFile("SC6",.F.)
		dbSelectArea("SC6")
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Inicializa ambiente de integração com Planilha ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If FindFunction("A410RvPlan")
	A410RvPlan("","",.T.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monta o array com as formas de pagamento do SX5³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Ma410MtFor(@aHeadFor,@aColsFor,@aRegSCV)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso nao ache nenhum item , abandona rotina.         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lContinua )
	//
	// Template GEM - Gestao de Empreendimentos Imobiliarios
	//
	// faz a copia da condicao de venda se a mesma tiver 
	// uma vinculacao com a condicao de pagamento
	//
	If ExistBlock("GEM410PV")
		aGEMCVnd := ExecBlock("GEM410PV",.F.,.F.,{ M->C5_NUM ,M->C5_CONDPAG ,M->C5_EMISSAO ,nTotalPed })
	ElseIf ExistTemplate("GEM410PV")
		// Copia a condicao de venda
		aGEMCVnd := ExecTemplate("GEM410PV",.F.,.F.,{ M->C5_NUM ,M->C5_CONDPAG ,M->C5_EMISSAO ,nTotalPed })
	EndIf

	If ( Len(aCols) == 0 )
		lContinua := .F.
		Help(" ",1,"A410S/ITEM")
	EndIf
	If ( (ExistBlock("M410GET")) )
		ExecBlock("M410GET",.F.,.F.)
	EndIf
	If ( lBloqueio )
		Help(" ",1,"A410ELIM")
		lContinua := .F.
	EndIf
	If (!(SuperGetMv("MV_ALTPED")=="S") .And. !lNaoFatur) .And. !(!Empty(SC5->C5_PEDEXP) .And. SuperGetMv("MV_EECFAT") .And. FindFunction("AVINTEMB") .And. AvIntEmb())
		Help(" ",1,"A410PEDFAT")
		lContinua := .F.
	EndIf
	If ( lContrat ) .And. !lAltPrcCtr
		Help(" ",1,"A410CTRPAR")
		lContinua := .F.
	EndIf
EndIf
If ( lContinua )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza com cliente original do pedido caso troque  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	A410ChgCli(M->C5_CLIENTE+M->C5_LOJACLI)

	If ( Type("l410Auto") == "U" .OR. !l410Auto )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Faz o calculo automatico de dimensoes de objetos     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aSize := MsAdvSize()
		aObjects := {}
		AAdd( aObjects, { 100, 100, .t., .t. } )
		AAdd( aObjects, { 100, 100, .t., .t. } )
		AAdd( aObjects, { 100, 020, .t., .f. } )
		aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
		aPosObj := MsObjSize( aInfo, aObjects )
		aPosGet := MsObjGetPos(aSize[3]-aSize[1],315,{{003,033,160,200,240,263}} )
		nGetLin := aPosObj[3,1]
		If lContTPV		
			DEFINE MSDIALOG oDlg TITLE cCadastro From aSize[7],0 to aSize[6],aSize[5] of oMainWnd PIXEL STYLE nOR( WS_VISIBLE ,DS_MODALFRAME )
		Else 
			DEFINE MSDIALOG oDlg TITLE cCadastro From aSize[7],0 to aSize[6],aSize[5] of oMainWnd PIXEL
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Armazenar dados do Pedido anterior.                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF M->C5_TIPO $ "DB"
			aTrocaF3 := {{"C5_CLIENTE","SA2"}}
		Else
			aTrocaF3 := {}
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica campos especificos para edicao - SIGAGCT    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lGCT
			aPedCpo := {{},{}}
			If ExistBlock("GCTPEDCPO")
				aPedCpo := ExecBlock("GCTPEDCPO",.F.,.F.)
			EndIf
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Em cenário em que o Faturamento está integrado com o Export, somente serão habilitados para  ³
		//³ edição os campos não integrados quando o parametro MV_EEC0023 estiver habilitado             ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		
		oGetPV:=MSMGet():New( "SC5", nReg, nOpc, , , , , aPosObj[1],If(lGCT,aPedCpo[1],If(!Empty(SC5->C5_PEDEXP) .AND. GetMV("MV_EEC0023",,.F.),FAT2CposInt("SC5"),NIL)),3,,,"A415VldTOk")
		//@ nGetLin,aPosGet[1,1]  SAY OemToAnsi(IIF(M->C5_TIPO$"DB",STR0008,STR0009)) SIZE 020,09 PIXEL	//"Fornec.:"###"Cliente: "
		@ nGetLin,aPosGet[1,2]  SAY oSAY1 VAR Space(40)						SIZE 120,09 PICTURE "@!"	OF oDlg PIXEL
		@ nGetLin,aPosGet[1,3]  SAY OemToAnsi(STR0011)						SIZE 020,09 OF oDlg PIXEL	//"Total :"
		@ nGetLin,aPosGet[1,4]  SAY oSAY2 VAR 0 PICTURE IIf(cPaisloc=="CHI",Nil,TM(0,22,nNumDec))	SIZE 060,09 OF oDlg PIXEL
		@ nGetLin,aPosGet[1,5]  SAY OemToAnsi(STR0012)						SIZE 030,09 OF oDlg PIXEL 	//"Desc. :"
		@ nGetLin,aPosGet[1,6]  SAY oSAY3 VAR 0 PICTURE IIf(cPaisloc=="CHI",Nil,TM(0,22,nNumDec))		SIZE 060,09 OF oDlg PIXEL RIGHT
		@ nGetLin+10,aPosGet[1,5]  SAY OemToAnsi("=")							SIZE 020,09 OF oDlg PIXEL
		If cPaisLoc == "BRA"
			@ nGetLin+10,aPosGet[1,6]  SAY oSAY4 VAR 0								SIZE 060,09 PICTURE TM(0,22,nNumDec) OF oDlg PIXEL RIGHT
		Else
			@ nGetLin+10,aPosGet[1,6]  SAY oSAY4 VAR 0								SIZE 050,09 PICTURE IIf(cPaisloc=="CHI",Nil,TM(0,22,nNumDec)) OF oDlg PIXEL RIGHT
		EndIf
		oDlg:Cargo	:= {|c1,n2,n3,n4| oSay1:SetText(c1),;
			oSay2:SetText(n2),;
			oSay3:SetText(n3),;
			oSay4:SetText(n4) }
		SetKey(VK_F4,{||A440Stok(NIL,"A410")})
		oGetd:=MsGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],nOpc,"A410LinOk","A410TudOk","+C6_ITEM/C6_Local/C6_TES/C6_CF/C6_PEDCLI",.T.,If(lGCT,aPedCpo[2],If(!Empty(SC5->C5_PEDEXP) .AND. GetMV("MV_EEC0023",,.F.),FAT2CposInt("SC6"),NIL)),nColFreeze,,ITENSSC6*IIF(MaGrade(),1,3.33),"A410Blq()",,,"A410ValDel()",,lFreeze)		
				
		If lIntACD 
			For nX:=1  To len(oGetd:AINFO)
						oGetd:AINFO[nX,4]:=IIF(Empty(oGetd:AINFO[nX,4]),"CBM410ACDL()",Trim(oGetd:AINFO[nX,4])+" .AND. CBM410ACDL()")
			Next nX
		EndIf 
		
		Private oGetDad := oGetD
		If Type("lCodBarra") <> "U"
			oGetd:oBrowse:bGotFocus:={|| IIF(lCodBarra .And. !lM410Bar,a410EntraBarra(oGetD),IIF(lCodBarra .And. lM410Bar,Execblock("M410CODBAR",.F.,.F.,{nOpc,oGetD}),))}
		EndIf

		If SC5->(FieldPos("C5_TPCOMPL")) > 0 
			nPosTpCompl := Ascan(oGetPV:aEntryCtrls,{|x| UPPER(TRIM(x:cReadVar))=="M->C5_TPCOMPL"})
			If nPosTpCompl > 0
				oGetPV:aEntryCtrls[nPosTpCompl]:lReadOnly := .T.
			EndIf	
		EndIf

		A410Bonus(2)
		Ma410Rodap(oGetD,nTotalPed,nTotalDes)
		ACTIVATE MSDIALOG oDlg ON INIT (A410Limpa(.F.,M->C5_TIPO),Ma410Bar(oDlg,{||nOpcA:=1,if(A410VldTOk(nOpc, aRecnoSE1RA).And.oGetD:TudoOk(),If(!obrigatorio(aGets,aTela),nOpcA := 0,oDlg:End()),nOpcA := 0)},{||Iif( Ma410VldUs(nOpca), oDlg:End(),)},nOpc,oGetD,nTotalPed,@aRecnoSE1RA,@aHeadAGG,@aColsAGG))
		SetKey(VK_F4,)
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Permite alterar a data de entrega de um item do pedido, ou   ³
		//³ sugerir uma data de entrega a partir da analise do APS       ³		
		//³ que somente eh executado via webservice/rotina automatica.   ³				
		//³ Valido somente para Integracao APS DRUMMER.                  ³						
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SuperGetMv("MV_APS",.F.,"") == "DRUMMER"
			
			/* ---- LOGICA UTILIZADA EM PORTUGUES ESTRUTURADO PARA MAIOR ENTENDIMENTO -----
		
			SE ( NAO EXISTIR O CAMPO SUGERIDO PARA DATA DE ENTREGA) ENTAO
				PROCURA AS REFERENCIAS DO C6_ENTREG NOS ITENS E SE ACHAR APAGA
			SENAO SE ( PARAMETRO QUE INDICA ONDE SERA FEITA A ATUALIZACAO DE ENTREGA FOR INFORMADO FOR PARA GRAVAR NO CAMPO SUGERIDO C6_SUGENTR ) ENTAO
				PROCURA NOS ITEMS DE ARRAY AS REFERENCIAS DE C6_ENTREG E ALTERA PARA C6_SUGENTR
			FIM SE
			 
			 */
		
			If SuperGetMv("MV_CPOPVEN",.F.,"C6_SUGENTR") == "C6_SUGENTR"
					For nCntFor:= 1 To Len(aAutoItens)
					nPos := AsCan(aAutoItens[nCntFor],{|x| AllTrim(x[1])=="C6_ENTREG"})            		
					If ( nPos > 0 )
						aAutoItens[nCntFor][nPos,1] := "C6_SUGENTR"
					EndIf
					Next nCntFor   				     			
			EndIf						
		EndIf
		 
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ validando dados pela rotina automatica                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If EnchAuto(cAlias,aAutoCab,{|| Obrigatorio(aGets,aTela)},aRotina[nOpc][4]) .and. MsGetDAuto(aAutoItens,"A410LinOk",{|| A410VldTOk(nOpc) .and. A410TudOk()},aAutoCab,aRotina[nOpc][4])
			nOpcA := 1
		EndIf
	EndIf
	If ( nOpcA == 1 )                           
		//
		// Template GEM - Gestao de Empreendimentos Imobiliarios
		// Gera o contrato baseado nos dados do pedido de venda
		//   
		If HasTemplate("LOT") .AND. ExistTemplate("GEMXPV",,.T.)
			// atualiza o status do empreendimento  
			For nX := 1 to Len(aCols)
				ExecTemplate("GEMXPV",.F.,.F.,{ aCols[nX][Len(aCols[nX])] ,SC6->C6_CODEMPR, 1 })
			Next nX
		EndIf		
		//  Amarracao do Pedido de venda com o pedido de compras 
		//  para a Central de Compras.		
		If !lWmsNew .and. nOpcA == 1 .AND. SC6->(FieldPos("C6_PEDCOM")) > 0 .AND.  SC6->(FieldPos("C6_ITPC")) > 0 .AND. SC6->(FieldPos("C6_FILPED")) > 0  
			A410CCPed(aCols,aHeader,aMTA177PER,2)   
		EndIf
		
		A410Bonus(1)
		If Type("lOnUpDate") == "U" .Or. lOnUpdate
			If a410Trava()
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Inicializa a gravacao dos lancamentos do SIGAPCO          ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				PcoIniLan("000100")
				Begin Transaction
					If !A410Grava(lLiber,lTransf,2,aHeadFor,aColsFor,aRegSC6,aRegSCV,nStack,aColsBn,aRecnoSE1RA,aHeadAGG,aColsAGG)
						Help(" ",1,"A410NAOREG")
					EndIf 				
				End Transaction
				// Gera execução das ordens de serviço
				If IntDL()
					WmsAvalExe()
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Finaliza a gravacao dos lancamentos do SIGAPCO            ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				PcoFinLan("000100")

				If lMt410Alt
					Execblock("MT410ALT",.F.,.F.)
				Endif

				If lTM410Stts
					ExecTemplate("M410STTS",.f.,.f.)
				Endif

				If lM410Stts
					ExecBlock("M410STTS",.f.,.f.)
				Endif
			EndIf
		Else
			aAutoCab := MsAuto2Ench("SC5")
			aAutoItens := MsAuto2Gd(aHeader,aCols)
		EndIf
	Else
		If ( (ExistBlock("M410ABN")) )
			ExecBlock("M410ABN",.f.,.f.)
		EndIf
	EndIf
	
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Limpa cliente anterior para proximo pedido                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
a410ChgCli("")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Destrava Todos os Registros                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
MsUnLockAll()
RestArea(aArea)
Return( nOpcA )
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a410Inclui³ Rev.  ³Eduardo Riera          ³ Data ³26.08.2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Inclusao do do pedido de venda                              ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Alias do cabecalho do pedido de venda                ³±±
±±³          ³ExpN2: Recno do cabecalho do pedido de venda                ³±±
±±³          ³ExpN3: Opcao do arotina                                     ³±±
±±³          ³ExpL4: Indica se a inclusao vem de um orcamento             ³±±
±±³          ³ExpL5: Recnos do arquivo SC5 de um orcamento                ³±±
±±³          ³ExpL6: Indica se a inclusao vem de um contrato de parceria  ³±±
±±³          ³ExpN7: Tipo do contrato (1=Aprovacao / 2=Remessa)           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a interface com o usua³±±
±±³          ³rio e o pedido de vendas                                    ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410Inclui(cAlias,nReg,nOpc,lOrcamento,nStack,aRegSCK,lContrat,nTpContr,cCodCli,cLoja,cMedPMS)


Local aPosObj   := {}
Local aObjects  := {}
Local aSize     := {}
Local aPosGet   := {}
Local aInfo     := {}
Local aCpos     := Nil
Local nOpcA 	:= 0
Local nCntFor	:= 0
Local nNumDec   := TamSX3("C6_VALOR")[2]
Local nGetLin   := 0
Local nColFreeze:= SuperGetMv("MV_PEDFREZ",.F.,0)
Local cCadastro := IIF(cCadastro == Nil,OemToAnsi("STR0007"),cCadastro) //"Atualiza‡„o de Pedidos de Venda"
Local cPedido   := "" 
Local cCpoContr := SuperGetMv("MV_CPOCONT",.F.,"C6_QTDVEN|C6_QTDLIB|C6_PRCVEN|C6_PRCUNIT")
Local cHblContr := SuperGetMv("MV_HBLCONT",.F.,"22")
Local cReadBkp  := ReadVar()
Local lHabilOrc := SuperGetMv("MV_HBLORC",.F.,"1") == "1"
Local lMt410Inc := Existblock("MT410INC")
Local lTMt410Inc:= ExistTemplate("MT410INC")
Local lM410Stts := ExistBlock("M410STTS")
Local lM410Bar  := ExistBlock("M410CODBAR")
Local lLiber	:= .F.
Local lTransf	:= .F.
Local lMemory   := .F.
Local lFreeze   := (SuperGetMv("MV_PEDFREZ",.F.,0) <> 0)
Local lContTPV  := SuperGetMv("MV_TELAPVX",.F.,.F.)
Local oDlg
Local oGetD
Local oSAY1
Local oSAY2
Local oSAY3
Local oSAY4
Local aNoFields := {}		// Campos que nao devem entrar no aHeader e aCols
Local aRecnoSE1RA := {} // Array com os titulos selecionados pelo Adiantamento
Local aCabCN120  := {} //-- Cabecalho para rotina automatica CNTA120
Local aItemCN120 := {} //-- Itens para rotina automatica CNTA120
Local nQUANT	 := 0
Local nTOTAL	 := 0
Local nENTREG	 := 0
Local nITEMED    := 0
Local nITEM	     := 0
Local nPRODUTO   := 0
Local nPRCVEN	 := 0      
Local nTS        := 0
Local cItem      := ""
Local lCNTA120   := .F.
Local nTotDesc   := 0
Local aHeadAGG    := {}
Local aColsAGG    := {}
Local nPosTpCompl := 0
Local lWmsNew     := SuperGetMV("MV_WMSNEW",.F.,.F.)

DEFAULT nStack := GetSX8Len() 
DEFAULT cCodCli   := ""
DEFAULT cLoja     := ""

Private oOrdServ   := Iif(Type("oOrdServ"  ) == "U", Iif(lWmsNew,WMSDTCOrdemServicoCreate():New(),Nil),oOrdServ)
Private aLibDCF   := Iif(Type("aLibDCF") == "U",{},aLibDCF)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Criar array PRIVATE p/ integracao com sistema de Distribuicao - NAO REMOVER ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aDistrInd:={}
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carrega perguntas do MATA440 e MATA410                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte("MTA440",.F.)
lLiber := MV_PAR02 == 1
lTransf:= MV_PAR01 == 1
Pergunte("MTA410",.F.) 
//Carrega as variaveis com os parametros da execauto
Ma410PerAut()

If cPaisLoc == "PTG"

	bRefresh := {|| Eval(bDoRefresh)}   

	MaFisIni('ZZZZZZ',;// 1-Codigo Cliente/Fornecedor
		'ZZ',;		// 2-Loja do Cliente/Fornecedor
		"C",;				// 3-C:Cliente , F:Fornecedor
		"N",;				// 4-Tipo da NF
		Nil,;		// 5-Tipo do Cliente/Fornecedor
		Nil,;
		Nil,;
		Nil,;
		Nil,;
		"MATA461",;
		Nil,;
		Nil,;
		Nil,;
		Nil,;
		Nil,;
		Nil,;
		Nil,;
	) 

EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variavel utilizada p/definir Op. Triangulares.       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IsTriangular( (MV_PAR03==1) )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Array para controlar relacionamento com SD4 (Remessa para Beneficiamento ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aColsBn := {}
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta a entrada de dados do arquivo                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aTela[0][0]
PRIVATE aGets[0]
PRIVATE bArqF3
PRIVATE bCpoF3
PRIVATE aTrocaF3  := {}
PRIVATE aHeadFor  := {}
PRIVATE aColsFor  := {}
PRIVATE N         := 1
PRIVATE oGetPV	  := Nil     

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis para integração com SIGAGCT                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE cContra  := Space(TamSX3("CN9_NUMERO")[1])
PRIVATE cRevisa  := Space(TamSX3("CN9_REVISA")[1])
PRIVATE cCompet  := Space(TamSX3("CNF_COMPET")[1])
PRIVATE cPlan    := Space(TamSX3("CNA_NUMERO")[1])
PRIVATE cParcel  := Space(TamSX3("CNF_PARCEL")[1])
PRIVATE lFixo    := .T. //Contrato Fixo

//Se não for rotina automática, inclui campos no array para não exibir
If ( Type("l410Auto") <> "U" .And. !l410Auto )
	aNoFields := { "C6_NUM","C6_QTDEMP","C6_QTDENT","C6_QTDEMP2","C6_QTDENT2", "C6_SLDALIB" }
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o campo de codigo de lancamento cat 83 ³
//³deve estar visivel no acols                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SC6->(FieldPos("C6_CODLAN"))>0 .and. !SuperGetMV("MV_CAT8309",,.F.)
	aAdd(aNoFields,"C6_CODLAN")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria Ambiente/Objeto para tratamento de grade        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If FindFunction("MsMatGrade") .And. IsAtNewGrd()
	PRIVATE oGrade	  := MsMatGrade():New('oGrade',,"C6_QTDVEN",,"a410GValid()",;
	{ 	{VK_F4,{|| A440Saldo(.T.,oGrade:aColsAux[oGrade:nPosLinO][aScan(oGrade:aHeadAux,{|x| AllTrim(x[2])=="C6_LOCAL"})])}} },;
	{ 	{"C6_QTDVEN",.T., {{"C6_UNSVEN",{|| ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),aCols[nLinha][nColuna],0,2) } }} },;
	{"C6_QTDLIB",NIL,NIL},;
	{"C6_QTDENT",NIL,NIL},;
	{"C6_ITEM"	,NIL,NIL},;
	{"C6_OPC"	,NIL,NIL},;
	{"C6_BLQ"	,NIL,NIL},;
	{"C6_NUMOP",NIL,NIL},;
	{"C6_ITEMOP",NIL,NIL},;	
	{"C6_UNSVEN",NIL, {{"C6_QTDVEN",{|| ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),0,aCols[nLinha][nColuna],1) }}} };
	})

	//-- Inicializa grade multicampo
	A410InGrdM(.T.)
Else
	PRIVATE aColsGrade:= {}
	PRIVATE aHeadGrade:= {}
EndIf

DEFAULT aRegSCK   := {}
DEFAULT nTpContr  := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³O Orcamento de Venda n„o permite grade de produtos                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
lOrcamento := If(ValType(lOrcamento)=="L",lOrcamento,.F.)
lContrat   := If(ValType(lContrat)  =="L",lContrat  ,.F.)
l416Auto   := If (Type("l416Auto") == "U",.f.,l416Auto)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³A inicializacao das variaveis ja foi feita pela rotina de Orcamento     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( !lOrcamento )
	PRIVATE aHeader   := {}
	PRIVATE aCols     := {}

	PRIVATE aGEMCVnd :={"",{},{}} //Template GEM - Condicao de Venda

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Salva a integridade dos campos de Bancos de Dados    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SC5")
	dbSetOrder(1)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Inicializa desta forma para criar uma nova instancia de variaveis private ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	RegToMemory( "SC5", .T., .F. )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Montagem do aHeader e aCols                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	FillGetDados(nOPc,"SC6",1,/*cSeek*/,/*{|| &cWhile }*/,{||.T.},aNoFields,/*aYesFields*/,/*lOnlyYes*/,/*cQuery*/,/*bMontCols*/,.T.)
	aCols[1][1] := "01"
	

	If !Empty(cCodCli) .And. !Empty(cLoja)

		ALTERA   := (aRotina[nOpc,4] == 4)
		INCLUI   := (aRotina[nOpc,4] == 3)
		lRefresh := .T.

		M->C5_CLIENTE := cCodCli
		__ReadVar := "M->C5_CLIENTE"
		lRet := CheckSX3("C5_CLIENTE")

		If lRet
			If ExistTrigger("C5_CLIENTE")
				RunTrigger(1,Nil,Nil,,"C5_CLIENTE")
			Endif


			M->C5_LOJACLI := cLoja
			__ReadVar := "M->C5_LOJACLI"
			lRet := CheckSX3("C5_LOJACLI")

			If lRet
				If ExistTrigger("C5_CLIENTE")
					RunTrigger(1,Nil,Nil,,"C5_LOJACLI")
				Endif
			Endif

		Endif

		__ReadVar := cReadBkp

	Endif

EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica os campos do contrato se serao habilitados      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lContrat
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica os os parametros estao ativos para a movimentacao  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If (nTpContr == 1 .And. SubStr(cHblContr,1,1) == "1") .Or. (nTpContr == 2 .And. SubStr(cHblContr,2,1) == "1")
		aCpos:= {}
		For nCntFor := 1 To Len(aHeader)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica o campos esta no parametro MV_CPOCONTR          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !(Alltrim(aHeader[nCntFor][2]) $ cCpoContr)
				aadd(aCpos,aHeader[nCntFor][2])
			EndIf
		Next nCntFor
	Endif
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica os campos da Medicao do PMS que serao liberados para visualizacao na getdados ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cMedPMS <> Nil
	aCpos:= {}
	For nCntFor := 1 To Len(aHeader)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica o campos esta no parametro MV_CPOCONTR          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !(Alltrim(aHeader[nCntFor][2]) $ cMedPMS)
			aadd(aCpos,aHeader[nCntFor][2])
		EndIf
	Next nCntFor
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Inicializa ambiente de integração com Planilha ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If FindFunction("A410RvPlan")
	A410RvPlan("","",.T.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monta o array com as formas de pagamento do SX5³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Ma410MtFor(@aHeadFor,@aColsFor)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Estabelece a Troca de Clientes conforme o Tipo do Pedido de Venda      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( M->C5_TIPO $ "DB" )
	aTrocaF3 := {{"C5_CLIENTE","SA2"}}
Else
	aTrocaF3 := {}
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se eh rotina de inclusao automatica          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( Type("l410Auto") == "U" .Or. ! l410Auto )
	If !( l416Auto )

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Caso seja orcamento verifica se o parametro permite a alteracao do     ³
		//³ pedido na efetivacao. Caso nao permita troca variaveis de parametro da ³
		//³ Enchoice para apenas visualizacao.                                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lOrcamento
			lMemory   := .T.
			If !lHabilOrc .Or. (lContrat .And. SubStr(cHblContr,3,1) == "1")
				Private aRotina := {{"","",0,2}}
				nOpc      := 1
			Else
				Private aRotina := {{"","",0,2},{"","",0,3}}
				//Incializa as variaveis para os gatilhos do campo C6_PRODUTO
				Private aColsCCust := aClone(aCols)
				Private aBkpAGG := {}
				nOpc      := 2			
			EndIf
		Endif
		  //Antes da abertura da Tela de Inclusao
		If ( (ExistBlock("M410INIC")) )
			ExecBlock("M410INIC",.F.,.F.)
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Faz o calculo automatico de dimensoes de objetos     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aSize := MsAdvSize()
		aObjects := {}
		AAdd( aObjects, { 100, 100, .t., .t. } )
		AAdd( aObjects, { 100, 100, .t., .t. } )
		AAdd( aObjects, { 100, 020, .t., .f. } )
		aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
		aPosObj := MsObjSize( aInfo, aObjects )
		aPosGet := MsObjGetPos(aSize[3]-aSize[1],315,{{003,033,160,200,240,263}} )
		nGetLin := aPosObj[3,1]
		If lContTPV		
			DEFINE MSDIALOG oDlg TITLE cCadastro From aSize[7],0 to aSize[6],aSize[5] of oMainWnd PIXEL STYLE nOR( WS_VISIBLE ,DS_MODALFRAME )
		Else
			DEFINE MSDIALOG oDlg TITLE cCadastro From aSize[7],0 to aSize[6],aSize[5] of oMainWnd PIXEL
		EndIf
		oGetPV:=MSMGet():New( "SC5", nReg, nOpc, , , , , aPosObj[1],,3,,,"A415VldTOk",,,lMemory)
//		@ nGetLin,aPosGet[1,1]  SAY OemToAnsi(IIF(M->C5_TIPO$"DB",STR0008,STR0009)) SIZE 020,09 PIXEL	//"Fornec.:"###"Cliente: "
		@ nGetLin,aPosGet[1,2]  SAY oSAY1 VAR Space(40)						SIZE 120,09 PICTURE "@!"	OF oDlg PIXEL
		@ nGetLin,aPosGet[1,3]  SAY OemToAnsi(STR0011)						SIZE 020,09 OF oDlg	PIXEL //"Total :"
		@ nGetLin,aPosGet[1,4]  SAY oSAY2 VAR 0 PICTURE IIf(cPaisloc=="CHI",Nil,TM(0,22,nNumDec))		SIZE 060,09 OF oDlg PIXEL
		@ nGetLin,aPosGet[1,5]  SAY OemToAnsi(STR0012)						SIZE 030,09 OF oDlg PIXEL	//"Desc. :"
		@ nGetLin,aPosGet[1,6]  SAY oSAY3 VAR 0 PICTURE IIf(cPaisloc=="CHI",Nil,TM(0,22,nNumDec))		SIZE 060,09 OF oDlg	PIXEL	RIGHT
		@ nGetLin+10,aPosGet[1,5]  SAY OemToAnsi("=")							SIZE 020,09 OF oDlg PIXEL
		@ nGetLin+10,aPosGet[1,6]  SAY oSAY4 VAR 0								SIZE 060,09 PICTURE IIf(cPaisloc=="CHI",Nil,TM(0,22,nNumDec)) OF oDlg PIXEL RIGHT
		oDlg:Cargo	:= {|c1,n2,n3,n4| oSay1:SetText(c1),;
			oSay2:SetText(n2),;
			oSay3:SetText(n3),;
			oSay4:SetText(n4) }
		SetKey(VK_F4,{||A440Stok(NIL,"A410")})
		#IFDEF TOP
			SetKey(VK_F9,{||A410KeyF9()})
		#ENDIF

		If SC5->(FieldPos("C5_TPCOMPL")) > 0 .And. !(M->C5_TIPO $ "C") 
			nPosTpCompl := Ascan(oGetPV:aEntryCtrls,{|x| UPPER(TRIM(x:cReadVar))=="M->C5_TPCOMPL"})
			If nPosTpCompl > 0
				oGetPV:aEntryCtrls[nPosTpCompl]:lReadOnly := .T.
			EndIf	
		EndIf

		oGetd:=MsGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],nOpc,"A410LinOk","A410TudOk","+C6_ITEM/C6_Local/C6_TES/C6_CF/C6_PEDCLI",.T.,aCpos,nColFreeze,,ITENSSC6*IIF(MaGrade(),1,3.33),"A410FldOk(3)",,,"A410ValDel(.F.)",,lFreeze)				
		Private oGetDad:=oGetd
		If Type("lCodBarra") <> "U"
			oGetd:oBrowse:bGotFocus:={|| IIF(lCodBarra .And. !lM410Bar,a410EntraBarra(oGetD),IIF(lCodBarra .And. lM410Bar,Execblock("M410CODBAR",.F.,.F.,{nOpc,oGetD}),))}
		EndIf
		A410Bonus(2)
		Ma410Rodap(oGetd)
		ACTIVATE MSDIALOG oDlg ON INIT (A410Limpa(.F.,M->C5_TIPO),Ma410Bar(oDlg,{||nOpcA:=1,If(A410VldTOk(nOpc, aRecnoSE1RA).And.oGetd:TudoOk(),If(!obrigatorio(aGets,aTela),nOpcA:=0,oDlg:End()),nOpcA:=0)},{||Iif(Ma410VldUs(nOpca),oDlg:End(), ) },nOpc,oGetD,0,@aRecnoSE1RA,@aHeadAGG,@aColsAGG,,lOrcamento))
		SetKey(VK_F4,)
		SetKey(VK_F9,)
	EndIf
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Variaveis utilizadas pela rotina de inclusao automatica     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If EnchAuto(cAlias,aAutoCab,{|| Obrigatorio(aGets,aTela)},aRotina[nOpc][4]) .and. MsGetDAuto(aAutoItens,"A410LinOk",{|| A410VldTOk(nOpc) .and. A410TudOk()},aAutoCab)
		nOpcA := 1
	EndIf
EndIf
If ( l416Auto )
	A410TudOk()
	nOpcA := 1
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Efetua a Gravacao do Pedido de Venda                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( nOpcA == 1 )

	If lOrcamento
		a410Trava()
	Endif

	A410Bonus(1)
	cPedido := M->C5_NUM
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se eh orcamento para realizar a transacao total e nao por item ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Type("lOnUpDate") == "U" .Or. lOnUpdate
		If lOrcamento

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Troca o status de visualizacao para inclusao caso nao permita a alte   ³
			//³ racao do pedido de venda na efetivacao do orcamento                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			If !lHabilOrc
				INCLUI := .T.
			Endif

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Inicializa a gravacao dos lancamentos do SIGAPCO          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PcoIniLan("000100")
			Begin Transaction
				If ( !A410Grava(lLiber,lTransf,1,aHeadFor,aColsFor,,,,aColsBn,aRecnoSE1RA,aHeadAGG,aColsAGG) )
					Help(" ",1,"A410NAOREG")
				Else
					If ( cPedido <> M->C5_NUM )
						If !( Type("l410Auto") <> "U" .And. l410Auto )
							Help(" ",1,"NUMSEQ",,M->C5_NUM,4,15)
						EndIf
					EndIf
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Chama  funcao de atualizacao do orcamento com os dados do pedido        ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				M416AtuSCK(aRegSCK)

			End Transaction
			// Gera execução das ordens de serviço
			If IntDL()
				WmsAvalExe()
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Finaliza a gravacao dos lancamentos do SIGAPCO            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PcoFinLan("000100")

		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Inicializa a gravacao dos lancamentos do SIGAPCO          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PcoIniLan("000100") 
			
			If !Empty(M->C5_MDCONTR) .And. Empty(M->C5_MDNUMED)
				lCNTA120 := .T.
				cNumMed := CriaVar("CND_NUMMED")
				M->C5_MDNUMED := cNumMed
			EndIf

			If ( !A410Grava(lLiber,lTransf,1,aHeadFor,aColsFor,NIL,NIL,nStack,aColsBn,aRecnoSE1RA,aHeadAGG,aColsAGG) )
				Help(" ",1,"A410NAOREG")
			Else	
				If ( cPedido <> M->C5_NUM )
					If !( Type("l410Auto") <> "U" .And. l410Auto )
						Help(" ",1,"NUMSEQ",,M->C5_NUM,4,15)
					EndIf
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Tratamento para, quando PV integrado com GCT, grave a  ³
				//³ medicao via rotina automatica (CNTA120).			   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ				
				If lCNTA120
					nQUANT   := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_QTDVEN"})
					nTOTAL   := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_VALOR"})
					nENTREG  := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_ENTREG"})
					nITEMED  := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_ITEMED"})
					nITEM	 := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_ITEM"})
					nPRODUTO := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_PRODUTO"})
					nPRCVEN  := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_PRCVEN"})
					nPRUNIT  := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_PRUNIT"})     
					nTS		 := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_TES"})
									
					aAdd(aCabCN120,{"CND_CONTRA",cContra,NIL})
					aAdd(aCabCN120,{"CND_REVISA",cRevisa,NIL})
					aAdd(aCabCN120,{"CND_COMPET",cCompet,NIL})
					aAdd(aCabCN120,{"CND_NUMERO",cPlan,NIL})
					aAdd(aCabCN120,{"CND_NUMMED",cNumMed,NIL})
					If !Empty(CND->(FieldPos("CND_PARCEL")))
						aAdd(aCabCN120,{"CND_PARCEL",cParcel,NIL})
					EndIf
					aAdd(aCabCN120,{"CND_MOEDA",M->C5_MOEDA,NIL})
					//Calcula desconto aplicado
					aEval(aCols,{|x| nTotDesc += x[nPRUNIT]*x[nQUANT] - x[nPRCVEN]*x[nQUANT]})
					If nTotDesc > 0
						aAdd(aCabCN120,{"CND_DESCME",A410Arred(nTotDesc,"C6_VALOR"),NIL})
					EndIf
					aAdd(aCabCN120,{"CND_OBS",STR0136 +cPedido +".",NIL}) //Medição gerada automaticamente a partir da inclusão do pedido de venda número ###.
					aAdd(aCabCN120,{"NUMPED",cPedido,NIL})
					aAdd(aCabCN120,{"CND_SERVIC","1",NIL})
					
					For nCntFor := 1 To Len(aCols)
						If !lFixo .And. aCols[nCntFor,Len(aHeader)+1]
							Loop
						ElseIf !lFixo .Or. !Empty(aCols[nCntFor,nITEMED])
							aAdd(aItemCN120,{})
							//-- Preenche item da medicao, de acordo com a existencia de planilha
							If lFixo
								cItem := aCols[nCntFor,nITEMED]
							Else
								cItem := Right(aCols[nCntFor,nITEM],TamSX3("CNB_ITEM")[1])
								cItem := PadL(cItem,TamSX3("CNB_ITEM")[1],"0")
							EndIf
							
							aAdd(aItemCN120[Len(aItemCN120)],{"CNE_ITEM",cItem,NIL})
							aAdd(aItemCN120[Len(aItemCN120)],{"CNE_PRODUT",aCols[nCntFor,nPRODUTO],NIL})
							If !aCols[nCntFor,Len(aHeader)+1]
								aAdd(aItemCN120[Len(aItemCN120)],{"CNE_QUANT",aCols[nCntFor,nQUANT],NIL})
								If !lFixo
									aAdd(aItemCN120[Len(aItemCN120)],{"CNE_VLUNIT",aCols[nCntFor,nPRCVEN],NIL})    	
								EndIf
							Else
								aAdd(aItemCN120[Len(aItemCN120)],{"CNE_QUANT",0,NIL})
								aAdd(aItemCN120[Len(aItemCN120)],{"CNE_VLTOT",0,NIL})
							EndIf
							aAdd(aItemCN120[Len(aItemCN120)],{"CNE_DTENT",aCols[nCntFor,nENTREG],NIL})          
							aAdd(aItemCN120[Len(aItemCN120)],{"CNE_TS"   ,aCols[nCntFor,nTS],NIL})
						EndIf
					Next nCntFor
					
					//Processa Medicao - CNTA120
					MsgRun(STR0131,STR0127,{|| A410GrvMed(aCabCN120,aItemCN120)}) //SIGAGCT - Aguarde, processsando Medição...
				EndIf				
			EndIf

			// Gera execução das ordens de serviço
			If IntDL()
				WmsAvalExe()
			EndIf
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Finaliza a gravacao dos lancamentos do SIGAPCO            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PcoFinLan("000100")

		Endif
	Else
		aAutoCab := MsAuto2Ench("SC5")
		aAutoItens := MsAuto2Gd(aHeader,aCols)
	EndIf

	If lTMt410Inc
		ExecTemplate("MT410INC",.F.,.F.)
	Endif

	If lMt410Inc
		Execblock("MT410INC",.F.,.F.)
	Endif

	If lM410Stts
		ExecBlock("M410STTS",.f.,.f.)
	EndIf
Else
	If !( nModulo <> 5 .And. Type("l410Auto") <> "U" .And. l410Auto)
		While GetSX8Len() > nStack 
			RollBackSX8()
		EndDo
	EndIf
	If ( (ExistBlock("M410ABN")) )
		ExecBlock("M410ABN",.f.,.f.)
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Limpa cliente anterior para proximo pedido                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
a410ChgCli("")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Restaura a Integridade da Tela de Entrada                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cAlias)
Return( nOpcA )

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a410Deleta³ Rev.  ³Eduardo Riera          ³ Data ³26.08.2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Delecao do Pedido de Venda                                  ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Alias do cabecalho do pedido de venda                ³±±
±±³          ³ExpN2: Recno do cabecalho do pedido de venda                ³±±
±±³          ³ExpN3: Opcao do arotina                                     ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a interface com o usua³±±
±±³          ³rio e o pedido de vendas                                    ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410Deleta(cAlias,nReg,nOpc)

Local aArea     := GetArea()
Local aPosObj   := {}
Local aObjects  := {}
Local aSize     := {}
Local aPosGet   := {}
Local aRegSC6   := {}
Local aRegSCV   := {}
Local aInfo     := {}
Local lLiber 	:= .F.
Local lContinua := .T.
Local lGrade	:= MaGrade()
Local lFaturado := .F.
Local lQuery    := .F.
Local lContrat  := .F.
Local lPedTLMK  := .F.
Local lFreeze   := (SuperGetMv("MV_PEDFREZ",.F.,0) <> 0)
Local lContTPV  := SuperGetMv("MV_TELAPVX",.F.,.F.)
Local lWmsNew		:= SuperGetMV("MV_WMSNEW",.F.,.F.)
Local nOpcA		:= 0
Local nTotalPed := 0
Local nTotalDes := 0
Local nGetLin   := 0
Local nNumDec   := TamSX3("C6_VALOR")[2]
Local nColFreeze:= SuperGetMv("MV_PEDFREZ",.F.,0)
Local cArqQry   := "SC6"
Local cCadastro := IIF(cCadastro == Nil,OemToAnsi("STR0007"),cCadastro) //"Atualiza‡„o de Pedidos de Venda"
Local oDlg
Local oGetd
Local oSAY1
Local oSAY2
Local oSAY3
Local oSAY4
Local lMt410Ace := Existblock("MT410ACE")

//Gestao de Contratos
Local lGCT     := ((SC5->(FieldPos("C5_MDCONTR")) > 0) .And. !Empty(SC5->C5_MDCONTR))

Local cSeek     := ""
Local aNoFields := {}		// Campos que nao devem entrar no aHeader e aCols
Local bWhile    := {|| }
Local cQuery   := ""
Local bCond     := {|| .T. }
Local bAction1  := {|| Mta410Del(cArqQry,@nTotalPed,@nTotalDes,lGrade,@aRegSC6,@lPedTLMK,@lLiber,@lFaturado,lContrat) }	
Local bAction2  := {|| .T. }
Local aRecnoSE1RA := {} // Array com os titulos selecionados pelo Adiantamento     
Local aMTA177PER := {}  // Array para carregar as perguntas de central de compras
Local cEventID   := 0    // Variavel usada para armazenar o ID do EventViewer	  
Local cMessagem  := " " // Variavel para armazenar a mensagem utilizada no eventviewer
Local aHeadAGG    := {}
Local aColsAGG    := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas na LinhaOk                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aCols      := {}
PRIVATE aHeader    := {}
PRIVATE aHeadFor   := {}
PRIVATE aColsFor   := {}
PRIVATE N          := 1
PRIVATE aOPs       := {}
PRIVATE aTELA[0][0],aGETS[0]
PRIVATE oGetPV		:= Nil

PRIVATE aGEMCVnd :={"",{},{}} //Template GEM - Condicao de Venda

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o usuario tem premissao para alterar o ³
//³pedido de venda                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc <> "BRA" .AND. FieldPos("C5_CATPV") > 0 .AND. !Empty(SC5->C5_CATPV)
	If AliasIndic("AGS") //Tabela que relaciona usuario com os Tipos de Pedidos de vendas que ele tem acesso
		DBSelectArea("AGS")
		DBSetOrder(1)
		If DBSeek(xFilial("AGS") + __cUserId) //Se não encontrar o usuário na tabela, permite ele alterar o pedido
			If !DBSeek(xFilial("AGS") + __cUserId + SC5->C5_CATPV) //Verifica se o usuario tem premissao
				MsgStop(STR0167 + " " + STR0005 + " " + STR0168)//"Este usuario nao tem permissao para excluir pedidos de venda com essa categoria."
				lContinua := .F.
			EndIf
		EndIf
	EndIf
EndIf

//Se não for rotina automática, inclui campos no array para não exibir
If ( Type("l410Auto") <> "U" .And. !l410Auto )
	aNoFields := {"C6_NUM","C6_QTDEMP","C6_QTDENT","C6_QTDEMP2","C6_QTDENT2"}
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o campo de codigo de lancamento cat 83 ³
//³deve estar visivel no acols                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SC6->(FieldPos("C6_CODLAN"))>0 .and. !SuperGetMV("MV_CAT8309",,.F.)
	aAdd(aNoFields,"C6_CODLAN")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Agroindustria  									                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If FindFunction("OGXUtlOrig") //Encontra a função
	If OGXUtlOrig()
		If (FindFunction("OGX220"))
			lContinua := OGX220()
		EndIf
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para validar acesso do usuario na funcao ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lMt410Ace
	lContinua := Execblock("MT410ACE",.F.,.F.,{nOpc})
Endif
	 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Se o Pedido foi originado de um EDITAL - Nao Exclui  |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
If SC5->(FieldPos("C5_CODED")) > 0 .And. SC5->(FieldPos("C5_NUMPR")) > 0
	If !Empty(SC5->C5_NUMPR) .Or. !Empty(SC5->C5_CODED)
		Help(" ",1,"A410EDITAL") //"Pedido de Venda pertence a um Edital, e nao podera ser alterado, copiado ou excluido"
		lContinua := .F.
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria Ambiente/Objeto para tratamento de grade        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ                     
If FindFunction("MsMatGrade") .And. IsAtNewGrd()
	PRIVATE oGrade	  := MsMatGrade():New('oGrade',,"C6_QTDVEN",,"a410GValid()", ,;
							{ 	{"C6_QTDVEN",NIL,NIL},;
								{"C6_QTDLIB",NIL,NIL},;
								{"C6_QTDENT",NIL,NIL},;
								{"C6_ITEM"	,NIL,NIL},;
								{"C6_UNSVEN",NIL,NIL},;
								{"C6_OPC",NIL,NIL},;
								{"C6_NUMOP",NIL,NIL},;
								{"C6_ITEMOP",NIL,NIL},;
								{"C6_BLQ",NIL,NIL}	}) 

	//-- Inicializa grade multicampo
	A410InGrdM()
Else
	PRIVATE aColsGrade := {}
	PRIVATE aHeadgrade := {}	
EndIf	 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carrega perguntas do MTA177, MATA440 e MATA410                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ    
Pergunte ("MTA177",.F.)
AADD (aMTA177PER,{MV_PAR17,MV_PAR18} )
Pergunte("MTA440",.F.)
lTransf:= MV_PAR01 == 1 
Pergunte("MTA410",.F.)
//Carrega as variaveis com os parametros da execauto
Ma410PerAut()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variavel utilizada p/definir Op. Triangulares.       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IsTriangular( MV_PAR03==1 )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Executa o ponto de entrada M410ALOK                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cAlias)
IF ( (ExistBlock("M410ALOK")) )
	If (! ExecBlock("M410ALOK",.F.,.F.) )
		lContinua := .F.
	EndIf
EndIf

//Valida se o pedido foi Gerado por outra rotina ou produto
If lContinua //verifica existencia do campo
	If SC5->(FieldPos("C5_ORIGEM")) > 0
		If (Alltrim(SC5->C5_ORIGEM) == "PMSWMT410" .Or. Alltrim(SC5->C5_ORIGEM) == "MSGEAI" .Or. Alltrim(SC5->C5_ORIGEM) == "LOGIX") .And. !l410Auto
			msgalert(STR0239)//"Este Pedido não pode ser excluido pois foi gerado por outra rotina"
			lcontinua:=.F.
		Endif
	Endif
EndIf

IF ( SC5->C5_FILIAL <> xFilial("SC5") )
	Help(" ",1,"A000FI")
	lContinua := .F.
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Se o Pedido foi originado no SIGAEEC - Nao Exclui    |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SC5")
IF !Empty(SC5->C5_PEDEXP)  .AND. NMODULO != 29 .And. ( Type("l410Auto") == "U" .OR. !l410Auto )
	Help(" ",1,"MTA410DEL")
	lContinua := .F.
EndIf
		  
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Se o Pedido foi originado no SIGAGCT - Nao Exclui    |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SC5")
IF lGCT .And. (FunName() != "CNTA120" .And. FunName() != "CNTA150")
	Help(" ",1,"MTA410GCT")
	lContinua := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Verifica se o pedido tem carga montada               |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If OmsHasCg(SC5->C5_NUM)
	Help(" ",1,"A410CARGA")
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Se o Pedido foi originado no SIGATMS, verificar se   |
//| existe NF de Conhecimento.                           |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SC5->(FieldPos("C5_SOLFRE")) > 0 .And. !Empty(SC5->C5_SOLFRE)
	DT5->(dbSetOrder(1))
	If DT5->(dbSeek(xFilial("SC5")+SC5->C5_SOLFRE+SC5->C5_ITESOL))
		Help(" ",1, "A410NFCON")
		lContinua := .F.
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Se o Pedido foi originado no SIGALOJA - Nao Exclui    |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SC5->(FieldPos("C5_ORCRES")) > 0 .AND. !Empty(SC5->C5_ORCRES) .AND. (Type("l410Auto") == "U" .OR. !l410Auto)
	//"Este Pedido foi gerado através do módulo de Controle de Lojas, e somente poderá ser excluído através da exclusão da Venda que o originou."
	MsgAlert(STR0116)
	lContinua := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Se o Pedido foi originado no SIGALOJA Fechamento de Servico- Nao Exclui    |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lContinua .AND. SC5->(FieldPos("C5_ORIGEM")) > 0 .AND. Alltrim(SC5->C5_ORIGEM) == "LOJA870E" .AND.;
	AliasIndic("MFI") .AND. (Type("l410Auto") == "U" .OR. !l410Auto)		
		
	//"Este Pedido foi gerado através do módulo de Controle de Lojas - Fechamento de Serviço Financeiro, e somente poderá ser excluído através do Estorno do fechamento que o originou."
	MsgAlert(STR0270) 
	lContinua := .F.	
EndIf


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Se o Pedido foi originado no SIGALOJA E-COMMERCE Nao Exclui    |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lContinua .AND. SC5->(FieldPos("C5_PEDECOM")) > 0 .AND. !Empty(SC5->C5_PEDECOM) .AND.;
	 (Type("l410Auto") == "U" .OR. !l410Auto)		
		
	MsgAlert(STR0319)//"Este Pedido foi gerado através do módulo de Controle de Lojas  - e-commerce, e somente poderá ser excluído através da exclusão da Venda que o originou."
	lContinua := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Salva a integridade dos campos de Bancos de Dados    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cAlias)
If !SoftLock(cAlias)
	lContinua := .F.
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa desta forma para criar uma nova instancia de variaveis private ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RegToMemory( "SC5", .F., .F. )

If lContinua
	lContinua := If(lGrade.And.MatOrigGrd()=="SB4",If(FindFunction("VldDocGrd"),VldDocGrd(1,SC5->C5_NUM),.T.),.T.)
EndIf

If lContinua .And. SuperGetMV("MV_ISSXMUN",.F.,.F.)
	lContinua := ISSCAMARK()
EndIf

If ( lContinua )
	dbSelectArea("SC6")
	dbSetOrder(1)
	#IFDEF TOP
		If ( TcSrvType()<>"AS/400"  .And. !InTransact() .And. Ascan(aHeader,{|x| x[8] == "M"}) == 0 )
			lQuery  := .T.
			cQuery := "SELECT SC6.*,R_E_C_N_O_ SC6RECNO "
			cQuery += "FROM "+RetSqlName("SC6")+" SC6 "
			cQuery += "WHERE SC6.C6_FILIAL='"+xFilial("SC6")+"' AND "
			cQuery += "SC6.C6_NUM='"+SC5->C5_NUM+"' AND "
			cQuery += "SC6.D_E_L_E_T_<>'*' "
			cQuery += "ORDER BY "+SqlOrder(SC6->(IndexKey()))

			dbSelectArea("SC6")
			dbCloseArea()
		EndIf	
	#ENDIF
	cSeek  := xFilial("SC6")+SC5->C5_NUM
	bWhile := {|| C6_FILIAL+C6_NUM }


	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem do aHeader e aCols                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	FillGetDados(nOPc,"SC6",1,cSeek,bWhile,{{bCond,bAction1,bAction2}},aNoFields,/*aYesFields*/,/*lOnlyYes*/,cQuery,/*bMontCols*/,Inclui,/*aHeaderAux*/,/*aColsAux*/,{|| AfterCols(cArqQry) },/*bBeforeCols*/,/*bAfterHeader*/,"SC6")	

	If FindFunction("MATGRADE_V") .And. MATGRADE_V() >= 20110425 .And. "MATA410" $ SuperGetMV("MV_GRDMULT",.F.,"") .And. lGrade
		aCols := aColsGrade(oGrade,aCols,aHeader,"C6_PRODUTO","C6_ITEM","C6_ITEMGRD",aScan(aHeader,{|x| AllTrim(x[2]) == "C6_DESCRI"}))
	EndIf

	If AliasInDic("AGG")
		A410FRat(@aHeadAGG,@aColsAGG)	
	EndIf    

	nTotalDes  += A410Arred(nTotalPed*M->C5_PDESCAB/100,"C6_VALOR")
	nTotalPed  -= A410Arred(nTotalPed*M->C5_PDESCAB/100,"C6_VALOR")
	nTotalPed  -= M->C5_DESCONT
	nTotalDes  += M->C5_DESCONT
	
	If ( lQuery )
		dbSelectArea(cArqQry)
		dbCloseArea()
		ChkFile("SC6",.F.)
		dbSelectArea("SC6")
	EndIf
	
EndIf
If ( lContinua )
	//
	// Template GEM - Gestao de Empreendimentos Imobiliarios
	//
	// faz a copia da condicao de venda se a mesma tiver 
	// uma vinculacao com a condicao de pagamento
	//
	If ExistBlock("GEM410PV") 
		aGEMCVnd := ExecBlock("GEM410PV",.F.,.F.,{ M->C5_NUM ,M->C5_CONDPAG ,M->C5_EMISSAO ,nTotalPed })
	ElseIf ExistTemplate("GEM410PV") 
		// Copia a condicao de venda
		aGEMCVnd := ExecTemplate("GEM410PV",.F.,.F.,{ M->C5_NUM ,M->C5_CONDPAG ,M->C5_EMISSAO ,nTotalPed })
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Caso nao ache nenhum item , abandona rotina.         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( Len(aCols)  == 0 )
		Help(" ",1,"A410SEMREG")
		lContinua := .F.
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Caso algum item ja tenha sido FATURADO , impede a exclusao do PV ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( lFaturado )
		Help(" ",1,"A410REGFAT")
		lContinua := .F.
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Caso algum item ja tenha sido LIBERADO , impede a exclusao do PV ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( lLiber )
		Help(" ",1,"A410LIBER")
		lContinua  := .F.
	EndIf
	If ( ExistBlock("A410EXC") )
		lRdRet := ExecBlock("A410EXC",.F.,.F.)
		If ValType(lRdRet)=="L" .And. !lRdRet
			lContinua  := .F.
		EndIf
	EndIf
	If ( lContrat )
		Help(" ",1,"A410CTRPAR")
		lContinua := .F.
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Se algum item originou-se no telemarketing, impede a exclusao          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lPedTLMK
		Help( " ", 1, "A410TLMK" ) // Nao e possivel excluir um pedido com itens originados no TLMK
		lContinua := .F.
	EndIf
	
	//--  Pedidos gerados pelo Wms CrossDoc nao poderao ser excluidos
	If lContinua .and. lWmsNew
		lContinua:= A410VenComp(aCols,aHeader)
	EndIf
	

EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monta o array com as formas de pagamento do SX5³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Ma410MtFor(@aHeadFor,@aColsFor,@aRegSCV)
If ( lContinua )
	If ( Type("l410Auto") == "U" .OR. !l410Auto )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Faz o calculo automatico de dimensoes de objetos     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aSize := MsAdvSize()
		aObjects := {}
		AAdd( aObjects, { 100, 100, .t., .t. } )
		AAdd( aObjects, { 100, 100, .t., .t. } )
		AAdd( aObjects, { 100, 020, .t., .f. } )
		aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
		aPosObj := MsObjSize( aInfo, aObjects )
		aPosGet := MsObjGetPos(aSize[3]-aSize[1],315,{{003,033,160,200,240,263}} )
		nGetLin := aPosObj[3,1]
		If lContTPV		
			DEFINE MSDIALOG oDlg TITLE cCadastro From aSize[7],0 to aSize[6],aSize[5] of oMainWnd PIXEL STYLE nOR( WS_VISIBLE ,DS_MODALFRAME )
		Else
			DEFINE MSDIALOG oDlg TITLE cCadastro From aSize[7],0 to aSize[6],aSize[5] of oMainWnd PIXEL
		EndIf			
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Armazenar dados do Pedido anterior.                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF M->C5_TIPO $ "DB"
			aTrocaF3 := {{"C5_CLIENTE","SA2"}}
		Else
			aTrocaF3 := {}
		EndIf
		oGetPV:=MSMGet():New( "SC5", nReg, nOpc, , , , , aPosObj[1],,3,,,"A415VldTOk")
//		@ nGetLin,aPosGet[1,1] SAY OemToAnsi(IIF(M->C5_TIPO$"DB",STR0008,STR0009)) SIZE 020,09 OF oDlg PIXEL	//"Fornec.:"###"Cliente: "
		@ nGetLin,aPosGet[1,2] SAY oSAY1 VAR Space(40)						SIZE 120,09 PICTURE "@!"	OF oDlg PIXEL
		@ nGetLin,aPosGet[1,3] SAY OemToAnsi(STR0011)						SIZE 020,09 OF oDlg PIXEL	//"Total :"
		@ nGetLin,aPosGet[1,4]  SAY oSAY2 VAR 0 PICTURE TM(0,22,Iif(cPaisloc=="CHI" .And. M->C5_MOEDA == 1,NIL,nNumDec))		SIZE 060,09 OF oDlg PIXEL
		@ nGetLin,aPosGet[1,5]  SAY OemToAnsi(STR0012)						SIZE 030,09 OF oDlg PIXEL 	//"Desc. :"
		@ nGetLin,aPosGet[1,6]  SAY oSAY3 VAR 0 PICTURE TM(0,22,Iif(cPaisloc=="CHI" .And. M->C5_MOEDA == 1,NIL,nNumDec))		SIZE 060,09 OF oDlg PIXEL RIGHT
		@ nGetLin+10,aPosGet[1,5]  SAY OemToAnsi("=")							SIZE 020,09 OF oDlg PIXEL
		@ nGetLin+10,aPosGet[1,6]  SAY oSAY4 VAR 0								SIZE 060,09 PICTURE TM(0,22,Iif(cPaisloc=="CHI" .And. M->C5_MOEDA == 1,NIL,nNumDec)) OF oDlg PIXEL	 RIGHT
		oDlg:Cargo	:= {|c1,n2,n3,n4| oSay1:SetText(c1),;
			oSay2:SetText(n2),;
			oSay3:SetText(n3),;
			oSay4:SetText(n4) }
		Set Key VK_F4 to A440Stok(NIL,"A410")
		oGetd:=MsGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],nOpc,"A410LinOk","A410DelOk","+C6_ITEM/C6_Local/C6_TES/C6_CF/C6_PEDCLI",.T.,,nColFreeze,,ITENSSC6*IIF(MaGrade(),1,3.33),"A410Blq()",,,,,lFreeze)		
		Ma410Rodap(oGetD,nTotalPed,nTotalDes)
		ACTIVATE MSDIALOG oDlg ON INIT (A410Limpa(.F.,M->C5_TIPO),Ma410Bar(oDlg,{||If(A410DelOk().And.A410VldTOk(nOpc, aRecnoSE1RA),(nOpcA:=2,oDlg:End()),nOpcA := 0)},{||Iif( Ma410VldUs( nOpca ), oDlg:End(),  ) },nOpc,oGetD,nTotalPed,@aRecnoSE1RA,@aHeadAGG,@aColsAGG))
	Else
		nOpcA := 2
	EndIf
	If ( nOpcA == 2  )
		If Type("lOnUpDate") == "U" .Or. lOnUpdate
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Inicializa a gravacao dos lancamentos do SIGAPCO          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PcoIniLan("000100") 

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Aciona integração via mensagem única          				³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	
			If FindFunction('GETROTINTEG') .And. FWHasEAI("MATA410",.T.,,.T.)
				FwIntegDef( 'MATA410' )
			EndIf
 
			A410Grava(lLiber,lTransf,3,aHeadFor,aColsFor,aRegSC6,aRegSCV,,,aRecnoSE1RA,aHeadAGG,aColsAGG)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Event Viewer - Envia e-mail ou RSS para exclusao de pedidos de vendas   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			  If GetRpoRelease("R5") // Verifica se o Release e 11.5    
				cEventID  := "031" //Exclusao de pedidos de vendas
				cMessagem := STR0160+SC5->C5_NUM+"."	
				EventInsert(FW_EV_CHANEL_ENVIRONMENT, FW_EV_CATEGORY_MODULES, cEventID,FW_EV_LEVEL_INFO,""/*cCargo*/,STR0159,cMessagem)
			 Else   	
					MEnviaMail("031",{SC5->C5_NUM,SC5->C5_CLIENTE,SC5->C5_LOJACLI})
			 End If   	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Integracao com SIGASGA (NG Informatica)                    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SuperGetMv("MV_NGSGAFA",.F.,"2") == "1" .and. FindFunction("SG530CANC")
				SG530CANC(SC5->C5_NUM)//Cancela MTR
			Endif
							
			If ( (ExistTemplate("M410STTS") ) )
				ExecTemplate("M410STTS",.f.,.f.)
			Endif

			If ( (ExistBlock("M410STTS") ) )
				ExecBlock("M410STTS",.f.,.f.)
			Endif
				
			//  Amarracao do Pedido de venda com o pedido de compras 
			 //  para a Central de Compras.		
			
			If !lWmsNew .and. SC6->(FieldPos("C6_PEDCOM")) > 0 .AND.  SC6->(FieldPos("C6_ITPC")) > 0 .AND. SC6->(FieldPos("C6_FILPED")) > 0 
				A410CCPed(aCols,aHeader,aMTA177PER,1)   
			 EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Finaliza a gravacao dos lancamentos do SIGAPCO            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PcoFinLan("000100")

		Else
			aAutoCab := MsAuto2Ench("SC5")
			aAutoItens := MsAuto2Gd(aHeader,aCols)
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Exclui a amarracao com os conhecimentos                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
MsDocument( "SC5", SC5->( RecNo() ), 2, , 3 ) 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Destrava Todos os Registros                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
MsUnLockAll()
RestArea(aArea)
Return nOpcA

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a410PCopia³ Autor ³ Henry Fila            ³ Data ³17/09/2004³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Prepara a funcao de copia para evitar que seja chamada a   ³±±
±±³          ³ janela de filiais                                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Alias do cabecalho do pedido de venda                ³±±
±±³          ³ExpN2: Recno do cabecalho do pedido de venda                ³±±
±±³          ³ExpN3: Opcao do arotina                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function a410PCopia(cAlias,nReg,nOpc)

Local aRotBkp := aClone(aRotina)
Local lRet:=.T.

aRotina := { { OemToAnsi(STR0001),"AxPesqui"  ,0,1},;		//"Pesquisar"
	{ OemToAnsi(STR0002),"A410Visual",0,2},;		//"Visual"
	{ OemToAnsi(STR0003),"A410Copia",0,3}}		//"Incluir"
  
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Se o Pedido foi originado de um EDITAL - Nao COPIA   |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
If SC5->(FieldPos("C5_CODED")) > 0 .And. SC5->(FieldPos("C5_NUMPR")) > 0
	If !Empty(SC5->C5_NUMPR) .Or. !Empty(SC5->C5_CODED)
		Help(" ",1,"A410EDITAL") //"Pedido de Venda pertence a um Edital, e nao podera ser alterado, copiado ou excluido"
		lRet:=.F.
	EndIf
EndIf

If lRet
	a410Copia(calias,nReg,3)
EndIf

aRotina := aClone(aRotBkp)

Return(lRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a410Copia ³Autor  ³Eduardo Riera          ³ Data ³07.09.2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Copia do Pedido de Venda                                    ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Alias do cabecalho do pedido de venda                ³±±
±±³          ³ExpN2: Recno do cabecalho do pedido de venda                ³±±
±±³          ³ExpN3: Opcao do arotina                                     ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a interface com o usua³±±
±±³          ³rio e o pedido de vendas                                    ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410Copia(cAlias,nReg,nOpc)

Local aArea     := GetArea()
Local aPosObj   := {}
Local aObjects  := {}
Local aSize     := {}
Local aPosGet   := {}
Local aRegSC6   := {}
Local aRegSCV   := {}
Local aInfo     := {}
Local lLiber 	:= .F.
Local lTransf	:= .F.
Local lGrade	:= MaGrade()
Local lQuery    := .F.
Local lContinua := .T.
Local lFreeze   := (SuperGetMv("MV_PEDFREZ",.F.,0) <> 0)
Local nOpcA		:= 0
Local nTotalPed := 0
Local nTotalDes := 0
Local nNumDec   := TamSX3("C6_VALOR")[2]
Local nGetLin   := 0
Local nStack    := GetSX8Len() 
Local nColFreeze:= SuperGetMv("MV_PEDFREZ",.F.,0)
Local lContTPV  := SuperGetMv("MV_TELAPVX",.F.,.F.)
Local cArqQry   := "SC6"
Local cCadastro := IIF(cCadastro == Nil,OemToAnsi("STR0007"),cCadastro) //"Atualiza‡„o de Pedidos de Venda"
Local cTipoDat  := SuperGetMv("MV_TIPCPDT",.F.,"1")
Local oDlg
Local oGetd
Local dOrig     := Ctod("//")
Local dCopia    := Ctod("//")
Local oSAY1
Local oSAY2
Local oSAY3
Local oSAY4
Local lMt410Ace := Existblock("MT410ACE")
Local lCpyFCI   := SuperGetMV("MV_FCICPY",,.F.) 

Local cSeek     := ""
Local aNoFields := {"C6_NUM","C6_QTDEMP","C6_QTDENT","C6_QTDEMP2","C6_QTDENT2"}		// Campos que nao devem entrar no aHeader e aCols
Local bWhile    := {|| }
Local cQuery    := ""
Local bCond     := {|| .T. }
Local lCopia    := .T.
Local bAction1  := {|| Mta410Cop(cArqQry,@nTotalPed,@nTotalDes,lGrade, lCopia) }	
Local bAction2  := {|| .T. }
Local aRecnoSE1RA := {} // Array com os titulos selecionados pelo Adiantamento
Local aHeadAGG    := {}
Local aColsAGG    := {}
Local nPosTpCompl := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas na LinhaOk                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aCols      := {}
PRIVATE aHeader    := {}
PRIVATE aHeadFor   := {}
PRIVATE aColsFor   := {}
PRIVATE N          := 1
PRIVATE oGetPV		:= Nil

PRIVATE aGEMCVnd :={"",{},{}} //Template GEM - Condicao de Venda

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta a entrada de dados do arquivo                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aTELA[0][0],aGETS[0]

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Array para controlar relacionamento com SD4 (Remessa para Beneficiamento ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aColsBn := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o campo de codigo de lancamento cat 83 ³
//³deve estar visivel no acols                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SC6->(FieldPos("C6_CODLAN"))>0 .and. !SuperGetMV("MV_CAT8309",,.F.)
	aAdd(aNoFields,"C6_CODLAN")
EndIf

If SC6->(FieldPos("C6_FCICOD"))>0 .AND. !lCpyFCI 
	aAdd(aNoFields,"C6_FCICOD")
EndIf



//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Agroindustria  									                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If FindFunction("OGXUtlOrig") //Encontra a função
	If OGXUtlOrig()
		If (FindFunction("OGX220"))
			lContinua := OGX220()
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para validar acesso do usuario na funcao ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lMt410Ace
	lContinua := Execblock("MT410ACE",.F.,.F.,{nOpc})
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Cria Ambiente/Objeto para tratamento de grade        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ    
If FindFunction("MsMatGrade") .And. IsAtNewGrd()
	PRIVATE oGrade	  := MsMatGrade():New('oGrade',,"C6_QTDVEN",,"a410GValid()",;
							{ 	{VK_F4,{|| A440Saldo(.T.,oGrade:aColsAux[oGrade:nPosLinO][aScan(oGrade:aHeadAux,{|x| AllTrim(x[2])=="C6_LOCAL"})])}} },;
							{ 	{"C6_QTDVEN",.T.,{{"C6_UNSVEN",{|| ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),aCols[nLinha][nColuna],0,2) } }} },;
								{"C6_QTDLIB",NIL,NIL},;
								{"C6_QTDENT",NIL,NIL},;
								{"C6_ITEM"	,NIL,NIL},;
								{"C6_UNSVEN", {{"C6_QTDVEN",{|| ConvUm(AllTrim(oGrade:GetNameProd(,nLinha,nColuna)),0,aCols[nLinha][nColuna],1) }}} },;
								{"C6_OPC",NIL,NIL},;
								{"C6_NUMOP",NIL,NIL},;
								{"C6_ITEMOP",NIL,NIL},;
								{"C6_BLQ",NIL,NIL};
							}) 

	//-- Inicializa grade multicampo
	A410InGrdM(.T.)
Else
	PRIVATE aColsGrade := {}
	PRIVATE aHeadgrade := {}
EndIf	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carrega perguntas do MATA440 e MATA410                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
INCLUI := .T.
ALTERA := .F.

Pergunte("MTA440",.F.)
lLiber := MV_PAR02 == 1
lTransf:= MV_PAR01 == 1
Pergunte("MTA410",.F.)
//Carrega as variaveis com os parametros da execauto
Ma410PerAut()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variavel utilizada p/definir Op. Triangulares.       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IsTriangular( MV_PAR03==1 )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Salva a integridade dos campos de Bancos de Dados    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cAlias)
IF ( (ExistBlock("M410ALOK")) )
	If (! ExecBlock("M410ALOK",.F.,.F.) )
		lContinua := .F.
	EndIf
EndIf
IF ( SC5->C5_FILIAL <> xFilial("SC5") )
	Help(" ",1,"A000FI")
	lContinua := .F.
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Se o Pedido foi originado no SIGATMS - Nao Copia     |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SC5->(FieldPos("C5_SOLFRE")) > 0 .And. !Empty(SC5->C5_SOLFRE)
	Help(" ",1,"A410TMSNAO")
	lContinua := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa desta forma para criar uma nova instancia de variaveis private ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RegToMemory( "SC5", .F., .F. )

dOrig  := M->C5_EMISSAO
dCopia := CriaVar("C5_EMISSAO",.T.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Limpa as variaveis que possuem amarracoes do pedido anterior              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
M->C5_NOTA  := Space(Len(SC5->C5_NOTA))
M->C5_SERIE := Space(Len(SC5->C5_SERIE))
M->C5_OS    := Space(Len(SC5->C5_OS))
M->C5_PEDEXP:= Space(Len(SC5->C5_PEDEXP))
M->C5_DTLANC:= Ctod("")

If lContinua
	lContinua := If(lGrade.And.MatOrigGrd()=="SB4",If(FindFunction("VldDocGrd"),VldDocGrd(1,SC5->C5_NUM),.T.),.T.)
EndIf

If ( lContinua )
	dbSelectArea("SC6")
	dbSetOrder(1)
	#IFDEF TOP
		If TcSrvType()<>"AS/400" .And. !InTransact() .And. Ascan(aHeader,{|x| x[8] == "M"}) == 0
			lQuery  := .T.
			cQuery := "SELECT SC6.*,SC6.R_E_C_N_O_ SC6RECNO "
			cQuery += "FROM "+RetSqlName("SC6")+" SC6 "
			cQuery += "WHERE SC6.C6_FILIAL='"+xFilial("SC6")+"' AND "
			cQuery += "SC6.C6_NUM='"+SC5->C5_NUM+"' AND "
			cQuery += "SC6.D_E_L_E_T_<>'*' "
			cQuery += "ORDER BY "+SqlOrder(SC6->(IndexKey()))

			dbSelectArea("SC6")
			dbCloseArea()
		EndIf
	#ENDIF
	cSeek  := xFilial("SC6")+SC5->C5_NUM
	bWhile := {|| C6_FILIAL+C6_NUM }
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem do aHeader e aCols                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	FillGetDados(7,"SC6",1,cSeek,bWhile,{{bCond,bAction1,bAction2}},aNoFields,/*aYesFields*/,/*lOnlyYes*/,cQuery,/*bMontCols*/,.F.,/*aHeaderAux*/,/*aColsAux*/,{|| AfterCols(cArqQry,cTipoDat,dCopia,dOrig,lCopia) },/*bBeforeCols*/,/*bAfterHeader*/,"SC6")	
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Carrega os dados do rateio³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If AliasInDic("AGG")
		A410FRat(@aHeadAGG,@aColsAGG)	
	EndIf

	nTotalDes  += A410Arred(nTotalPed*M->C5_PDESCAB/100,"C6_VALOR")
	nTotalPed  -= A410Arred(nTotalPed*M->C5_PDESCAB/100,"C6_VALOR")	
	nTotalPed  -= M->C5_DESCONT
	nTotalDes  += M->C5_DESCONT

	If ( lQuery )
		dbSelectArea(cArqQry)
		dbCloseArea()
		ChkFile("SC6",.F.)
		dbSelectArea("SC6")
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Inicializa ambiente de integração com Planilha ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If FindFunction("A410RvPlan")
	A410RvPlan("","",.T.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Monta o array com as formas de pagamento do SX5³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Ma410MtFor(@aHeadFor,@aColsFor)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso nao ache nenhum item , abandona rotina.         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lContinua )
	If ( Len(aCols) == 0 )
		lContinua := .F.
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ajusta as variaveis para copia                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
M->C5_NUM := CriaVar("C5_NUM",.T.)
M->C5_EMISSAO := CriaVar("C5_EMISSAO",.T.)
aRegSC6 := {}
aRegSCV := {}
//
// Template GEM - Gestao de Empreendimentos Imobiliarios
//
// Carrega a condicao de venda se a mesma tiver 
// uma vinculacao com a pedido/condicao de pagamento
//
If ExistBlock("GEM410PV") 
	aGEMCVnd := ExecBlock("GEM410PV",.F.,.F.,{ SC5->C5_NUM ,SC5->C5_CONDPAG ,M->C5_EMISSAO ,nTotalPed })
ElseIf ExistTemplate("GEM410PV") 
	// Copia a condicao de venda
	aGEMCVnd := ExecTemplate("GEM410PV",.F.,.F.,{ SC5->C5_NUM ,SC5->C5_CONDPAG ,M->C5_EMISSAO ,nTotalPed })
EndIf

If ExistBlock("MT410CPY")
	ExecBlock("MT410CPY",.F.,.F.)
EndIf
//-- Uso TEMPLATE DCL-VEI - Altera campos copiados
If ExistTemplate("MT410CPY") 
	ExecTemplate("MT410CPY",.F.,.F.)
EndIf
If ( lContinua )
	If ( Type("l410Auto") == "U" .OR. !l410Auto )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Faz o calculo automatico de dimensoes de objetos     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aSize := MsAdvSize()
		aObjects := {}
		AAdd( aObjects, { 100, 100, .t., .t. } )
		AAdd( aObjects, { 100, 100, .t., .t. } )
		AAdd( aObjects, { 100, 020, .t., .f. } )
		aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
		aPosObj := MsObjSize( aInfo, aObjects )
		aPosGet := MsObjGetPos(aSize[3]-aSize[1],315,{{003,033,160,200,240,263}} )
		nGetLin := aPosObj[3,1]
		If lContTPV
			DEFINE MSDIALOG oDlg TITLE cCadastro From aSize[7],0 to aSize[6],aSize[5] of oMainWnd PIXEL STYLE nOR( WS_VISIBLE ,DS_MODALFRAME )
		Else
			DEFINE MSDIALOG oDlg TITLE cCadastro From aSize[7],0 to aSize[6],aSize[5] of oMainWnd PIXEL
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Armazenar dados do Pedido anterior.                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF M->C5_TIPO $ "DB"
			aTrocaF3 := {{"C5_CLIENTE","SA2"}}
		Else
			aTrocaF3 := {}
		EndIf
		oGetPV:=MSMGet():New( "SC5", nReg, nOpc, , , , , aPosObj[1],,3,,,"A415VldTOk")
//		@ nGetLin,aPosGet[1,1]  SAY OemToAnsi(IIF(M->C5_TIPO$"DB",STR0008,STR0009)) SIZE 020,09 PIXEL	//"Fornec.:"###"Cliente: "
		@ nGetLin,aPosGet[1,2]  SAY oSAY1 VAR Space(40)						SIZE 120,09 PICTURE "@!"	OF oDlg PIXEL
		@ nGetLin,aPosGet[1,3]  SAY OemToAnsi(STR0011)						SIZE 020,09 OF oDlg PIXEL	//"Total :"
		@ nGetLin,aPosGet[1,4]  SAY oSAY2 VAR 0 PICTURE IIf(cPaisloc=="CHI",Nil,TM(0,22,nNumDec))	SIZE 060,09 OF oDlg PIXEL
		@ nGetLin,aPosGet[1,5]  SAY OemToAnsi(STR0012)						SIZE 030,09 OF oDlg PIXEL 	//"Desc. :"
		@ nGetLin,aPosGet[1,6]  SAY oSAY3 VAR 0 PICTURE IIf(cPaisloc=="CHI",Nil,TM(0,22,nNumDec))		SIZE 060,09 OF oDlg PIXEL RIGHT
		@ nGetLin+10,aPosGet[1,5]  SAY OemToAnsi("=")							SIZE 020,09 OF oDlg PIXEL
		If cPaisLoc == "BRA"
			@ nGetLin+10,aPosGet[1,6]  SAY oSAY4 VAR 0								SIZE 060,09 PICTURE TM(0,22,2) OF oDlg PIXEL RIGHT
		Else
			@ nGetLin+10,aPosGet[1,6]  SAY oSAY4 VAR 0								SIZE 050,09 PICTURE IIf(cPaisloc=="CHI",Nil,TM(0,22,nNumDec)) OF oDlg PIXEL RIGHT
		EndIf
		oDlg:Cargo	:= {|c1,n2,n3,n4| oSay1:SetText(c1),;
			oSay2:SetText(n2),;
			oSay3:SetText(n3),;
			oSay4:SetText(n4) }
		Set Key VK_F4 to A440Stok(NIL,"A410")

		If SC5->(FieldPos("C5_TPCOMPL")) > 0 .And. !(M->C5_TIPO $ "C") 
			nPosTpCompl := Ascan(oGetPV:aEntryCtrls,{|x| UPPER(TRIM(x:cReadVar))=="M->C5_TPCOMPL"})
			If nPosTpCompl > 0
				oGetPV:aEntryCtrls[nPosTpCompl]:lReadOnly := .T.
			EndIf	
		EndIf

		oGetd:=MsGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],nOpc,"A410LinOk","A410TudOk","+C6_ITEM/C6_Local/C6_TES/C6_CF/C6_PEDCLI",.T.,,nColFreeze,,ITENSSC6*IIF(MaGrade(),1,3.33),"A410Blq()",,,"A410ValDel(.F.)",,lFreeze)		
		Private oGetDad:=oGetd
		A410Bonus(2)
		Ma410Rodap(oGetD,nTotalPed,nTotalDes)
		ACTIVATE MSDIALOG oDlg ON INIT (A410Limpa(.F.,M->C5_TIPO),Ma410Bar(oDlg,{||nOpcA:=1,if(A410VldTOk(nOpc, aRecnoSE1RA).And.oGetd:TudoOk(),If(!obrigatorio(aGets,aTela),nOpcA := 0,oDlg:End()),nOpcA := 0)},{||oDlg:End()},nOpc,oGetD,nTotalPed,@aRecnoSE1RA,@aHeadAGG,@aColsAGG))
		SetKey(VK_F4,)
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ validando dados pela rotina automatica                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If EnchAuto(cAlias,aAutoCab,{|| Obrigatorio(aGets,aTela)},aRotina[nOpc][4]) .and. MsGetDAuto(aAutoItens,"A410LinOk",{|| A410VldTOk(nOpc) .and. A410TudOk()},aAutoCab)
			nOpcA := 1
		EndIf
	EndIf
	If ( nOpcA == 1 )
		A410Bonus(1)
		If Type("lOnUpDate") == "U" .Or. lOnUpdate
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Inicializa a gravacao dos lancamentos do SIGAPCO          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PcoIniLan("000100")

			If !A410Grava(lLiber,lTransf,1,aHeadFor,aColsFor,aRegSC6,aRegSCV,nStack,aColsBn,aRecnoSE1RA,aHeadAGG,aColsAGG)
				Help(" ",1,"A410NAOREG")
			EndIf
			If ( (ExistBlock("M410STTS") ) )
				ExecBlock("M410STTS",.f.,.f.)
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Finaliza a gravacao dos lancamentos do SIGAPCO            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PcoFinLan("000100")

		Else
			aAutoCab := MsAuto2Ench("SC5")
			aAutoItens := MsAuto2Gd(aHeader,aCols)
		EndIf
	Else
		While GetSX8Len() > nStack
			RollBackSX8()
		EndDo
		If ( (ExistBlock("M410ABN")) )
			ExecBlock("M410ABN",.f.,.f.)
		EndIf
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Destrava Todos os Registros                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
MsUnLockAll()
RestArea(aArea)
Return( nOpcA )
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a410Barra ³ Rev.  ³Eduardo Riera          ³ Data ³26.08.2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Inclusao via codigo de barra                                ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Alias do cabecalho do pedido de venda                ³±±
±±³          ³ExpN2: Recno do cabecalho do pedido de venda                ³±±
±±³          ³ExpN3: Opcao do arotina                                     ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a interface com o usua³±±
±±³          ³rio e o pedido de vendas                                    ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410Barra(cAlias,nReg,nOpc)

LOCAL lRetorno := .F.
PRIVATE lCodBarra := .T.
If aRotina[nOpc][4] == 3
	lRetorno := A410Inclui("SC5",SC5->(Recno()),nOpc)
Else
	lRetorno := A410Altera(cAlias,nReg,nOpc)
EndIf
lCodBarra := .F.
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A410Legend³Autor  ³ Eduardo Riera         ³ Data ³13.09.2000 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Demonstra a legenda das cores da mbrowse                     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina monta uma dialog com a descricao das cores da    ³±±
±±³          ³Mbrowse.                                                     ³±±
±±³          ³                                                             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410Legend()
Local aCores := {}

aCores := {{"ENABLE",STR0033},;      //Pedido em aberto
{"DISABLE",STR0034},;    //Pedido encerrado
{"BR_AMARELO",STR0035}}

If !__lPyme
	Aadd(aCores,{"BR_AZUL",STR0058})
	Aadd(aCores,{"BR_LARANJA",STR0059})  //Pedido Liberado
EndIf

If cPaisLoc <> "BRA"
	Aadd(aCores,{"BR_CINZA",STR0034 + " (" + AllTrim(GetDescRem()) + ")"}) //Pedido finalizado (Remito)
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de Entrada para alterar cores da legenda    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("MA410LEG")
	aCores := ExecBlock("MA410LEG",.F.,.F.,aCores)
Endif
BrwLegenda(cCadastro,STR0032,aCores)

Return(.T.)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a410LinOk ³ Rev.  ³Eduardo Riera          ³ Data ³26.08.2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao da Linha da Getdados                              ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto da GetDados                                   ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a validacao da linhaOk³±±
±±³          ³ da getdados                                                ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410LinOk(o)

Local aArea     := GetArea()
Local aPedido   := {}
Local aVlrDev   := {}

Local aContrato := {}
Local lRetorno 	:= .T.
Local lGrade   	:= MaGrade()
Local lQuery    := .F.
Local lGradeReal:= .F.
Local lIntACD	:= SuperGetMV("MV_INTACD",.F.,"0") == "1"  
Local lVer116   := (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11)
Local lRevProd  := SuperGetMv("MV_REVPROD",.F.,.F.)

Local cRvSB5	:= ""
Local cBlqSG5	:= ""    
Local cStatus	:= ""
Local cAviso    := ""
Local cItemSC6 	:= ""
Local cProduto 	:= ""
Local cTes     	:= ""
Local cNumRes  	:= ""
Local cLocal   	:= ""
Local cLoteCtl 	:= ""
Local cNumLote 	:= ""
Local cLocaliza  := Space(TamSX3("C0_LOCALIZ")[1])
Local cNumSerie	:= Space(TamSX3("C0_NUMSERI")[1])
Local cNfOrig  	:= ""
Local cSerieOri	:= ""
Local cItemOri	:= ""
Local cItemGrad	:= ""
Local cIdentB6 	:= ""
Local cServico	:= ''
Local cArqQry   := ""
Local cOpc      := ""
Local cOpcional := ""
Local cOpcioAux := "" 
Local cOpcioAnt := ""
Local aOpcional :={}
Local cMascara    := SuperGetMv("MV_MASCGRD")
Local cBonusTes := SuperGetMv("MV_BONUSTS")
Local nTamRef	:= Val(Substr(cMascara,1,2))

Local nQtdRese 	:= 0
Local nCntFor  	:= 0
Local nQtdVen  	:= 0
Local nQtdLib  	:= 0
Local nPrcVen  	:= 0
Local nValor   	:= 0
Local nSaldo   	:= 0
Local nPosIdB6 	:= 0
Local nPosQtdVen:= 0
Local nPosQtdLib:= 0
Local nPosLocal := 0
Local nPosProd  := 0
Local nPosNfOrig:= 0
Local nPosSerOri:= 0
Local nPosItemOr:= 0
Local nPosServ  := 0
Local nPrUnit   := 0      
Local nRevisao  := 0
Local lOpcPadrao:= SuperGetMv("MV_REPGOPC",.F.,"N") == "N"			//Determina se será possível repetir o mesmo grupo de opcionais em vários níveis da estrutura.
Local nPosTes   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES"})
Local nPContrat := aScan(aHeader,{|x| AllTrim(x[2])=="C6_CONTRAT"})
Local nPItContr := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEMCON"})
Local nPItem	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEM" })
Local nPQtdVen  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN" })
Local nPLocal   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCAL"})
Local nPEntreg  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ENTREG" })
Local nPOpcional:= aScan(aHeader,{|x| AllTrim(x[2])==IIf(lOpcPadrao,"C6_OPC","C6_MOPC")})
Local nPPrcVen  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN"})
Local nPPrUnit  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRUNIT"})
Local nPValor	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALOR"})
Local nPDescon	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_DESCONT"})
Local nUsado    := Len(aHeader)
Local nPIdentB6 := aScan(aHeader,{|x| AllTrim(x[2])=="C6_IDENTB6"})
Local nValDesc	:= 0
Local nX        := 0
Local nY        := 0
Local nPNumOrc    := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMORC"})
Local nValorTot   := 0
Local nLinha      := 0
Local nColuna     := 0
Local nTotPoder3  := 0
Local nQtdOC	  := 0	

Local nPProduto := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPQtdLib  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDLIB"})
Local nPNfOrig  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NFORI"})
Local nPSerOrig := aScan(aHeader,{|x| AllTrim(x[2])=="C6_SERIORI"})
Local nPItOrig  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEMORI"})
Local nServic   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_SERVIC"})

Local nPC6_PROJPMS := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PROJPMS"})
Local nPC6_EDTPMS  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_EDTPMS"})
Local nPC6_TASKPMS := aScan(aHeader,{|x| AllTrim(x[2])=="C6_TASKPMS"})

Local nPLoteCtl	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOTECTL"})
Local nPNumLote	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMLOTE"}) 
Local nPEnder		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_ENDPAD"})
Local lValidOpc	:= .T.
Local lTabCli   := (SuperGetMv("MV_TABCENT",.F.,"2") == "1") 
Local cCliTab   := ""   
Local cLojaTab  := ""
Local lVersao	 := (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.)) > 11)

// Indica se o preco unitario sera arredondado em 0 casas decimais ou nao. Se .T. respeita MV_CENT (Apenas Chile).
Local lPrcDec   := SuperGetMV("MV_PRCDEC",,.F.)
Local aQtdP3 := {}
#IFDEF TOP 
	Local cQuery    := ""
#ENDIF 	

Local lAltCtr3   := SuperGetMV("MV_ALTCTR3",.F.,.F.)
Local lGrdMult	 := FindFunction("MATGRADE_V") .And. MATGRADE_V() >= 20110425 .And. "MATA410" $ SuperGetMV("MV_GRDMULT",.F.,"")   
Local lTranCQ    := FindFunction("IsTranCQ") .And. IsTranCQ()
Local nVlrTab	 := 0
Local lVldDev	 := .T.
Local lCalcOpc   := .T.
Local lPrcMan	 := .F.
Local nAux	 := 0
Local lWmsNew	 := SuperGetMV("MV_WMSNEW",.F.,.F.)
Local oSaldoWMS 	:= IIf(lWmsNew,WMSDTCEstoqueEndereco():New(),.F.)
Local aSaldos		:= {}
Local aAreaAnt		:= {}
Local nFindEnd		:= 0
Local nPosNumeri	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMSERI"})
Local lF4VlZero	:= SF4->(FieldPos("F4_VLRZERO")) > 0
Local lVlrZero	:= .F.

Local lVincOS		:= SuperGetMV("MV_LIBVINC", .F., .T.)		//Indica se libera a edição e inclusão de novos itens de pedidos provenientes de Ordem de Serviço.
Local lVerOS    	:= FindFunction("Ma410VerOs")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica a permissao do armazem. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (VAL(GetVersao(.F.)) == 11 .And. GetRpoRelease() >= "R6" .Or. VAL(GetVersao(.F.))  > 11) .And. FindFunction("MaAvalPerm")
	lRetorno := MaAvalPerm(3,{aCols[n][nPLocal],aCols[n][nPProduto]})
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se o item deletado possui ordem de separacao ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lIntACD .and. aCols[n][Len(aCols[n])]
	lRetorno := CBM410ACDL()
EndIf 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ verifica se linha do acols foi preenchida            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .And. ( !CheckCols(n,aCols) )
	lRetorno := .F.
EndIf

//Verifica se o item está associado em uma Ordem de Serviço
If lVerOS
	If lRetorno .And. (!lVincOS .And. Ma410VerOs())		
		Help(" ",1,"A410VINCOS")
		lRetorno:=.F.	
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³  Caso o item nao esteja deletado                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( !aCols[n][Len(aCols[n])] .And. lRetorno )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se os campos obrigatorios nao estao em branco                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nCntFor := 1 To nUsado
		Do Case
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_QTDVEN" )
			nQtdVen		:= aCols[n][nCntFor]
			nPosQtdVen	:= nCntFor
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_ITEM" )
			cItemSC6	:= aCols[n][nCntFor]
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_QTDLIB" )
			nQtdLib 	:= aCols[n][nCntFor]
			nPosQtdLib  := nCntFor
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_PRCVEN" )
			nPrcVen 	:= aCols[n][nCntFor]
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_VALOR" )
			nValor 	:= aCols[n][nCntFor]
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_PRUNIT" )
			nPrUnit 	:= aCols[n][nCntFor]
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_VALDESC" )
			nValDesc	:= aCols[n][nCntFor]
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_PRODUTO" )
			cProduto	:= aCols[n][nCntFor]
			nPosProd	:= nCntFor
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se a grade esta ativa, e se o produto digita-³
			//³do e' uma referencia                                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( lGrade ) .And. MatGrdPrRf(@cProduto)
				lGradeReal := .T.
			EndIf             
			Case ( AllTrim(aHeader[nCntFor][2]) == "C6_REVPROD" )
			nRevisao	:= nCntFor				
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_LOCAL" )
			cLocal   := aCols[n][nCntFor]
			nPosLocal:= nCntFor
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_TES" )
			cTes     := aCols[n][nCntFor]
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_NUMLOTE" )
			cNumLote := aCols[n][nCntFor]
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_LOTECTL" )
			cLoteCtl	:= aCols[n][nCntFor]
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_LOCALIZ" )
			cLocaliza := aCols[n][nCntFor]
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_NUMSERI" )
			cNumSerie := aCols[n][nCntFor]
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_IDENTB6" )
			cIdentB6  := aCols[n][nCntFor]
			nPosIdB6  := nCntFor
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_NFORI" )
			cNfOrig		:= aCols[n][nCntFor]
			nPosNfOrig	:= nCntFor
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_SERIORI" )
			cSerieOri	:= aCols[n][nCntFor]
			nPosSerOri  := nCntFor
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_ITEMORI" )
			cItemOri 	:= aCols[n][nCntFor]
			nPosItemOr 	:= nCntFor
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_GRADE" )
			cItemGrad:= aCols[n][nCntFor]
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_RESERVA" )
			cNumRes := aCols[n][nCntFor]
		Case ( AllTrim(aHeader[nCntFor][2]) == "C6_SERVIC" )
			nPosServ  := nCntFor
			cServico := aCols[n][nCntFor]
		EndCase
		If lF4VlZero	
			lVlrZero :=  Posicione("SF4",1,xFilial("SF4")+aCols[n][nPostes],"F4_VLRZERO") == "1"
		EndIf
		If ( Empty(aCols[n][nCntFor]) ) 
			If ( lRetorno .And. AT(M->C5_TIPO,"CIP")==0 )
				If (	(AllTrim(aHeader[nCntFor][2]) == "C6_QTDVEN" .And. !MaTesSel(aCols[n][nPosTes])).Or.;
						AllTrim(aHeader[nCntFor][2]) == "C6_PRCVEN" .Or.;
						AllTrim(aHeader[nCntFor][2]) == "C6_VALOR"  .Or.;
						AllTrim(aHeader[nCntFor][2]) == "C6_TES" )
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					//Tratamento para quando for valor do item igual a zero permitido quando F4_VLRZERO = SIM³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If !(lF4VlZero .And. lVlrZero)
						Help(" ",1,"A410VZ")
						lRetorno := .F.
					EndIf	
				EndIf
			EndIf
			If ( lRetorno .And. AT(M->C5_TIPO,"CIP") <> 0 )
				If SC5->(FieldPos("C5_TPCOMPL")) > 0
					If M->C5_TIPO $ "C" .And. M->C5_TPCOMPL == "2" .And.;	//Compl. Quantidade
						(	AllTrim(aHeader[nCntFor][2]) == "C6_QTDVEN" .Or.;
							AllTrim(aHeader[nCntFor][2]) == "C6_PRCVEN" .Or.;
							AllTrim(aHeader[nCntFor][2]) == "C6_VALOR"  .Or.;
							AllTrim(aHeader[nCntFor][2]) == "C6_TES" )
						Help(" ",1,"A410VZ")	
						lRetorno := .F.
					ElseIf (	AllTrim(aHeader[nCntFor][2]) == "C6_PRCVEN" .Or.;
								AllTrim(aHeader[nCntFor][2]) == "C6_VALOR"  .Or.;
								AllTrim(aHeader[nCntFor][2]) == "C6_TES" )
							Help(" ",1,"A410VZ2")
							lRetorno := .F.
					EndIf
				ElseIf (	AllTrim(aHeader[nCntFor][2]) == "C6_PRCVEN" .Or.;
							AllTrim(aHeader[nCntFor][2]) == "C6_VALOR"  .Or.;
							AllTrim(aHeader[nCntFor][2]) == "C6_TES" )
						Help(" ",1,"A410VZ2")
						lRetorno := .F.
				EndIf
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se o pedido e uma devolucao de compra, um    ³
			//³complemento de ICMS ou IPI, para validar a nota fiscal³
			//³de origem.                                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( lRetorno .And. At(M->C5_TIPO,"CIPD") <> 0 )
				If ( AllTrim(aHeader[nCntFor][2]) == "C6_NFORI" )
					If ( At(M->C5_TIPO,"CIP") <> 0 )
						Help(" ",1,"A410COMPIP")
					Else
						Help(" ",1,"A410NFORI")
					EndIf
					lRetorno := .F.
				EndIf
			EndIf
			If M->C5_TIPO $ "C" .And. Str(nPrcVen,15,2) <> Str(nValor,15,2);
					.And. nCntFor == nUsado //so testar na ultima vez
				If cPaisLoc != "BRA"
					Help(" ",1,"A410TOTAL")
					lRetorno := .F.
				EndIf
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Analisa se o tipo do armazem permite a movimentacao |
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno .And. FindFunction('AvalBlqLoc') .And. AvalBlqLoc(aCols[n,nPProduto],aCols[n,nPLocal],aCols[n,nPosTes])
				lRetorno := .F.
			EndIf
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se o pedido e uma devolucao de compra,e se   ³
			//³o produto possui rastro, se positivo o numero do lote ³
			//³e' obrigatorio                                        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( lRetorno .And. M->C5_TIPO == "D" .And. AvalTes(cTes,"S"))
				If ( 	( AllTrim(aHeader[nCntFor][2]) == "C6_NUMLOTE" .And.;
						Rastro(cProduto,"S") ) .Or.;
						( AllTrim(aHeader[nCntFor][2]) == "C6_LOTECTL" .And.;
						Rastro(cProduto,"L")) )
					HELP(" ",1,"A100S/LOT")
					lRetorno := .F.
				EndIf
			EndIf
		Else
			If ( AllTrim(aHeader[nCntFor][2]) == "C6_QTDVEN" .And. MaTesSel(aCols[n][nPosTes]) )
				aCols[n][nPosQtdVen] := 0
			EndIf
		EndIf
		If ( !lRetorno )
			nCntFor := nUsado + 1
		EndIf
	Next nCntFor
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se o produto nao esta preenchido.                              ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( Empty(cProduto) )
		lRetorno := .F.
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Valida se existe o local (armazém)informado e se esta bloqueado para uso³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. lVersao .And. !Empty(cLocal)
		NNR->(dbSetOrder(1))	
		If !NNR->(dbSeek(xFilial("NNR")+cLocal))
			Help(" ",1,"A430LOCAL")
			lRetorno:= .F.
		Else
			If NNR->(FieldPos("NNR_MSBLQL")) > 0 .And. NNR->NNR_MSBLQL == "1"
				Help(" ",1,"ARMBLOQ")
				lRetorno:= .F.
			EndIf
		EndIf
	EndIf	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Posiciona Registros.                                                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno
		dbSelectArea("SC6")
		dbSetOrder(1)
		MsSeek(xFilial("SC6")+M->C5_NUM+cItemSC6+cProduto)

		dbSelectArea("SF4")
		dbSetOrder(1)
		MsSeek(xFilial("SF4")+cTes)

		dbSelectArea("SC0")
		dbSetOrder(1)
		MsSeek(xFilial("SC0")+cNumRes+cProduto+cLocal)

		If M->C5_TIPO == "D"
			dbSelectArea("SD1")
			dbSetOrder(1)
			MsSeek(xFilial("SD1")+cNfOrig+cSerieOri+M->C5_CLIENTE+M->C5_LOJACLI+cProduto+cItemOri)
		Else
			If SF4->F4_PODER3=="D" .And. nPIdentB6 <> 0
				If !Empty(aCols[n][nPIdentB6])
					dbSelectArea("SD1")
					dbSetOrder(4)
					MsSeek(xFilial("SD1")+aCols[n][nPIdentB6])
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Retorna o valor total do saldo de/em poder de terceiros.                ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nTotPoder3 := A410TotPoder3(cProduto,M->C5_TIPO,M->C5_CLIENTE,M->C5_LOJACLI,aCols[n][nPIdentB6])
					If IsInCallStack("A410COPIA") .And. nTotPoder3 == 0 .And. !IsTriangular()
						Help(" ",1,"A100USARF4")
						lRetorno := .F.					
					EndIf
				Else
					Help(" ",1,"A100USARF4")
					lRetorno := .F.
				EndIf
			EndIf
		EndIf
	 EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se o cliente ou fornecedor é valido.                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno
		dbSelectArea(IIF(M->C5_TIPO$"DB","SA2","SA1"))
		dbSetOrder(1)
		If MsSeek(xFilial(IIF(M->C5_TIPO$"DB","SA2","SA1"))+M->C5_CLIENTE+M->C5_LOJACLI)
			If !RegistroOk(IIF(M->C5_TIPO$"DB","SA2","SA1"))
				lRetorno	 := .F.
			Endif
		Endif
	Endif
	
	If lRetorno
		dbSelectArea(IIF(M->C5_TIPO$"DB","SA2","SA1"))
		dbSetOrder(1)
		If MsSeek(xFilial(IIF(M->C5_TIPO$"DB","SA2","SA1"))+IIf(!Empty(M->C5_CLIENT),M->C5_CLIENT,M->C5_CLIENTE)+M->C5_LOJAENT)
			If !RegistroOk(IIF(M->C5_TIPO$"DB","SA2","SA1"))
				lRetorno	 := .F.
			Endif
		Endif
	Endif	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica a quantidade do pedido em relacao a quanti- ³
	//³ dade reservada.                                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( lRetorno .And. !Empty(cNumRes) )
		If ( !INCLUI )
			If ( SC6->(Found()) )
				nQtdRese += SC6->C6_QTDRESE
			EndIf
		EndIf
		If ( SC0->(Found()) )
			If ( SC0->C0_QUANT+nQtdRese < 0 )
				Help(" ",1,"A410RESERV")
				lRetorno := .F.
			EndIf
			If lretorno .And. GetNewPar("MV_CHCLRES",.F.)
				If SC0->C0_TIPO == "CL" .And. SC0->C0_DOCRES <> M->C5_CLIENTE
					lRetorno := .F.
					MsgAlert(STR0093 + Alltrim(cNumRes) + STR0094 + SC0->C0_DOCRES)
				Endif
			Endif
			If ( lRetorno .And. (  SF4->F4_ESTOQUE=="N" .Or. M->C5_TIPO$"CIP") )
				Help(" ",1,"A410RESERV")
				lRetorno := .F.
			EndIf
			If ( (SC0->C0_LOTECTL <> cLoteCtl	.Or.;
					SC0->C0_NUMLOTE <> cNumLote	.Or.;
					SC0->C0_LOCALIZ <> cLocaliza	.Or.;
					SC0->C0_NUMSERI <> cNumSerie) )
				Help(" ",1,"A410RESERV")
				lRetorno := .F.
			EndIf
		Else
			Help(" ",1,"A410RESERV")
			lRetorno := .F.
		EndIf
	EndIf
	If ( lRetorno )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica se eh grade para calcular o valor total por item da grade³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nValorTot := 0
		  
		If FindFunction("MsMatGrade") .And. IsAtNewGrd()
			If lGrade .And. lGradeReal  .And. Type("oGrade")=="O" .And. Len(oGrade:aColsGrade) > 0
				If lGrdMult
					nValorTot := a410Arred(oGrade:SomaGrade("C6_VALOR",n),"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))
				Else
					For nLinha := 1 To Len(oGrade:aColsGrade[n])
						For nColuna := 2 To Len(oGrade:aHeadGrade[n])
							If ( oGrade:aColsFieldByName("C6_QTDVEN",n,nLinha,nColuna) <> 0 )
								nValorTot += a410Arred(oGrade:aColsFieldByName("C6_QTDVEN",n,nLinha,nColuna)*nPrcVen,"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcdec,M->C5_MOEDA,NIL))
							Endif
						Next nColuna
					Next nLinha
				EndIf
			Else
				nValorTot := A410Arred(nPrcVen*nQtdVen,"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcdec,M->C5_MOEDA,NIL))
			Endif 
		Else
			If lGrade .And. lGradeReal  .And. Len(aColsGrade) > 0
				For nLinha := 1 To Len(aColsGrade[n])
					For nColuna := 2 To Len(aHeadGrade[n])
						If ( aColsGrade[n][nLinha][nColuna][1] <> 0 )
							nValorTot += a410Arred(aColsGrade[n][nLinha][nColuna][1]*nPrcVen,"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcdec,M->C5_MOEDA,NIL))
						Endif
					Next nColuna
				Next nLinha
			Else
				nValorTot := A410Arred(nPrcVen*nQtdVen,"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcdec,M->C5_MOEDA,NIL))
			Endif			
		EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Consiste o valor total do pedido de venda                               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		Do Case
		Case ( AT(M->C5_TIPO,"DCIP") == 0 .AND.  SF4->F4_PODER3<>"D" ) .Or.;
				((M->C5_TIPO == "D" .Or. SF4->F4_PODER3=="D").And. QtdComp(nQtdVen)<>QtdComp(SD1->D1_QUANT))
			If (nValor <> nValorTot .And. !MaTesSel(aCols[n][nPosTES])) .Or.;
					(nValor <> A410Arred(nPrcVen,"C6_VALOR") .And. MaTesSel(aCols[n][nPosTES]))
				Help(" ",1,"A410TOTAL")
				lRetorno := .F.
			EndIf
			If !SD1->(Found()) .And. SF4->F4_PODER3=="D"
				Help(" ",1,"A100USARF4")
				lRetorno := .F.
			EndIf
		Case M->C5_TIPO == "D" .OR. SF4->F4_PODER3== "D"
			If A410Arred(nValor,"C6_VALOR") <> A410Arred(IIf(Empty(nTotPoder3),SD1->D1_TOTAL-SD1->D1_VALDESC-SD1->D1_VALDEV,nTotPoder3),"C6_VALOR") .And.;
				!MaTesSel(aCols[n][nPosTES]).And.(!SC6->(Found()).Or.SC6->C6_QTDVEN-SC6->C6_QTDENT > 0)
				Help(" ",1,"A410TOTAL")
				lRetorno := .F.
			EndIf
			If !SD1->(Found()) .And. SF4->F4_PODER3=="D"
				Help(" ",1,"A100USARF4")
				lRetorno := .F.
			EndIf
		Case AT(M->C5_TIPO,"CIP") <> 0
			If SC5->(FieldPos("C5_TPCOMPL")) > 0
				If M->C5_TIPO $ "C" .And. M->C5_TPCOMPL == "2" 	//Compl. Quantidade
					If ( A410Arred(nValor,"C6_VALOR") <> A410Arred(nValorTot,"C6_VALOR") )
						Help(" ",1,"A410TOTAL")
						lRetorno := .F.
					EndIf								
				Else
					If ( A410Arred(nValor,"C6_VALOR") <> A410Arred(nPrcVen,"C6_VALOR") )
						Help(" ",1,"A410TOTAL")
						lRetorno := .F.
					EndIf				
				EndIf
			Else
				If ( A410Arred(nValor,"C6_VALOR") <> A410Arred(nPrcVen,"C6_VALOR") )
					Help(" ",1,"A410TOTAL")
					lRetorno := .F.
				EndIf
			EndIf
		EndCase
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica o TES                                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( lRetorno )
		If (n > 1 .And. !aCols[n-1][Len(aCols[n-1])])  //verifica se esta deletado
			lRetorno := A410ValTES(cTes,IIf(n > 1 ,aCols[n-1][nPosTes],Nil))
		Else
			lRetorno := A410ValTES(cTes,Nil)
		EndIf
	EndIf
	If ( lRetorno .And. Empty(cNumRes) )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Consiste o item quanto a Rastro  ou Localizacao Fisica.                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( SF4->F4_ESTOQUE=="N" .And. (!Empty(cLoteCtl) .Or. !Empty(cNumLote)) )
			Help(" ",1,"A410TEEST")
			lRetorno := .F.
		Else
			//Validações WMS
			If lRetorno .And. lWmsNew .And. IntDl(cProduto)
				lRetorno := WmsChkSC6("1",cLocaliza,cProduto,cLoteCtl,cNumLote)
			EndIf
			If lRetorno .And. ( SF4->F4_ESTOQUE =="S" .And. !(M->C5_TIPO $ "CIP") .And. SuperGetMv("MV_GERABLQ")=="N" )
				If !(lWmsNew .And. IntDl(cProduto)) 
					nSaldo := SldAtuEst(cProduto,cLocal,nQtdVen,cLoteCtl,cNumLote,cLocaliza,cNumSerie,cNumRes ,nil,nil,nil,nil,cServico)
				Else
					nSaldo := oSaldoWMS:GetSldWMS(cProduto,cLocal,cLocaliza,cLoteCtl,cNumLote,cNumSerie)					                    
				EndIf				
				nSaldo += SC6->C6_QTDEMP
				If ( Localiza(cProduto,.T.)  )
					If ( M->C5_TIPO == "D" )
						If ( nSaldo < nQtdVen )
							Help(" ",1,"SALDOLOCLZ")
							lRetorno:=.F.
						EndIf
					Else
						If ( nSaldo < nQtdLib )
							If  !( Type("l410Auto") <> "U" .And. l410Auto )
								Help(" ",1,"SALDOLOCLZ")
							EndIf
							nQtdLib := nSaldo
							aCols[n][nPosQtdLib] := nQtdLib
						EndIf
					EndIf
				EndIf
				If ( Rastro(cProduto) )
					If ( M->C5_TIPO == "D" )
						If ( nQtdVen > nSaldo )
							Help(" ",1,"A440ACILOT")
							lRetorno := .F.
						EndIf
					Else
						If ( nQtdLib > nSaldo )
							Help(" ",1,"A440ACILOT")
							nQtdLib := nSaldo
							aCols[n][nPosQtdLib] := nQtdLib
						EndIf
					EndIf
				EndIf
			EndIf
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se o pedido se trata de poder de terceiros   ³
	//³se positivo, verifica se e' um item de grade          ³
	//³se for informa que a grade nao esta disponivel para   ³
	//³poder de terceiros                                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( lRetorno .And. SF4->F4_PODER3 $ "RD" )
		If ( cItemGrad == "S" )
			Help(" ",1,"A410GRATER")
			lRetorno:=.F.
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica o saldo do Poder de Terceiro                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( lRetorno .And. SF4->F4_PODER3=="D" )
		aQtdP3 := A410SNfOri(M->C5_CLIENTE,M->C5_LOJACLI,cNfOrig,cSerieOri,"",cProduto,cIdentB6,aCols[n][nPosLocal],,@aPedido)
		If ( aQtdP3[1] < 0 )
			If !Empty(aPedido)
				cAviso := ""
				For nX:=1 To Len(aPedido)
					cAviso += aPedido[nX] + " | "
				Next nX
				Aviso( STR0038, STR0087+cAviso, { "Ok" } )
				lRetorno := .F.
			Else
				Help(" ",1,"A100USARF4")
				lRetorno := .F.
			EndIf
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica o saldo da Liberacao de CQ                                     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If aQtdP3[4][6] > 0 
				If (aQtdP3[5]+aQtdP3[6]) > (aQtdP3[4][1]-aQtdP3[4][6])
					Aviso( STR0038, STR0113, { "Ok" } )
					lRetorno := .F.				
				Endif
			Endif			
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Nao permite a inclusao do produto se o almoxarifado  ³
	//³ for igual o do CQ e o tipo do pedido for NORMAL.     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄLarsonÄÄÄÙ
	If lRetorno .And. ( M->C5_TIPO $ "NB" .And. SF4->F4_PODER3<>"D" )
		If cLocal == GetMv("MV_CQ")
			If !(SF4->F4_TRANFIL=='1' .And. lTranCQ .And. SF4->F4_TRANCQ=='1')
				Help(" ",1,"ARMZCQ",,GetMv("MV_CQ"),2,15)
				lRetorno := .F.
			EndIf	
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Quando devolucao verifica se a nota fiscal de origem  ³
	//³existe                                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( lRetorno .And. M->C5_TIPO == "D" )
		dbSelectArea("SD1")
		dbSetOrder(1)
		If ( MsSeek(xFilial("SD1")+cNfOrig+cSerieOri+M->C5_CLIENTE+M->C5_LOJACLI+cProduto) .And. Empty(cItemOri) )
			Help(" ",1,"A410S/ITDE")
			lRetorno := .F.
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Consiste no acols a saldo em quantidade e valor da devolucao            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorno .And. !Empty(cItemOri)
				aVlrDev := a410SNfOri(M->C5_CLIENTE,M->C5_LOJACLI,cNfOrig,cSerieOri,cItemOri,cProduto,Nil,aCols[n][nPosLocal])

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Se o campo do valor unitário tiver mais que 2 casas decimais e a ³
				//³ diferença for menor que 0.01, não faz a validação dos valores.	 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If TamSX3("C6_PRCVEN")[2] > 2 .And. SuperGetMv("MV_ARREFAT")=="S"
					If (nValor - aVlrDev[2]) <= 0.01
						lVldDev := .F.
					EndIf
				EndIf
				
				If nValor > aVlrDev[2] .And. lVldDev
					Help(" ",1,"A410UNIDIF")
					lRetorno := .F.
				Else
					If ( nQtdVen > aVlrDev[1] )
						Help(" ",1,"A410NSALDO")
						lRetorno := .F.
					EndIf
				EndIf
			EndIf
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verificar se o servico digitado,tem alguma Tarefa com Tipo de Transporte³
	//³informado (DC5).                                                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If  ( lRetorno .And. nPosServ > 0 .And. !Empty(aCols[n][nPosServ]) )
		If !Empty(cLocaliza) 
			If !lWmsNew
				//-- Verifica se o servico diferente de conferencia 000005 - DLCONFEREN
				DC5->(DbSetOrder(1)) //DC5_FILIAL+DC5_SERVIC+DC5_ORDEM
				If	DC5->(MsSeek(xFilial('DC5')+aCols[n,nPosServ]) .And. DC5_FUNEXE<>'000005')
					Aviso('SigaWMS', STR0104, {'Ok'}) //"Nao informar servico WMS para itens com endereco informado."
					lRetorno := .F.
				EndIf
			EndIf		
		EndIf
		If lRetorno
			dbSelectArea("DC5")
			dbSetOrder(1)
			#IFDEF TOP
				If TcSrvType()<>"AS/400" .And. !InTransact()
					aStruDC5 := DC5->(dbStruct())
					cArqQry := "DC5"
					lQuery  := .T.
					cQuery := "SELECT DC5.*,DC5.R_E_C_N_O_ DC5RECNO "
					cQuery += "FROM "+RetSqlName("DC5")+" DC5 "
					cQuery += "WHERE DC5.DC5_FILIAL='"+xFilial("DC5")+"' AND "
					cQuery += "DC5.DC5_SERVIC='"+aCols[n][nPosServ]+"' AND "
					cQuery += "DC5.DC5_TIPTRA <>'"+Criavar("DC5_TIPTRA",.F.)+"' AND "
					cQuery += "DC5.D_E_L_E_T_<>'*' "
					cQuery += "ORDER BY "+SqlOrder(DC5->(IndexKey()))
					cQuery := ChangeQuery(cQuery)
					dbSelectArea("DC5")
					dbCloseArea()
					dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cArqQry,.T.,.T.)
					For nCntFor := 1 To Len(aStruDC5)
						If ( aStruDC5[nCntFor,2]<>"C" )
							TcSetField(cArqQry,aStruDC5[nCntFor,1],aStruDC5[nCntFor,2],aStruDC5[nCntFor,3],aStruDC5[nCntFor,4])
						EndIf
					Next nCntFor
				Else
			#ENDIF
				cArqQry := "DC5"
				MsSeek(xFilial("DC5")+aCols[n][nPosServ])
				#IFDEF TOP
				EndIf
				#ENDIF
			
			Do While !Eof() .And. (cArqQry)->DC5_FILIAL+(cArqQry)->DC5_SERVIC==xFilial('DC5')+aCols[n,nPosServ]
				If !Empty(DC5->DC5_TIPTRA)
					Help(' ',1, 'A410SERTMS')
					lRetorno := .F.
					Exit
				EndIf
				dbSkip()
			EndDo
			
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Fecha query criada                                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lQuery
			dbSelectArea(cArqQry)
			dbCloseArea()
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Impede a alteracao de Itens do Pedido com Servico de WMS jah executado ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lRetorno .And. IntDL(aCols[n, nPosProd])
			lRetorno := WmsAvalSC6("1",SC5->C5_CLIENTE,SC5->C5_LOJACLI,SC5->C5_NUM,aCols[n, nPItem],cServico,M->C5_TPCARGA,M->C5_GERAWMS,ALTERA)
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica a integridade do contrato de parceira                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. nPContrat > 0 .And. nPItContr > 0 .And. ADB->(LastRec())<>0
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Busca quantidade do item da Ordem de Carregamento - SIGAAGR -UBS   	   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If AliasIndic("NPN")
			NPN->(dbSetOrder(3))
			If INCLUI .And. IsIncallStack("AGRA900")
				nQtdOC := aCols[n][nPQtdVen]
			ElseIf ALTERA .And. NPN->(dbSeek(xFilial("NPN")+SC6->(C6_NUM+C6_ITEM)))
				nQtdOC := NPN->NPN_QUANT
			  EndIf
		  EndIf

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica o saldo de contratos deste pedido de venda  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nY := 1 To Len(aCols)
			If !aCols[nY][nUsado+1] .And. N <> nY .And. !Empty(aCols[nY][nPContrat])
				nX := aScan(aContrato,{|x| x[1] == aCols[nY][nPContrat] .And. x[2] == aCols[nY][nPItContr]})
				If nX == 0
					aadd(aContrato,{aCols[nY][nPContrat],aCols[nY][nPItContr],aCols[nY][nPQtdVen]})
					nX := Len(aContrato)
				Else
					aContrato[nX][3] += aCols[nY][nPQtdVen]
				EndIf
			EndIf
			dbSelectArea("SC6")
			dbSetOrder(1)
			If ALTERA .And. MsSeek(xFilial("SC6")+M->C5_NUM+aCols[nY][nPItem]) .And. !Empty(SC6->C6_CONTRAT)
				nX := aScan(aContrato,{|x| x[1] == SC6->C6_CONTRAT .And. x[2] == SC6->C6_ITEMCON})
				If nX == 0
					aadd(aContrato,{SC6->C6_CONTRAT,SC6->C6_ITEMCON,0})
					nX := Len(aContrato)
				EndIf
				aContrato[nX][3] -= SC6->C6_QTDVEN
			EndIf
		Next nY
		dbSelectArea("ADB")
		dbSetOrder(1)
		If MsSeek(xFilial("ADB")+aCols[n][nPContrat]+aCols[n][nPItContr])
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica a quantidade                                                   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If Empty(ADB->ADB_PEDCOB) .And. !Empty(ADB->ADB_TESCOB)
				If nQtdVen <> ADB->ADB_QUANT .Or. aCols[n][nPosTES] <> ADB->ADB_TESCOB
					Help(" ",1,"A410CTRQT1")
					lRetorno := .F.
				EndIf
			Else
				nX := aScan(aContrato,{|x| x[1] == aCols[n][nPContrat] .And. x[2] == aCols[n][nPItContr]})
				If nQtdVen > ADB->ADB_QUANT - (ADB->ADB_QTDEMP - nQtdOC)-If(nX>0,aContrato[nX][3],0) .And. (nPNumOrc==0 .Or. Empty(aCols[n][nPNumOrc]))
					Help(" ",1,"A410CTRQT2")
					lRetorno := .F.
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Verifica o preco de venda                                               ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lRetorno .And. ADB->ADB_PRCVEN>nPrcVen .And. !lAltCtr3 .And. !(M->C5_TIPO $ "I|P")
					Aviso(STR0038, STR0079, {'Ok'})
					lRetorno := .F.
				EndIf                  
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Valida quantidade da ordem de carregamento - SIGAAGR(UBS)               ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lRetorno .And. AliasInDic("NPN") 
					If !Empty(SC6->C6_NUM+SC6->C6_ITEM) 
						NPN->(dbSetOrder(3))
						If NPN->(dbSeek(xFilial("NPN")+SC6->(C6_NUM+C6_ITEM)))
							If nQtdVen <> If(nX>0,ABS(aContrato[nX][3]),0)
								Help(" ",1,"A410QTDOC")
								lRetorno := .F.
							EndIf
						EndIf
					EndIf	
				EndIf	 

			EndIf
		Else
			aCols[n][nPContrat] := CriaVar("C6_CONTRAT",.F.)
			aCols[n][nPItContr] := CriaVar("C6_ITEMCON",.F.)
		EndIf
	EndIf
	 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se o produto est  em revisao vigente e envia para armazem de CQ para ser validado pela engenharia    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ         
	If lRetorno .And. lVer116 .And. lRevProd
	 
		cRvSB5 := Posicione("SB5",1,xFilial("SB5")+aCols[n,nPosProd],"B5_REVPROD")
		cBlqSG5:= Posicione("SG5",1,xFilial("SG5")+aCols[n,nPosProd]+aCols[n,nRevisao],"G5_MSBLQL")  
		cStatus:= Posicione("SG5",1,xFilial("SG5")+aCols[n,nPosProd]+aCols[n,nRevisao],"G5_STATUS")
		 If cRvSB5=="1"
			 If Empty(cRvSB5)
				Aviso(STR0038,STR0209,{STR0040})//"Não foi encontrado registro do produto selecionado na rotina de Complemento de Produto."  
				lRetorno:= .F.
			ElseIf Empty(cBlqSG5)
				Aviso(STR0038,STR0210,{STR0040})//"O produto selecionado não possui revisão em uso. Verifique o cadastro de Revisões."	
				lRetorno:= .F. 
			ElseIf cBlqSG5=="1"
				Help(" ",1,"REGBLOQ")	
				lRetorno:= .F.        
			ElseIf cStatus=="2" .AND. cTes < "500"
				Aviso(STR0038,STR0211,{STR0040})//"Esta revisão não pode ser alimentada pois está inativa."
				lRetorno:= .F.		
			EndIf
		EndIf
	EndIf 

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Valida as colunas do browse referente ao SIGAPMS                       ³
	//³ Colunas: C6_PROJPMS, C6_EDTPMS, C6_TASKPMS                             ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .AND. ( nPC6_PROJPMS > 0 .AND. nPC6_EDTPMS > 0 .AND. nPC6_TASKPMS > 0 )
		lRetorno := a410VldPMS(aCols[n][nPC6_PROJPMS],aCols[n][nPC6_EDTPMS],aCols[n][nPC6_TASKPMS],SF4->F4_MOVPRJ,M->C5_TIPO )
	EndIf

	//
	// Template GEM 
	// valida o empreendimento e o codigo do produto
	//
	If lRetorno 
		If ExistBlock("GEM410LI") 
			lRetorno := ExecBlock("GEM410LI",.F.,.F.,{N})
		ElseIf ExistTemplate("GEM410LI") 
			lRetorno := ExecTemplate("GEM410LI",.F.,.F.,{N})
		Endif
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Atualiza os Opcionais                                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRetorno .And. If(Type("lShowOpc")=="L",lShowOpc,.F.) .And. !( Type("l410Auto") != "U" .And. l410Auto ) .And. nPOpcional > 0
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Funcao utilizada para verificar a ultima versao do fonte		³
		//³ SIGACUSB.PRX aplicado no rpo do cliente, assim verificando		|
		//| a necessidade de uma atualizacao neste fonte. NAO REMOVER !!!	³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If !(FindFunction("SIGACUSB_V") .and. SIGACUSB_V() >= 20090204)
			Final(STR0122)	//"Atualizar SIGACUSB.PRX !!!"
		EndIf 

		If Empty(aCols[n][nPOpcional])
				lValidOpc := .T.
		Else
				lValidOpc := .F.
		EndIf
		
		cOpcional := aCols[n][nPOpcional]
		cOpcioAnt := aCols[n][nPOpcional]

		If !lOpcPadrao
			aOpcional := STR2ARRAY(cOpcional,.F.)
			If ValType(aOpcional)=="A" .And. Len(aOpcional) > 0
				For nAux := 1 To Len(aOpcional)
					cOpcional += aOpcional[nAux][2]
					cOpcioAnt += aOpcional[nAux][2]
				Next nAux
			EndIf	
		EndIf

		lRetorno := SeleOpc(2,"MATA410",cProduto,,,aCols[n][nPOpcional],"M->C6_PRODUTO",,aCols[n,nPQtdVen],aCols[n,nPEntreg])

		If !lRetorno  
			aCols[n][nPOpcional] := cOpcioAnt
		EndIf

		If !lOpcPadrao
			aOpcional := STR2ARRAY(aCols[n][nPOpcional],.F.)
			If ValType(aOpcional)=="A" .And. Len(aOpcional) > 0
				For nAux := 1 To Len(aOpcional)
					cOpcional += aOpcional[nAux][2]
				Next nAux
			Else
				aCols[n][nPOpcional] := ""	
			EndIf	
		Else
			cOpcional := aCols[n][nPOpcional]
		EndIf

		If !Empty(cOpcional) .and. (lValidOpc .or. cOpcional <> cOpcioAux)		
			If lTabCli
				Do Case
					Case !Empty(M->C5_LOJAENT) .And. !Empty(M->C5_CLIENT)
						cCliTab   := M->C5_CLIENT
						cLojaTab  := M->C5_LOJAENT
					Case Empty(M->C5_CLIENT) 
						cCliTab   := M->C5_CLIENTE
						cLojaTab  := M->C5_LOJAENT
					OtherWise
						cCliTab   := M->C5_CLIENTE
						cLojaTab  := M->C5_LOJACLI
				EndCase					
			Else
				cCliTab   := M->C5_CLIENTE
				cLojaTab  := M->C5_LOJACLI
			Endif
			
			// Como o campo C6_OPC está preenchido, a soma dos valores dos opcionais no preco de lista sera feito na funcao a410tabela()
			nVlrTab := Iif(A410Tabela(	aCols[n][nPProduto],;
													M->C5_TABELA,;
													n,;
													aCols[n][nPQtdVen],;
													cCliTab,;
													cLojaTab,;
													If(nPLoteCtl>0,aCols[n][nPLoteCtl],""),;
													If(nPNumLote>0,aCols[n][nPNumLote],"")	)>0,A410Tabela(	aCols[n][nPProduto],;
													M->C5_TABELA,;
													n,;
													aCols[n][nPQtdVen],;
													cCliTab,;
													cLojaTab,;
													If(nPLoteCtl>0,aCols[n][nPLoteCtl],""),;
													If(nPNumLote>0,aCols[n][nPNumLote],"")	),aCols[n][nPPrUnit])

		Else
			nVlrTab := aCols[n][nPPrUnit]
		EndIf										
		
		If !lGrdMult  
			If aCols[n][nPPrcVen] > 0 .And. aCols[n][nPPrUnit] == 0 .And. cOpcional <> cOpcioAnt
				//Se for informado somente o preço unitário (C6_PRCVEN).
				aCols[n][nPPrcVen] += nVlrTab
				aCols[n][nPValor]  := a410Arred(IIf(nQtdVen==0,1,nQtdVen) * aCols[n][nPPrcVen],"C6_VALOR") 
				lPrcMan := .T.
				lCalcOpc := .F.
			ElseIf aCols[n][nPPrUnit] > 0 .And. aCols[n][nPPrcVen] > 0 .And. Empty(M->C5_TABELA)
				If MaTabPrVen(M->C5_TABELA,aCols[n][nPProduto],aCols[n][nPQtdVen],cCliTab,cLojaTab) > 0
					lPrcMan := .F.
					lCalcOpc := .T.
				Else
					lPrcMan := .T.
					lCalcOpc := .T.
				EndIf	
			ElseIf aCols[n][nPPrUnit] > 0 .And. aCols[n][nPPrcVen] > 0 .And. !Empty(M->C5_TABELA)
				If cOpcional <> cOpcioAnt .And. aCols[n][nPPrUnit] <> MaTabPrVen(M->C5_TABELA,aCols[n][nPProduto],aCols[n][nPQtdVen],cCliTab,cLojaTab)
					lPrcMan := .T.
					lCalcOpc := .T.
				EndIf
			ElseIf aCols[n][nPPrUnit] > 0 
				aCols[n][nPPrUnit] := nVlrTab
			EndIf
		EndIf			
		  
		If !Empty(cOpcioAnt) .And. !lPrcMan
			If cOpcional == cOpcioAnt .And. aCols[n][nPPrcVen] <> aCols[n][nPPrUnit]
				lCalcOpc := .F.
			ElseIf cOpcional == cOpcioAnt .And. aCols[n][nPPrcVen] == aCols[n][nPPrUnit]
				lCalcOpc := .F.
			ElseIf cOpcional <> cOpcioAnt  .And. aCols[n][nPPrcVen] <> aCols[n][nPPrUnit]
				aCols[n][nPPrcVen] := A410Arred(FtDescCab(aCols[n][nPPrUnit],{M->C5_DESC1,M->C5_DESC2,M->C5_DESC3,M->C5_DESC4})*(1-(aCols[n][nPDescon]/100)),"C6_PRCVEN")
				aCols[n][nPValor]  := A410Arred(aCols[n][nPPrcVen]*nQtdVen,"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcdec,M->C5_MOEDA,NIL))
				lCalcOpc := .T.
			Else
				lCalcOpc := .T.
			EndIf	
		EndIf

		  If ExistBlock("MA410PR") .And. (!Empty(cOpcional) .Or. !Empty(cOpcioAnt))
			aCols[n][nPPrcVen] := ExecBlock("MA410PR",.F.,.F.) 
			aCols[n][nPValor]  := a410Arred(IIf(nQtdVen==0,1,nQtdVen) * aCols[n][nPPrcVen],"C6_VALOR")
		EndIf
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Aqui ‚ efetuado o tratamento diferencial de Precos para os   ³
		//³ Opcionais do Produto.                                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SGA")
		dbSetOrder(1)
		
		While !Empty(cOpcional) .And. lCalcOpc
			cOpc      := SubStr(cOpcional,1,At("/",cOpcional)-1)
			cOpcional := SubStr(cOpcional,At("/",cOpcional)+1)
			If ( MsSeek(xFilial("SGA")+cOpc) )
				If AT(M->C5_TIPO,"CIP") == 0 
					aCols[n][nPPrcVen] += SGA->GA_PRCVEN
					aCols[n][nPValor]  := A410Arred(aCols[n][nPPrcVen]*nQtdVen,"C6_VALOR",If(cPaisLoc=="CHI" .And. lPrcdec,M->C5_MOEDA,NIL))
				EndIf
			EndIf
		EndDo

		If lRetorno
			lShowOpc := .F.
		EndIf
	EndIf
EndIf

//--------------------------------------------------------
// Novo WMS
//--------------------------------------------------------
If !aCols[n][Len(aCols[n])] .And. lRetorno .And. lWmsNew .And. IntDl(aCols[n][nPProduto]) .And. aCols[n][nPQtdLib] > 0
	If Empty(aCols[n,nServic])
		Help(" ",1,"A240SERVIC")
		lRetorno := .F.
	Endif
	If lRetorno .And. !Empty(aCols[n][nPEnder])
		lRetorno:= StaticCall(DLGXFUN,VldEndWMS,aCols[n][nPLocal],aCols[n][nPEnder],.F.,"1",.T.) 
	EndIf
	
	//Validações referentes ao endereço controlado por WMS
	If lRetorno .And. Localiza(cProduto,.T.,.T.) .And. !Empty(cLocaliza)
		//Protege o Alias antes da chamada do método WMS
		aAreaAnt := GetArea()
		//Posiciona na SB5 para saber se existe controle WMS para o produto
		DbSelectArea("SB5")
		SB5->(DbSetOrder(1))
		SB5->(DbSeek(xFilial("SB5")+aCols[n][nPProduto]))
		If RetFldProd(aCols[n][nPProduto],"B5_CTRWMS") == "1"
			//Consulta o Saldo do Endereço no WMS
			aSaldos := oSaldoWMS:GetSldEnd(cProduto,cLocal,cLocaliza,aCols[n,nPLoteCtl],aCols[n,nPNumLote],aCols[n,nPosNumeri],1)//cPrdOri,cLocal,cEnder,cLote,cSubLote,cNumSer,nOrdem
			//Recupera o Alias
			RestArea(aAreaAnt)
			nFindEnd := aScan(aSaldos,  {|x| x[2] == cLocaliza})
			If nFindEnd == 0
				Help(" ",1,"LOCALIZOBR")
				lRetorno := .F.
			ElseIf nFindEnd > 0 .And. QtdComp(aSaldos[nFindEnd][6]) < aCols[n,nPQtdVen]
				Help(" ",1,"SALDOLOCLZ")
				lRetorno := .F.
			EndIf
		EndIf
	EndIf
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verificar se for devolucao e o produto for quality, se o mesmo ja foi   ³
//³liberado do estoque na qualidade.                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lRetorno .And. !aCols[n][Len(aCols[n])] .and. M->C5_TIPO == "D" )
	lRetorno := Ma410VldQEK( M->C5_CLIENTE,M->C5_LOJACLI,aCols[n][nPNfOrig],aCols[n][nPSerOrig],aCols[n][nPItOrig],aCols[n][nPProduto]) 
EndIF

If cPaisLoc == "PTG" .AND. lRetorno
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Validação para portugal para não deixar de preencher o campo C6_MENPAD caso os campos³
//³ C6_VALIMP1 C6_BASIMP1 C6_ALQIMP1  estiverem vazios.					                ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lRetorno:= VldItIse()

EndIf

If ( aCols[n][Len(aCols[n])] .And. lRetorno )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Posiciona Registros.                                                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SC6")
	dbSetOrder(1)
	MsSeek(xFilial("SC6")+M->C5_NUM+aCols[n][nPItem])
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Qdo um item possuir quantidade entregue nao deve ser permitida a        ³
	//³exclusao neste item.                                                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( lRetorno .And. SC6->(Found()) .And. SC6->C6_QTDENT <> 0 ) .And. !(aCols[n][nPosTes] $ AllTrim(cBonusTes))
		Help(" ",1,"A410FAT")
		lRetorno := .F.
	EndIf
	If ( lRetorno .And. SC5->C5_TIPO =="I" .And. SC6->(Found()) .And. !Empty(SC6->C6_NOTA) ) 
		Help(" ",1,"A410FAT")
		lRetorno := .F.
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Se utilizar grade de produtos verifica a grade referente ao produto selecionado.³
	//³Caso exista quantidade entregue para algum item da grade não permite a exclusão.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( lRetorno .And. SC6->(Found()) .And. lGrade )
		While !EOF() .AND. SC6->C6_NUM == M->C5_NUM .And. Substr(SC6->C6_PRODUTO,1,nTamRef) $ aCols[n][nPProduto] .And. SC6->C6_GRADE == "S"
			If SC6->C6_QTDENT <> 0
				Help(" ",1,"A410FAT")
				lRetorno := .F.
			EndIf
			SC6->(dbSkip())
		EndDo	
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Impede a exclusao de Itens do Pedido com Servico de WMS jah executado  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nPosProd := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO" })
	If lRetorno .And. IntDL(aCols[n, nPosProd]) .And. ALTERA
		lRetorno := WmsAvalSC6("2",SC5->C5_CLIENTE,SC5->C5_LOJACLI,SC5->C5_NUM,aCols[n, nPItem])
	EndIf
EndIf

dbSelectArea("SC6")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Pontos de Entrada 				                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorno .And. ExistTemplate("M410LIOK")
	lRetorno := ExecTemplate("M410LIOK",.F.,.F.,o)
EndIf
If lRetorno .And. ExistBlock("M410LIOK")
	lRetorno := ExecBlock("M410LIOK",.F.,.F.,o)
EndIf 
If lRetorno .And. ExistBlock("M410ACDL")
	lRetorno := ExecBlock("M410ACDL",.F.,.F.)
EndIf

If lRetorno

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Valida a TES informada em relacao ao conteudo do campo C5_LIQPROD ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
	lRetorno := IIF( FindFunction('A410VldTes') .And. cPaisLoc=="ARG", A410VldTes(), .T.)

EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura a integridade da rotina                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( Type("l410Auto") == "U" .Or. !l410Auto )
	Ma410Rodap(o)
EndIf

RestArea(aArea)
Return(lRetorno)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a410TudOk ³ Rev.  ³Eduardo Riera          ³ Data ³26.08.2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao de toda a GetDados                                ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto da GetDados                                   ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a validacao em toda a ³±±
±±³          ³Getdados                                                    ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410TudOk(o)

Local aArea      := GetArea()
Local aChkPMS	 := {}
Local aHandFat	 := {}
Local aContrato  := {}
Local aInfo			 := {{"Projeto","Tarefa","Faturamento","Remessas","Saldo Faturam.","Saldo Rem."}}
Local nPProduto	 := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPTes		 := aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES"})
Local nPItem	 := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEM"})
Local nPQtdVen	 := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPValor	 := aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALOR"})
Local nPOper	 := aScan(aHeader,{|x| AllTrim(x[2])=="C6_OPER"})
Local nPPrj		 := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PROJPMS"})
Local nPTsk		 := aScan(aHeader,{|x| AllTrim(x[2])=="C6_TASKPMS"})
Local nPEDT		 := aScan(aHeader,{|x| AllTrim(x[2])=="C6_EDTPMS"})
Local nPQtdLib	 := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDLIB"})
Local nPContrat  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_CONTRAT"})
Local nPItemCon  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEMCON"})
Local nPNfOrig   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NFORI"})
Local nPSerOrig  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_SERIORI"})
Local nPItOrig   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEMORI"})
Local nPNumOrc   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMORC"})
Local nPReserva  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_RESERVA"})
Local nPLocal    := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCAL"})
Local nPprcven   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN"})
Local nPprunit   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRUNIT"})
Local nPosServ   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_SERVIC"})
Local nPLoteCtl  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOTECTL"})
Local nPNumLote  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMLOTE"})
Local nMaxArray	 := Len(aCols)
Local nCntFor	 := 0
Local lRetorna	 := .T.
Local nQtdDel	 := 0
Local nX	 := 0
Local nSldPms	 := 0
Local nSldPmsR	 := 0
Local nTotPed    := 0
Local cAuxPrj	 := ""
Local cTesAux    := ""
Local nVlrTot	 := 0
Local lWmsNew    := SuperGetMV("MV_WMSNEW",.F.,.F.)
Local lCTRWMS    := SB5->(FieldPos("B5_CTRWMS")) > 0
Local oSaldoWMS  := IIf(lWmsNew,WMSDTCEstoqueEndereco():New(),Nil)
Local aSaldos	 := {}
Local aAreaAnt	 := {}
Local nFindEnd	 := 0
Local nPosNumeri := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMSERI"})
Local nPLocaliz  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCALIZ"})
Local nTpProd    := aScan(aHeader,{|x| AllTrim(x[2])== "C6_TPPROD"})
Local lIFatDpr	 := SuperGetMV("MV_IFATDPR",.F.,.F.)
Local nProdVnd	 := 0
Local nProdDsv	 := 0
Local cVend	 	:= ""
Local cVendedor 	:= ""
Local lF4VlZero	:= SF4->(FieldPos("F4_VLRZERO")) > 0	

If ( nMaxArray == 1  )
	If	(  Empty(aCols[nMaxArray][nPProduto]) )
		Help(" ",1,"A410SEMREG")
		lRetorna	 := .F.
	EndIf
EndIf

If M->C5_TIPO $ "DB" .And. M->C5_ACRSFIN <> 0
	Help(" ",1,"A410DEVACR")
	lRetorna := .F.
Endif

If IsInCallStack("A410COPIA") .And. !l410Auto
	cVend := "1"
	For nX := 1 To Fa440CntVen()
		cVendedor := &("C5_VEND"+cVend)
		If !Empty(cVendedor)
			dbSelectArea("SA3")
			dbSetOrder(1)
			If dbSeek(xFilial("SA3") + cVendedor)
				If !RegistroOk("SA3",.F.)
					Aviso(STR0038,STR0172 + cVendedor + STR0173,{STR0040}) // "Atencao!"##"Codigo do vendedor: "##" utilizado por este cliente esta bloqueado no cadastro de vendedores!"##"Ok"
					lRetorna:= .F.
					Exit
				EndIf
			EndIf
		EndIf	
		cVend := Soma1(cVend,1)
	Next nX
EndIf	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o usuario tem premissao para alterar o ³
//³pedido de venda                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc <> "BRA" .AND. SC5->(FieldPos("C5_CATPV")) > 0 .AND. !Empty(M->C5_CATPV)
	If AliasIndic("AGS") //Tabela que relaciona usuario com os Tipos de Pedidos de vendas que ele tem acesso
		DBSelectArea("AGS")
		DBSetOrder(1)
		If DBSeek(xFilial("AGS") + __cUserId) //Se não encontrar o usuário na tabela, permite ele alterar o pedido
			If !DBSeek(xFilial("AGS") + __cUserId + M->C5_CATPV) //Verifica se o usuario tem premissao
				MsgStop(STR0167 + " " + STR0003 + " " + STR0168)//"Este usuario nao tem permissao para incluir pedidos de venda com essa categoria."
				lRetorna := .F.
			EndIf
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Para integracao SIGAFAT com SIGADPR somente um item do tipo desenvolvimento por pedido de venda. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lIFatDpr .AND. (Type("lExAutoDPR") == "L" .AND. !(lExAutoDPR)) .AND.  SC6->(FieldPos("C6_TPPROD")) > 0 ) 
	For nCntFor := 1 to nMaxArray
		If !aCols[nCntFor][Len(aCols[nCntFor])]
			If aCols[nCntFor][nTpProd] == "1"
				nProdVnd++
			ElseIf aCols[nCntFor][nTpProd] == "2"
				nProdDsv++
			EndIf
			If nProdDsv > 1 .OR. ( nProdVnd > 0 .AND. nProdDsv > 0 )
				MsgAlert(STR0310) //"É permitido somente um item do tipo Desenvolvimento por Pedido de Venda!"
				lRetorna := .F.
				Exit
			EndIf
		EndIf		
	Next nCntFor
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Valida se a nota ainda esta no CQ.                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorna .AND. M->C5_TIPO == "D"
	For nCntFor := 1 to nMaxArray
		If !aCols[nCntFor][Len(aCols[nCntFor])]
			lRetorna := Ma410VldQEK( M->C5_CLIENTE,M->C5_LOJACLI,aCols[nCntFor][nPNfOrig],aCols[nCntFor][nPSerOrig],aCols[nCntFor][nPItOrig],aCols[nCntFor][nPProduto]) 
			If !lRetorna
					Exit
				EndIf
		EndIF
	Next nCntFor
EndIf

If cPaisLoc == "MEX" .And. (M->C5_TIPOPE) $ "1|2" .And. SuperGetMV("MV_CFDIEXP",.F.,.F.)
	If Empty(M->C5_CVEPED) .Or. Empty(M->C5_CERORI) .Or. Empty(M->C5_INCOTER) .Or. Empty(M->C5_SUBDIV) .Or. Empty(M->C5_TCUSD) .Or. Empty(M->C5_TOTUSD)
		MSGINFO(STR0326 + CRLF + ; //"Para el tipo de operación Exportación deben de existir los siguientes datos: "
		STR0327 + CRLF + ; //" - Clave de Pedimento"
		STR0328 + CRLF + ; //" - Certificado Origen"
		STR0329 + CRLF + ; //" - Incoterm"
		STR0330 + CRLF + ; //" - Subdivisión"
		STR0331 + CRLF + ; //" - Tipo Cambio USD"
	    STR0332 + CRLF + ; //" - Total USD" 
	    STR0333) //" - Mercancias"
			lRetorna := .F.
		EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ verifica se o ultimo elemento do array esta em branco³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lRetorna )
	For nCntFor := 1 to nMaxArray
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Deleta os itens com  produto em branco                                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( Empty(aCols[nCntFor,nPProduto]) )
			aCols[nCntFor,Len(aCols[nCntFor])] := .T.
		EndIf
		If ( !aCols[nCntFor][Len(aCols[nCntFor])] )//Deletado
			If Empty(cTesAux)
				cTesAux:= aCols[nCntFor][nPTes] 
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Avalia o Tes                                                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If (nCntFor > 1 .And. !aCols[nCntFor-1][Len(aCols[nCntFor-1])])  //verifica se esta deletado
				lRetorna	:= A410ValTES(aCols[nCntFor][nPTes],IIf(nCntFor > 1,aCols[nCntFor-1][nPTes],NIL))
			Else
				lRetorna	:= A410ValTES(aCols[nCntFor][nPTes],cTesAux)
			EndIf
			If ( NoRound(aCols[nCntFor][nPQtdLib],aHeader[nPQtdLib,4]) > NoRound(aCols[nCntFor][nPQtdVen],aHeader[nPQtdVen,4]) .And. SuperGetMv("MV_LIBACIM") )
				Help(" ",1,"QTDLIBMAI")
				lRetorna := .F.
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica os campos C6_PRCVEN, C6_VALOR e C6_PRUNIT se estao em branco|
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( lRetorna .And. AT(M->C5_TIPO,"CIP")==0 )
				If ( Empty(aCols[nCntFor,nPPrcven]) ) .or. ( Empty(aCols[nCntFor,nPValor]))
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					//Tratamento para quando for valor do item igual a zero permitido quando F4_VLRZERO = SIM³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If !(lF4VlZero .And. Posicione("SF4",1,xFilial("SF4")+aCols[n][nPTes],"SF4->F4_VLRZERO") == "1") 
						Help(" ",1,"A410VZ")
						lRetorna := .F.
					EndIf	
				EndIf
			EndIf
			If ( lRetorna .And. AT(M->C5_TIPO,"CIP") <> 0 )
				If ( Empty(aCols[nCntFor,nPPrcven]) ) .or. ( Empty(aCols[nCntFor,nPValor]) )
					Help(" ",1,"A410VZ2")
					lRetorna := .F.
				EndIf
			EndIf
			
			If SC5->(FieldPos("C5_TPCOMPL")) > 0 .And. ( lRetorna .And. AT(M->C5_TIPO,"C") <> 0 )
				If M->C5_TPCOMPL == "1" 	//Compl. Preço
					If ( A410Arred(aCols[nCntFor,nPValor],"C6_VALOR") <> A410Arred(aCols[nCntFor,nPPrcven],"C6_VALOR") )
						Help(" ",1,"A410TOTAL")
						lRetorna := .F.
					EndIf	
				Else	//Compl. Quantidade
					If ( Empty(aCols[nCntFor,nPQtdVen]) ) 
						Help(" ",1,"A410VZ")
						lRetorna := .F.					
					EndIf
					If lRetorna .And. ( A410Arred(aCols[nCntFor,nPValor],"C6_VALOR") <> A410Arred(aCols[nCntFor,nPPrcven]*aCols[nCntFor,nPQtdVen],"C6_VALOR") )
						Help(" ",1,"A410TOTAL")
						lRetorna := .F.
					EndIf					
				EndIf
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica o contrato de parceria                              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nPContrat<>0 .And. nPItemCon<>0 .And. !Empty(aCols[nCntFor][nPContrat])
				nX := aScan(aContrato,{|x| x[1] == aCols[nCntFor][nPContrat] .And. x[2] == aCols[nCntFor][nPItemCon]})
				If nX == 0
					aadd(aContrato,{aCols[nCntFor][nPContrat],aCols[nCntFor][nPItemCon],aCols[nCntFor][nPQtdVen]})
					nX := Len(aContrato)
				Else
					aContrato[nX][3] += aCols[nCntFor][nPQtdVen]
				EndIf
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Impede a alteracao de Itens do Pedido com Servico de WMS jah executado ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lRetorna .And. IntDL(aCols[nCntFor,nPProduto]) .And. ALTERA
				lRetorna := WmsAvalSC6("3",SC5->C5_CLIENTE,SC5->C5_LOJACLI,SC5->C5_NUM,aCols[nCntFor,nPItem],aCols[nCntFor][nPosServ],M->C5_TPCARGA,M->C5_GERAWMS)
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se os projetos possuem saldo para faturar³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  
			If lRetorna .And. SuperGetMv("MV_PMSBLQF",,"0") == "1"
				If !Empty(aCols[nCntFor][nPPrj])
					If !Empty(aCols[nCntFor][nPEDT])
						Aviso(STR0072,STR0073+aCols[nCntFor][nPItem]+".",{STR0074},2)
						lRetorna := .F.
					Else
						nPosChk := aScan(aChkPMS,{|x| x[2]+x[3]==aCols[nCntFor][nPPrj]+aCols[nCntFor][nPTsk]})
						If nPosChk > 0 
							If aCols[nCntFor][nPTes] $ SuperGetMv("MV_PMSTSV",,"")
								aChkPMS[nPosChk][1] += aCols[nCntFor][nPValor]
							EndIf
							If aCols[nCntFor][nPTes] $ SuperGetMv("MV_PMSTSR",,"")
								aChkPMS[nPosChk][4] += aCols[nCntFor][nPValor]
							EndIf
						Else
							If aCols[nCntFor][nPTes] $ SuperGetMv("MV_PMSTSV",,"")
								aAdd(aChkPMS,{aCols[nCntFor][nPValor],aCols[nCntFor][nPPrj],aCols[nCntFor][nPTsk],0})
							EndIf
							If aCols[nCntFor][nPTes] $ SuperGetMv("MV_PMSTSR",,"")
								aAdd(aChkPMS,{0,aCols[nCntFor][nPPrj],aCols[nCntFor][nPTsk],aCols[nCntFor][nPValor]})
							EndIf
						EndIf
					EndIf
				EndIf
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se o pedido e uma devolucao de compra, um    ³
			//³complemento de ICMS ou IPI, para validar a nota fiscal³
			//³de origem.                                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( lRetorna .And. At(M->C5_TIPO,"CIPD") <> 0 .And. Empty( aCols[nCntFor,nPNFOrig] ) ) 
				If ( At(M->C5_TIPO,"CIP") <> 0 )
					Help(" ",1,"A410COMPIP")
				Else
					Help(" ",1,"A410NFORI")
				EndIf
				lRetorna := .F.
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica as faixas da condicao de pagamento                  ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nTotPed += aCols[nCntFor][nPValor]
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Verifica o contrato de parceria                              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nPContrat<>0 .And. nPItemCon<>0
				dbSelectArea("SC6")
				dbSetOrder(1)
				If MsSeek(xFilial("SC6")+M->C5_NUM+aCols[nCntFor][nPItem]) .And. !Empty(SC6->C6_CONTRAT)
					nX := aScan(aContrato,{|x| x[1] == SC6->C6_CONTRAT .And. x[2] == SC6->C6_ITEMCON})
					If nX == 0
						aadd(aContrato,{SC6->C6_CONTRAT,SC6->C6_ITEMCON,0})
						nX := Len(aContrato)
					EndIf
					aContrato[nX][3] -= SC6->C6_QTDVEN
				EndIf
			EndIf
			If lRetorna .And. GetNewPar("MV_CHCLRES",.F.)
				If nPReserva>0 .And. !Empty(aCols[nCntFor][nPReserva])
					If SC0->(MsSeek(xFilial("SC0")+aCols[nCntFor][nPReserva]+aCols[nCntFor][nPProduto]+aCols[nCntFor][nPLocal]))
						If SC0->C0_TIPO == "CL" .And. SC0->C0_DOCRES <> M->C5_CLIENTE
							MsgAlert(STR0093 + Alltrim(aCols[nCntFor][nPReserva]) + STR0094 + SC0->C0_DOCRES)
							lRetorna := .F.
						Endif
					Endif
				Endif
			Endif
		Else
			nQtdDel++
		EndIf
		//
		// Template GEM - Gestao de Empreendimentos Imobiliarios
		//
		// Valida a linha do browse
		//
		If lRetorna 
			If ExistBlock("GEM410LI") 
				lRetorna := ExecBlock("GEM410LI",.F.,.F.,{ nCntFor })
			ElseIf ExistTemplate("GEM410LI") 
				lRetorna := ExecTemplate("GEM410LI",.F.,.F.,{ nCntFor })
			Endif
		EndIf

		If ( !lRetorna )
			Exit
		EndIf
	Next nCntFor
	If ( nQtdDel >= nMaxArray .And. ALTERA )
		Help(" ",1,"EXCLTODOS")
		lRetorna := .F.
	EndIf
EndIf

If lRetorna
	aChkPMS := aSort(aChkPMS,,,{|x,y| x[2] < y[2] })
	cAuxPrj	:= ""
	For nX := 1 to Len(aChkPMS)
		If cAuxPrj <> aChkPMS[nX,2]
			AF8->(dbSetOrder(1))
			AF8->(MsSeek(xFilial()+aChkPMS[nX,2]))
			aHandFat := PmsIniFat(AF8->AF8_PROJET,AF8->AF8_REVISA,AF8->AF8_PROJET+SPACE(2))
		EndIf
		If !PmsChkSldF(aHandFat,M->C5_MOEDA,aChkPMS[nX,1],aChkPMS[nX,2],"",aChkPMS[nX,3],Altera,M->C5_EMISSAO,@nSldPms,aChkPMS[nX,4],nSldPmsR)
			aAdd(aInfo,{aChkPMS[nX,2],aChkPMS[nX,3],TransForm(aChkPMS[nX,1],"@E 999,999,999,999.99"),TransForm(aChkPMS[nX,4],"@E 999,999,999,999.99"),TransForm(nSldPms,"@E 999,999,999,999.99"),TransForm(nSldPmsR,"@E 999,999,999,999.99")})
			lRetorna := .F.
		EndIf
	Next nX
	If !lRetorna
		If Aviso(STR0075,STR0076,{STR0077,STR0074},2)==1
			PmsDispBox(aInfo,6,STR0078,{30,60,50,50,50,50},,1)
		EndIf
	EndIf
EndIf

If lRetorna .And. SuperGetMv("MV_RSATIVO",.F.,.F.) .And. !lPlanRaAtv
	MsgAlert("MV_RSATIVO Habilitado.Para o tratamento da primeira saída do Ativo, selecionar a opção Planilha para validação da digitação.")
	lRetorna := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica o contrato de parceria                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorna
	For nX := 1 To Len(aContrato)
		dbSelectArea("ADB")
		dbSetOrder(1)
		MsSeek(xFilial("ADB")+aContrato[nX][1]+aContrato[nX][2])
		If aContrato[nX][3] > ADB->ADB_QUANT-ADB->ADB_QTDEMP .And. (nPNumOrc > 0 .And. Empty(aCols[nX][nPNumOrc]))
			Help(" ",1,"A410QTDCTR2")
			lRetorna := .F.
		EndIf
	Next nX
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica a Condicao de Pagamento Tipo 9                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !A410Tipo9()
	lRetorna  := .F.
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se a tabela de precos eh valida                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorna
	lRetorna := MaVldTabPrc(M->C5_TABELA,M->C5_CONDPAG,,M->C5_EMISSAO)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica as faixas da condicao de pagamento                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRetorna
	dbSelectArea("SE4")
	dbSetOrder(1)
	MsSeek(xFilial("SE4")+M->C5_CONDPAG)
	If nTotPed > SE4->E4_SUPER .AND. SE4->E4_SUPER <> 0 .And. GetNewPar("MV_CNDPLIM","1")=="1"
		Help(" ","1","LJLIMSUPER")
		lRetorna := .F.
	ElseIf nTotPed < SE4->E4_INFER .AND. SE4->E4_INFER <> 0 .And. GetNewPar("MV_CNDPLIM","1")=="1"
		Help(" ","1","LJLIMINFER")
		lRetorna := .F.
	Endif
EndIf             

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Para Australia há a necessidade de validar o valor total com impostos para verificar se ³
//|a geração da nota ultrapassará valor mínimo requerendo identificação                    |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cPaisLoc == "AUS" .AND. lRetorna .AND. M->C5_TIPO == "N"
//Conversão para moeda diferente de 1
	nVlrTot := Ma410Impos(3,.T.)
	If M->C5_MOEDA <> 1                                     
		nVlrTot := xMoeda(nVlrTot,M->C5_MOEDA,1,dDataBase)	
	EndIf
	lRetorna := LxDlVldLim(GetMv("MV_FATVLID",.T.,1000),nVlrTot,"SC5",M->C5_CLIENTE,M->C5_LOJACLI)		
	If lRetorna
		LxGrvCliAus("SC5") 
	EndIf
EndIf

//Validações referentes ao endereço controlado por WMS
If lRetorna .And. lWmsNew
	For nCntFor := 1 to nMaxArray
		If Localiza(aCols[nCntFor][nPProduto],.T.,.T.) .And. !Empty(aCols[nCntFor][nPLocaliz]) .And. aCols[nCntFor][nPQtdLib] > 0
			//Protege o Alias antes da chamada do método WMS
			aAreaAnt := GetArea()
			//Posiciona na SB5 para saber se existe controle WMS para o produto
			DbSelectArea("SB5")
			If IntDl(aCols[nCntFor][nPProduto])
				//Consulta o Saldo do Endereço no WMS
				aSaldos := oSaldoWMS:GetSldEnd(aCols[nCntFor][nPProduto],aCols[nCntFor][nPLocal],aCols[nCntFor][nPLocaliz],aCols[nCntFor,nPLoteCtl],aCols[nCntFor,nPNumLote],aCols[nCntFor,nPosNumeri],1)//cPrdOri,cLocal,cEnder,cLote,cSubLote,cNumSer,nOrdem
				//Recupera o Alias
				RestArea(aAreaAnt)
				nFindEnd := aScan(aSaldos,  {|x| x[2] == aCols[nCntFor][nPLocaliz]})
				If nFindEnd == 0
					Help(" ",1,"LOCALIZOBR")
					lRetorna := .F.
				ElseIf nFindEnd > 0 .And. QtdComp(aSaldos[nFindEnd][6]) < aCols[nCntFor,nPQtdVen]
					Help(" ",1,"SALDOLOCLZ")
					lRetorna := .F.
				EndIf
			EndIf
		EndIf
	Next CntFor
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica a Validacao dos Pontos de Entrada                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lRetorna )
	If ( ExistTemplate("MTA410",,.T.) )
		lRetorna  := ExecTemplate("MTA410",.F.,.F.)
	EndIf
EndIf
If ( lRetorna )
	If ( ExistBlock("MTA410",,.T.) )
		lRetorna  := ExecBlock("MTA410",.F.,.F.)
	EndIf
EndIf
RestArea(aArea)
Return( lRetorna )

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A410ValDel³ Autor ³ Aline Correa do Vale  ³ Data ³05/03/02  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Valida a exclusao de itens com OP na alteracao do PV       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
*/
Function A410ValDel(lVldOP)
Local lRet		:= .T.
Local nPosItem  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEM"})
Local nPosTes   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES"})
Local nPosProd  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPosOP  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_OP"})
Local nPosNumOP  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMOP"})
Local nPosItemOP  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEMOP"})
Local lAtuSGJ	:= SuperGetMV("MV_PVCOMOP",.F.,.F.) .And. FindFunction("ALIASINDIC") .And. AliasIndic("SGJ")
Local lM410lDel := ExistBlock("M410lDel")	//Ponto de entrada para validar a exclusao de itens na alteracao
Local lPrcPod3  := ( GetNewPar( "MV_PRCPOD3", "1" ) == "2" )                    
Local lRetPE    := .F.
Local cPoder3	:= ""
Local lIncMat416:= ( IsInCallStack("MATA416") .And. IsInCallStack("A410INCLUI") )
Local cNumpedido:= M->C5_NUM
Default lVldOP := .T.

If lVldOP .Or. lIncMat416 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Trata se exclui ou nao itens que geraram OPs         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !aCols[n][Len(aCols[n])]
		SC6->(dbSetOrder(1))
		If SC6->(MsSeek(xFilial("SC6")+cNumpedido+aCols[n][nPosItem]+aCols[n][nPosProd])) .Or. lIncMat416
			If (SC6->C6_OP $ "01/03") .Or. (lIncMat416 .And. aCols[n][nPosOP] $ "01/03")
				If !lAtuSGJ .And. SuperGetMv("MV_DELPVOP",.F.,.T.)
						If lIncMat416
							lRet:=(Aviso(OemToAnsi(STR0014),STR0027+aCols[n][nPosItem]+" - "+aCols[n][nPosProd]+STR0028+aCols[n][nPosNumOP]+" "+aCols[n][nPosItemOP]+"."+STR0029,{STR0030,STR0031}) == 1) //"Aten‡„o"###"O item "###" gerou a Ordem de Producao "###"Confirma Exclusao ?"###"Sim"###"Nao"
						Else
							lRet:=(Aviso(OemToAnsi(STR0014),STR0027+SC6->C6_ITEM+" - "+SC6->C6_PRODUTO+STR0028+SC6->C6_NUMOP+" "+SC6->C6_ITEMOP+"."+STR0029,{STR0030,STR0031}) == 1) //"Aten‡„o"###"O item "###" gerou a Ordem de Producao "###"Confirma Exclusao ?"###"Sim"###"Nao"
						EndIf	
				Else
					Aviso(OemToAnsi(STR0014),STR0060,{STR0040})
					lRet := .F.
				Endif
			EndIf
			EndIf
	EndIf

EndIf    

If lRet
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ponto de entrada para validar a exclusao de itens na alteracao³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lM410lDel 
		lRetPE := ExecBlock("M410lDel",.F.,.F.,{lRet})
		lRet   := Iif( ValType(lRetPE) == "L",lRetPE,lRet)
	EndIf
EndIf	

If lRet .And. Type("M->C5_TABELA") != "U" .And. !Empty(M->C5_TABELA);
	.And. FindFunction("A410RvPlan") 
	
	If nPosTes > 0
		DbSelectArea("SF4")
		DbSetOrder(1)
		If MsSeek(xFilial("SF4")+aCols[n][nPosTes])
			cPoder3 := SF4->F4_PODER3
		Else
			cPoder3 := "N"
		EndIf
	Else
		cPoder3 := "N"
	EndIf
	
	If Type("M->C5_TIPO") != "U" .And. ( ( M->C5_TIPO=="N" .And. cPoder3 == "N" ) .Or. lPrcPod3 ) 
		A410RvPlan(M->C5_TABELA,aCols[n][nPosProd], .F./*lClear*/, .T./*lDeleta*/)
	EndIf
EndIf

Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma410Bar  ³ Autor ³ Eduardo Riera         ³ Data ³ 18.02.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ EnchoiceBar especifica do Mata410                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ oDlg: 	Objeto Dialog                                     ³±±
±±³          ³ bOk:  	Code Block para o Evento Ok                       ³±±
±±³          ³ bCancel: Code Block para o Evento Cancel                   ³±±
±±³          ³ nOpc:    nOpc transmitido pela mbrowse                     ³±±
±±³          ³ aForma: Array com as formas de pagamento                   ³±±
±±³          ³ nTotalPed: Inteiro com o valor do Pedido                   ³±±
±±³          ³ aRecnoSE1: Array com os titulos de Adiantamento            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Ma410Bar(oDlg,bOk,bCancel,nOpc,oGetD,nTotalPed,aRecnoSE1,aHeadAGG,aColsAGG,cCondPAdt,lOrcamento)

Local aAreaSC5	:= SC5->(GetArea())
Local aButtons  := {}
Local aButtonUsr:= {}
Local nI        := 0
LOCAL lOpcPadrao:= GetNewPar("MV_REPGOPC","N") == "N"
Local nEmpBn 	:= A410CtEmpBN()
Local nPProduto	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPQtdVen	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPEntreg	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_ENTREG"})
Local nPVeic	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_BASVEIC"})
Local nPOpcional:= If(lOpcPadrao,aScan(aHeader,{|x| AllTrim(x[2])=="C6_OPC"}),aScan(aHeader,{|x| AllTrim(x[2])=="C6_MOPC"}))
Local lAltRat	:= .F.
Local nLAutoAdt := 0
Local aAreaSB1	:= SB1->(GetArea())
Local lIntGFE	:= SuperGetMV("MV_INTGFE",.F.,.F.)
Local lBxOrcam	:= (nOpc == 2 .And. (Upper(Funname()) == "MATA416"))

Default cCondPAdt :="0"
Default aHeadAGG := {}
Default aColsAGG := {}
Default lOrcamento	:= .F.

If Type( "nAutoAdt" ) == "N" .AND. nAutoAdt > 0
	nLAutoAdt := nAutoAdt
EndIf

If ( nOpc == 3 .Or. nOpc == 4 .Or. (nOpc == 2 .And. !AtIsRotina("A450F4CON")) )
	aadd(aButtons,{"POSCLI",{|| If(M->C5_TIPO=="N".And.!Empty(M->C5_CLIENTE),a450F4Con(),.F.),Pergunte("MTA410",.F.)},STR0022,STR0067 }) 	//"Posi‡„o de Cliente"
EndIf
If cPaisLoc <> "PTG"
	aadd(aButtons,{"BUDGET",{|| Ma410ForPg(nOpc)},STR0041, STR0068 }) //"Formas de Pagamento"
EndIf	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ponto de entrada para verificar se o usuário pode acessar o botão Planilha Financeira    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("A410PLAN")
	If Execblock("A410PLAN",.F.,.F.)
		aadd(aButtons,{"RELATORIO",{|| Pergunte("MTA410",.F.), Ma410Impos(aRotina[ nOpc, 4 ]) },STR0043, STR0069 })	//"Planilha Financeira"
	 Endif
Else
	aadd(aButtons,{"RELATORIO",{|| Pergunte("MTA410",.F.), Ma410Impos(aRotina[ nOpc, 4 ]) },STR0043, STR0069 })	//"Planilha Financeira"
Endif                                                                                                                            

If SuperGetMV("MV_CALCVEI",,.F.) == .T. .Or. SuperGetMV("MV_VEICICM",,.F.) == .T.
	dbSelectArea("SB1")
	dbSetOrder(1)
	msSeek(xFilial("SB1")+aCols[N,nPProduto])
	aadd(aButtons,{"CARGA",{|| F4Veicu(nOpc,SB1->B1_COD,SB1->B1_CHASSI,@aCols,N)},"Veiculos", "Veiculos" })	//"Planilha Financeira"
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Ponto de entrada para verificar se o usuario pode acessar a formacao    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If VerSenha(107) //Permite consulta a Formacao de Precos
	If ExistBlock("A410BPRC")
		If ExecBlock("A410BPRC",.F.,.F.)
			aadd(aButtons,{"AUTOM",{||Ma410Forma()},STR0056,STR0070 })	//"Formacao de Precos"
		Endif
	Else
		aadd(aButtons,{"AUTOM",{||Ma410Forma()},STR0056,STR0070 })	//"Formacao de Precos"
	Endif
EndIf

If ( aRotina[ nOpc, 4 ] == 2 .Or. aRotina[ nOpc, 4 ] == 6 ) .And. !AtIsRotina("A410TRACK")
	AAdd(aButtons,{ "BMPVISUAL", {|| A410Track() }, STR0050, STR0071 } )  // "System Tracker"
EndIf
If !( nOpc == 2 .Or. nOpc == 5 ) .And. AtIsRotina("MATA410")
	If ExistBlock("A410BPRO")
		If ExecBlock("A410BPRO",.F.,.F.)
			Aadd(aButtons,{"PRODUTO", {|| Ma410BOM(aHeader,aCols,N) } ,STR0085,STR0086}) //"Estrutura de Produto"###"Estr.Prod."
		EndIf
	Else
		Aadd(aButtons,{"PRODUTO", {|| Ma410BOM(aHeader,aCols,N) } ,STR0085,STR0086}) //"Estrutura de Produto"###"Estr.Prod."	
	EndIf
EndIf
Aadd(aButtons,{"PESQUISA",{|| GdSeek(oGetD,STR0001,,,.F.)},STR0001,STR0001}) //"Pesquisar"
If ( nOpc == 1 .Or. nOpc == 2 .Or. nOpc == 5 ) .And. nPOpcional > 0
	Aadd(aButtons,{"SDUCOUNT", {|| SeleOpc(2,"MATA410",aCols[n][nPProduto],,,Ma410Opc(lOpcPadrao,nPOpcional),"M->C6_PRODUTO",.T.,aCols[n,nPQtdVen],aCols[n,nPEntreg]) } ,STR0106,STR0107}) //"Opcionais Selecionados"###"Opcionais"
EndIf
If (nEmpBn != 0) .And. (nOpc == 3)
	Aadd(aButtons,{"UP_MDI",{|| A410RemBen()},STR0120,STR0121}) //"Remessa para Beneficiamento"###"Beneficiamento"
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³O processo de Recebimento Antecipado estará disponivel ³
//³apenas para TOP no Financeiro.                         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
#IFDEF TOP 
	If cPaisLoc $ "ANG|BRA" .and. AliasInDic("FIE")
		aRecnoSE1 := FPedAdtPed( "R", {M->C5_NUM},,nLAutoAdt )
		If (nOpc == 3 .OR. nOpc == 4 .OR. nOpc == 6 .OR. lBxOrcam) .And. (Empty(M->C5_NOTA)) 
			Aadd(aButtons,{"FINIMG32",{|| A410Adiant(M->C5_NUM, M->C5_CONDPAG, 0/*nTotalPed*/, @aRecnoSE1, , M->C5_CLIENTE, M->C5_LOJACLI,,Iif(!lBxOrcam,aRatCTBPC,Nil),Iif(!lBxOrcam,aAdtPC,Nil),@cCondPAdt)},STR0123,STR0124}) //"Recebimento antecipado"##"Adiantamento"
		Else
			Aadd(aButtons,{"FINIMG32",{|| FPDxADTREL("R", M->C5_NUM, 0, @aRecnoSE1, M->C5_CLIENTE, M->C5_LOJACLI, .T.)},STR0123,STR0124}) //"Recebimento antecipado"##"Adiantamento"		
		EndIf
	EndIf
#ENDIF

//Rateio por item
//Opção de rateio não será carregado no orçamento
If AliasInDic("AGG") .And. !lOrcamento// verifica se existe a nova tabela, para habilitar o buttom.
	lAltRat := nOpc == 3 .OR. nOpc == 4 .OR. nOpc == 6 .OR. nOpc == 8
	Aadd(aButtons , {'S4WB013N' ,{|| a410RatCC(@aHeadAGG,@aColsAGG,lAltRat,N) },STR0145,STR0144} ) //"Rateio por Item do pedido de venda"##"Rateio"
EndIf 

If lIntGfe
	Aadd(aButtons , {'SMLFRETE' ,{|| Processa ({|| a410SmlFrt()})},STR0193,STR0204} ) //"Simulação de Frete"##"Simulação""												
EndIf

If FindFunction("a410IncRem")
	//Amarracao NF Servico
	Aadd(aButtons , {"AUTOM" ,{|| a410IncRem() },STR0217,STR0217} ) //"Amarração Nf. Servico"
EndIf

//BUSCAR ABATIMENTO ISS
If SuperGetMV("MV_ISSXMUN",.F.,.F.) .And. (nOpc == 3 .OR. nOpc == 4)
	Aadd(aButtons , {'OMSDIVIDE' ,{|| a410ISSMun() },"Abat. ISS","Abat. ISS"} ) //"Rateio por Item do pedido de venda"##"Rateio"
EndIf 
	
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//³Pontos de Entrada 													   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistTemplate("A410CONS",,.T.)
	aButtonUsr := ExecTemplate("A410CONS",.F.,.F.)
	If ValType(aButtonUsr) == "A"
		For nI   := 1  To  Len(aButtonUsr)
			Aadd(aButtons,aClone(aButtonUsr[nI]))
		Next nI
	EndIf
EndIf
If ExistBlock("A410CONS",,.T.)
	aButtonUsr := ExecBlock("A410CONS",.F.,.F.)
	If ValType(aButtonUsr) == "A"
		For nI   := 1  To  Len(aButtonUsr)
			Aadd(aButtons,aClone(aButtonUsr[nI]))
		Next nI
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica motivo de bloqueio por regra/verba                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If	SuperGetMv("MV_VEBLQRG", .F., .F.)	
	Aadd(aButtons,{"REGRA",{|| A410BlqReg() }, OemToAnsi(STR0192),  OemToAnsi(STR0192) })	//"Blq. Regra"
EndIf

If FindFunction("TK010isPerfil") .AND. TK010isPerfil()
	Aadd(aButtons,{"GRAF2D",{|| Iif(Empty(M->C5_CLIENTE) .OR. Empty(M->C5_LOJACLI),MsgAlert(STR0215),TK010Con(,,,,,"SA1",M->C5_CLIENTE+M->C5_LOJACLI)) }, STR0216,  STR0216}) //"Preencha o Cliente a Loja"#"Perfil"
EndIf	
//
// Template GEM - Gestao de Empreendimentos Imobiliarios
//
// Adiciona botoes na enchoice
// 
aButtonUsr:= {}
If ExistBlock("GMMA410BUT",,.T.)
	aButtonUsr := ExecBlock("GMMA410BUT",.F.,.F.,{nOpc ,M->C5_NUM ,M->C5_CLIENTE ,M->C5_LOJACLI})
ElseIf ExistTemplate("GMMA410BUT",,.T.)
	aButtonUsr := ExecTemplate("GMMA410BUT",.F.,.F.,{nOpc ,M->C5_NUM ,M->C5_CLIENTE ,M->C5_LOJACLI})
Endif	
If ValType(aButtonUsr) == "A"
	For nI := 1 To Len(aButtonUsr)
		Aadd(aButtons,aClone(aButtonUsr[nI]))
	Next nI
EndIf
//SIGAFIS -- Ajusta FCI
If nOpc == 4 .And. FindFunction("XFciAtuOrigem") 
	Aadd(aButtons,{"AUTOM",{|| XFciAtuOrigem(aCols,aHeader) }, STR0234,  STR0234}) //"Ajusta FCI"###"Ajusta FCI"
EndIf

RestArea(aAreaSB1)
RestArea(aAreaSC5)

Return (EnchoiceBar(oDlg,bOK,bcancel,,aButtons))
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³MatGrdSoma³ Autor ³Eduardo Riera          ³ Data ³ 26.02.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Atualizar a Quantidade Vendida com as Quantidades da Grade  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpN1: Quantidade digitada na Grade                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Linha do aCols Principal                             ³±±
±±³          ³ExpN2: Quantidade digitada na Acols Principal               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function MatGrdSoma(nLinAcols,nQtdInf,nColQtd)

Local nColunas	:= 0
Local nLinhas	:= 0
Local nSoma		:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Soma a Quantidade digitada na grade                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nColunas:=2 to Len(aHeadGrade[nLinAcols])
	For nLinhas:=1 to Len(aColsGrade[nLinAcols])
		nSoma+=aColsGrade[nLinAcols][nLinhas][nColunas][nColQtd]
	Next nLinhas
Next nColunas
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se ha divergencias                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( nSoma <> nQtdInf .And. nQtdInf <> 0 )
	Help(" ",1,"A410QTDDIF")
EndIf
Return(nSoma)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410gValid³ Autor ³Eduardo Riera          ³ Data ³26.02.99  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao da Grade de Produtos                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica se os valores digitados na grade sao validos  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Linha do aCols                                       ³±±
±±³          ³ExpL2: Indica se foi alterada a quantidade vendida          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a410GValid(nLinAcols,lQtdVen)     // --> Parametros usados para manter legado

Local lRetorno	:=.T.
Local nColuna	:= aScan(oGrade:aHeadGrade[oGrade:nPosLinO],{|x| ValType(x) # "C" .And. AllTrim(x[2]) == AllTrim(Substr(Readvar(),4))})
Local cProdGrd	:= ""
Local xConteudo	:= &(ReadVar())
Local nPDescon  := aScan(oGrade:aHeadAux,{|x| AllTrim(x[2])=="C6_DESCONT" })
Local nPEntreg  := aScan(oGrade:aHeadAux,{|x| AllTrim(x[2])=="C6_ENTREG" })
Local nPOpc     := aScan(oGrade:aHeadAux,{|x| AllTrim(x[2])=="C6_OPC" })
Local nGrdPrc 	:= 0
Local nTotPrc   := 0
Local aHeadBkp  := {}
Local aColsBkp  := {}
Local nNBkp 	:= 0
Local cOpcMark  := oGrade:aColsGrade[oGrade:nPosLinO,n,nColuna,oGrade:GetFieldGrdPos("C6_OPC")]
Local cOpc	    := ""
Local lGrdMult  := FindFunction("MATGRADE_V") .And. MATGRADE_V() >= 20110425 .And. "MATA410" $ SuperGetMV("MV_GRDMULT",.F.,"")
Local nAcrePrc  := 0

If FindFunction("MsMatGrade") .And. IsAtNewGrd()
	lQtdVen		:= If(lQtdVen==NIL,(oGrade:cCpo<>"C6_QTDLIB"),lQtdVen)
	nLinAcols	:= oGrade:oGetDados:oBrowse:nAt
	cProdGrd	:= oGrade:GetNameProd(,n,nColuna)
	
	If Posicione("SX3",2,oGrade:cCpo,"X3_TIPO") == "N"
		lRetorno := Positivo()
	EndIf
	
	If lRetorno .And. lGrdMult .And. oGrade:cCpo == "C6_PRCVEN" .And. oGrade:aColsFieldByName("C6_PRCVEN",,n,nColuna) <> xConteudo .And. !Empty(oGrade:aColsAux[oGrade:nPosLinO,nPDescon])
		Help(" ",1,"A410PRCD")
		lRetorno := .F.
	EndIf
										  
	If lRetorno .And. lQtdVen
		lRetorno := RegistroOk("SB1")
	EndIf         
	
	If lRetorno
		lRetorno := A410PedFat(cProdGrd,.T.,xConteudo,lQtdVen) 
	EndIf
	
	If ( lRetorno )	
		If ( ExistBlock("A410GVLD") )    
			//ATENCAO -> TRATAR ESTE PONTO DE ENTRADA E VER SE SERA NECESSARIO CRIAR VARIAVEIS PARA MANTER LEGADO    
			If Valtype('aHeadGrade')<>'A' .And. Valtype('aColsGrade')<>'A'
				PRIVATE aHeadGrade := {}
					PRIVATE aColsGrade := {}
			EndIf
			aHeadGrade := aClone(oGrade:aHeadGrade)
				aColsGrade := aClone(oGrade:aColsGrade) 		
			
			ExecBlock("A410GVLD",.F.,.F.,{nLinAcols,n,nColuna})
	
			If Valtype('aHeadGrade')=='A' .And. Valtype('aColsGrade')=='A'
				oGrade:aHeadGrade := aClone(aHeadGrade)	
				oGrade:aColsGrade := aClone(aColsGrade)
			EndIf
		
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica a quantidade Liberada                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( !lQtdVen )
		If ( SuperGetMv("MV_LIBACIM") )
			If  ( xConteudo > (oGrade:aColsFieldByName("C6_QTDVEN",,n,nColuna) ))
				Help(" ",1,"A410LIB")
				lRetorno := .F.
			EndIf
			If ( lRetorno .And. xConteudo > (oGrade:aColsFieldByName("C6_QTDVEN",,n,nColuna)  - oGrade:aColsFieldByName("C6_QTDENT",,n,nColuna) ) )
				HELP(" ",1,"A440QTDL")
				lRetorno := .F.
			EndIf
		EndIf
	EndIf
	
	SGA->(dbSetOrder(1))
																																
	If lRetorno .And. oGrade:cCpo == "C6_QTDVEN"
		If &(ReadVar()) > 0
			//Retorna aHeader, aCols e n para chamada da SeleOpc
			aHeadBkp := aClone(aHeader)
			aColsBkp := aClone(aCols)
			nNBkp	 := n
			aHeader  := aClone(oGrade:aHeadAux)
			aCols	 := aClone(oGrade:aColsAux)
			n		 := oGrade:nPosLinO
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Funcao utilizada para verificar a ultima versao do fonte		³
			//³ SIGACUSB.PRX aplicado no rpo do cliente, assim verificando		|
			//| a necessidade de uma atualizacao neste fonte. NAO REMOVER !!!	³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !(FindFunction("SIGACUSB_V") .and. SIGACUSB_V() >= 20090204)
				Final(STR0122)	//"Atualizar SIGACUSB.PRX !!!"
			EndIf
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Tratamento diferencial de precos para os    ³
			//³ opcionais do produto: subtrai para caso	    ³
			//³ o opcional seja trocado.					³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lGrdMult .And. At(M->C5_TIPO,"CIP") == 0 .And. !Empty(cOpcMark)
				nGrdPrc := aScan(oGrade:aBkpMult[1],{|x| ValType(x) # "C" .And. AllTrim(x[2]) == StrTran(ReadVar(),"M->","") .And. AllTrim(x[11]) == "C6_PRCVEN"})
				nTotPrc := aScan(oGrade:aSumCpos,{|x| AllTrim(x[1]) == "C6_PRCVEN"})
				While !Empty(cOpcMark)
					cOpc     := SubStr(cOpcMark,1,At("/",cOpcMark)-1)
					cOpcMark := SubStr(cOpcMark,At("/",cOpcMark)+1)
					If SGA->(dbSeek(xFilial("SGA")+cOpc))
						nAcrePrc += SGA->GA_PRCVEN
					EndIf
				End
				If !Empty(nAcrePrc)
					oGrade:aSumCpos[nTotPrc,2] -= Min(nAcrePrc,oGrade:aBkpMult[2,nNBkp,nGrdPrc])
					oGrade:aBkpMult[2,nNBkp,nGrdPrc] -= Min(nAcrePrc,oGrade:aBkpMult[2,nNBkp,nGrdPrc])
				EndIf
			EndIf
			
			cOpcMark := oGrade:aColsGrade[oGrade:nPosLinO,nNBkp,nColuna,oGrade:GetFieldGrdPos("C6_OPC")]
			lRetorno := SeleOpc(2,"MATA410",cProdGrd,,,cOpcMark,"M->C6_PRODUTO",,xConteudo,aCols[oGrade:nPosLinO,nPEntreg])
			n		 := nNBkp
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Tratamento diferencial de precos para os    ³
			//³ opcionais do produto: se cancelou a tela    ³
			//³ retorna o preco diferencial do opcional.	³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lGrdMult .And. !lRetorno
				oGrade:aBkpMult[2,nNBkp,nGrdPrc] += nAcrePrc
				oGrade:aSumCpos[nTotPrc,2] += nAcrePrc
			EndIf
				
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Adiciona o opcional do produto no aCols                                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If !Empty(aCols[oGrade:nPosLinO,nPOpc])
				oGrade:aColsGrade[oGrade:nPosLinO][n][nColuna][oGrade:GetFieldGrdPos("C6_OPC")] := aCols[oGrade:nPosLinO,nPOpc]
				aCols[oGrade:nPosLinO,nPOpc] := ""
			EndIf
			
			aHeader	 := aClone(aHeadBkp)
			aCols	 := aClone(aColsBkp)
		Else
			oGrade:aColsGrade[oGrade:nPosLinO,n,nColuna,oGrade:GetFieldGrdPos("C6_OPC")] := ""
		EndIf
	EndIf
	
	If lRetorno .And. oGrade:cCpo == "C6_PRCVEN"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Aqui ‚ efetuado o tratamento diferencial de ³
		//³ Precos para os Opcionais do Produto.        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lGrdMult .And. At(M->C5_TIPO,"CIP") == 0 .And. !Empty(cOpcMark) .And. aCols[n,nColuna] # &(ReadVar())
			While !Empty(cOpcMark)
				cOpc     := SubStr(cOpcMark,1,At("/",cOpcMark)-1)
				cOpcMark := SubStr(cOpcMark,At("/",cOpcMark)+1)
				If SGA->(dbSeek(xFilial("SGA")+cOpc))
					nAcrePrc += SGA->GA_PRCVEN
				EndIf
			End
			If !Empty(nAcrePrc)
				lRetorno := ProcName(2) == "REPLICAITENS" .Or. Aviso(STR0014,STR0174 +AllTrim(Transform(nAcrePrc,PesqPict("SC6","C6_PRCVEN"))) +".",{"OK",STR0175},2,STR0012) == 1 //Conforme opcionais selecionados para este item, o preço unitário sofrerá acréscimo de ###
				If lRetorno
					&(ReadVar()) += nAcrePrc
				EndIf
			EndIf
		EndIf
	EndIf

	If lRetorno .And. oGrade:cCpo == "C6_BLQ"
		If Empty(oGrade:aColsFieldByName("C6_QTDVEN",,n,nColuna))
			Aviso(STR0014,STR0169,{"Ok"}) // Este item nao teve quantidade informada
			lRetorno := .F.
		EndIf
		  
		If lRetorno
			lRetorno := Empty(xConteudo) .Or. ExistCpo("SX5","F1"+xConteudo)
		EndIf

		If lRetorno
			oGrade:ZeraGrade("C6_QTDLIB",oGrade:nPosLinO)
		EndIf
	EndIf
Else
	lRetorno :=	_a410GValid(nLinAcols,lQtdVen)
EndIf
Return(lRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410QtdGra³ Autor ³ Eduardo Riera         ³ Data ³ 23.02.99 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Efetua a entrada de dados da quantidade quando a grade esta ³±±
±±³          ³ativa.                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Sempre .T.                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410QtdGra()
Local nPProduto:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPQtdVen := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPPrcVen := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN"})
Local nPQtdLib := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDLIB"})
Local nPLocal  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCAL"})
Local nPQtdVen2 := aScan(aHeader,{|x| AllTrim(x[2])=="C6_UNSVEN"})
Local nPBlq    := aScan(aHeader,{|x| AllTrim(x[2])=="C6_BLQ"})
Local nOpcA 	:= 0
Local nCntFor	:= 0
Local nColuna 	:= 0
Local nLinha	:= 0
Local lGrade	:= MaGrade() 
Local cCpoName	:= StrTran(ReadVar(),"M->","")
Local lRet 		:= .T.
Local xCampos	:= {"C6_QTDVEN","C6_PRCVEN"}
Local aTotais	:= {}
Local lGrdMult	:= FindFunction("MATGRADE_V") .And. MATGRADE_V() >= 20110425 .And. "MATA410" $ SuperGetMV("MV_GRDMULT",.F.,"")

If FindFunction("MsMatGrade") .And. IsAtNewGrd()
	If lGrdMult .And. !(FindFunction("MATA410A_V") .And. MATA410A_V() >= 20110131)
		 Final(STR0170) //"Atualizar MATA410A.PRX !!!"
	Endif
	
	If lGrdMult .And. aScan(xCampos,{|x| x == cCpoName}) > 0
		aAdd(aTotais,"C6_VALOR")
		aAdd(aTotais,"C6_VALDESC")
	ElseIf cCpoName # "C6_PRCVEN"
		xCampos := cCpoName
	Else
		lGrade := .F.
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica se a grade esta ativa                       ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( lGrade )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Arrays auxiliares para armazenar a getdados principal³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		oGrade:cProdRef	:= aCols[n][nPProduto]
		oGrade:nPosLinO	:= n   
		If oGrade:Show(xCampos,aTotais) .And. oGrade:lOk
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Atualiza a quantidade do acols original                                 ³  
			//³ATENCAO: a variavel nQtdInformada foi alimentada dentro do objeto com   ³ 
			//³         ReadVar(), mas o programador pode alimentala quando desejar.   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	          
			DO CASE    
				//POSICIONADO NA QUANTIDADE VENDIDA
				CASE "C6_QTDVEN" $ cCpoName    
					A410MultT("C6_QTDVEN",oGrade:nQtdInformada,.F.)
					aCols[n][nPQtdVen]	:= oGrade:nQtdInformada
					M->C6_QTDVEN		:= oGrade:nQtdInformada
					If ( nPQtdVen2 > 0 )
						oGrade:nQtdInformada := 0
						oGrade:nQtdInformada := oGrade:SomaGrade("C6_UNSVEN",oGrade:nPosLinO,oGrade:nQtdInformada)
						A410MultT("C6_UNSVEN",oGrade:nQtdInformada)
						aCols[n][nPQtdVen2] := oGrade:nQtdInformada
						M->C6_UNSVEN        := oGrade:nQtdInformada				
					EndIf   
				//POSICIONADO NO PRECO UNITARIO
				CASE "C6_PRCVEN" $ cCpoName    
					A410MultT("C6_PRCVEN",oGrade:nQtdInformada,.F.)
					aCols[n][nPPrcVen]	:= oGrade:nQtdInformada
					M->C6_PRCVEN		:= oGrade:nQtdInformada
				//POSICIONADO NA SEGUNDA UNIDADE DE MEDIDA DA QUANTIDADE					
				CASE "C6_UNSVEN" $ cCpoName  
					A410MultT("C6_UNSVEN",oGrade:nQtdInformada)
					aCols[n][nPQtdVen2]	:= oGrade:nQtdInformada
					M->C6_UNSVEN		:= oGrade:nQtdInformada
					oGrade:nQtdInformada:= 0
					oGrade:nQtdInformada:= oGrade:SomaGrade("C6_QTDVEN",oGrade:nPosLinO,oGrade:nQtdInformada)
					A410MultT("C6_QTDVEN",oGrade:nQtdInformada,.F.)
					aCols[n][nPQtdVen]	:= oGrade:nQtdInformada
					M->C6_QTDVEN		:= oGrade:nQtdInformada
				//POSICIONADO NA QUANTIDADE LIBERADA
				CASE "C6_QTDLIB" $ cCpoName
					aCols[n][nPQtdLib]	:= oGrade:nQtdInformada
					M->C6_QTDLIB		:= oGrade:nQtdInformada
				//POSICIONADO NO BLOQUEIO
				CASE "C6_BLQ" $ cCpoName
					aCols[n][nPBlq]	 := PadR("N",Len(SC6->C6_BLQ))
					M->C6_BLQ 		 := PadR("N",Len(SC6->C6_BLQ))
			END CASE
		ElseIf MatGrdPrRf(aCols[n,nPProduto])
			nColuna := aScan(aHeader,{|x| AllTrim(x[2]) == cCpoName})
			&(ReadVar()) := aCols[n,nColuna]
		EndIf
	EndIf
Else
	_A410QtdGra()
EndIf	
Return lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma410Rodap³ Autor ³ Eduardo Riera         ³ Data ³12.02.99  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao para preenchimento do Rodape.                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Sempre .T.                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpO1: Objeto da Getdados                                   ³±±
±±³          ³ExpN1: Total do Pedido                                      ³±±
±±³          ³ExpN2: Total do Desconto                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma410Rodap(oGetDad,nTotPed,nTotDes)
Local aSvArea   := GetArea()
Local oDlg
Local nX     	:= 0
Local nY        := 0
Local nMaxFor	:= Len(aCols)
Local nDescCab  := 0
Local nUsado    := Len(aHeader)
Local lTestaDel := nUsado <> Len(aCols[1])
Local nPosTotal := aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALOR"})
Local nPosDesc  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALDESC"})
Local nPPrUnit  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRUNIT"})
Local nPQtdVen  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPPrcVen  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN"})
Local nPProduto := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPostes	  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES"})
Local cCliente	:= Space(30)
Local nLin		:= 0
Local nCol		:= 0
Local nPrcTab   := 0
Local lGrdMult  := FindFunction("MATGRADE_V") .And. MATGRADE_V() >= 20110425 .And. "MATA410" $ SuperGetMV("MV_GRDMULT",.F.,"")
Local lF4VlZero	:= SF4->(FieldPos("F4_VLRZERO")) > 0	

l416Auto := If (Type("l416Auto") == "U",.f.,l416Auto)

If !(l416Auto)
	nTotPed	:= If(nTotPed==Nil,0,nTotPed)
	nTotDes	:= If(nTotDes==Nil,0,nTotDes)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Posiciona o Cliente                                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( M->C5_TIPO $ "DB" )
		dbSelectArea("SA2")
		dbSetOrder(1)
		If ( MsSeek(xFilial("SA2")+M->C5_CLIENTE+M->C5_LOJACLI) )
			cCliente	:= SA2->A2_NOME
		EndIf
	Else
		dbSelectArea("SA1")
		dbSetOrder(1)
		If ( MsSeek(xFilial("SA1")+M->C5_CLIENTE+M->C5_LOJACLI) )
			cCliente	:= SA1->A1_NOME
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Caso nao seja passado o objeto da getdados deve-se pegar a janela default³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( Type("l410Auto") == "U" .or. ! l410Auto)
	If ( oGetDad == Nil )
		oDlg		:= GetWndDefault()
		If ( ValType(oDlg:Cargo)<>"B" )
			oDlg := oDlg:oWnd
		EndIf
	Else
		oDlg := oGetDad:oWnd
	EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Soma as variaveis do Rodape                                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( nTotPed == 0 )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Soma as variaveis do aCols                                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nY := 1 To 2
			For nX := 1 To nMaxFor
				If ( (lTestaDel .And. !aCols[nX][nUsado+1]) .Or. !lTestaDel )
					If ( nPosDesc > 0 .And. nPPrUnit > 0 .And. nPPrcVen > 0 .And. nPQtdVen > 0)
						If lGrdMult .And. FindFunction("MsMatGrade") .And. IsAtNewGrd() .And. MatGrdPrRf(aCols[nX,nPProduto])
							For nLin := 1 To Len(oGrade:aColsGrade[nX])
								For nCol := 2 To Len(oGrade:aHeadGrade[nx])
									If (nPrcTab := oGrade:aColsFieldByName("C6_PRUNIT",nX,nLin,nCol)) > 0
										nTotDes += A410Arred(nPrcTab*oGrade:aColsFieldByName("C6_QTDVEN",nX,nLin,nCol),"C6_VALDESC")-;
												A410Arred(oGrade:aColsFieldByName("C6_PRCVEN",nX,nLin,nCol)*oGrade:aColsFieldByName("C6_QTDVEN",nX,nLin,nCol),"C6_VALDESC")-;
												A410Arred(oGrade:aColsFieldByName("C6_VALDESC",nX,nLin,nCol),"C6_VALDESC")
									EndIf
								Next nCol
							Next nLin
						EndIf
						If ( aCols[nX][nPPrUnit]==0 )
							nTotDes	+= aCols[nX][nPosDesc ]
						Else
							If !(lGrdMult .And. MatGrdPrRf(aCols[nX,nPProduto]))
								If Inclui .Or. (lF4VlZero .And. Posicione("SF4",1,xFilial("SF4")+aCols[nX][nPostes],"F4_VLRZERO") <> "1")	
									nTotDes +=  A410Arred(aCols[nX][nPPrUnit]*aCols[nX][nPQtdVen],"C6_VALDESC")-;
												A410Arred(aCols[nX][nPPrcVen]*aCols[nX][nPQtdVen],"C6_VALDESC")
								EndIf				
							ElseIf ( aCols[nX][nPosDesc ] > 0 )
								nTotDes	+=  aCols[nX][nPosDesc ]
							EndIf
						EndIf
					EndIf
					If ( nPosTotal > 0 )
						nTotPed	+=	aCols[nX][nPosTotal]
					EndIf
				EndIf
			Next nX
			nTotDes  += A410Arred(nTotPed*M->C5_PDESCAB/100,"C6_VALOR")
			nTotPed  -= A410Arred(nTotPed*M->C5_PDESCAB/100,"C6_VALOR")
			nDescCab := M->C5_DESC4
			nTotPed  -= M->C5_DESCONT
			//Quando é alteração o a410linok do mesmo passa por aqui necessitando que atualize o nTotDes
			If Inclui .Or. (Altera .And. (IsIncallStack("A410LinOk") .Or. IsIncallStack("A440Libera")))
				nTotDes  += M->C5_DESCONT
			EndIf	
			If nY == 1
				If FtRegraDesc(3,nTotPed+nTotDes,@M->C5_DESC4) == nDescCab
					Exit
				Else
					nTotPed	:=	0
					nTotDes	:=	0
				EndIf
			EndIf
		Next nY	
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Soma as variaveis da Enchoice                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nTotPed += M->C5_FRETE
	nTotPed += M->C5_SEGURO
	nTotPed += M->C5_DESPESA
	nTotPed += M->C5_FRETAUT
	If cPaisLoc == "PTG"    
		nTotPed += M->C5_DESNTRB
		nTotPed += M->C5_TARA
	Endif

	// Inserido esta linha para arrendondar o total do pedido
	If cPaisLoc=="CHI"
		nTotPed  := A410Arred(nTotPed,"C6_VALOR",M->C5_MOEDA)
		nTotDes  := A410Arred(nTotDes,"C6_VALOR",M->C5_MOEDA)	
	EndIf
	
		If ValType(oDlg) == "O"	
		If ( ValType(oDlg:Cargo)=="B" )
			If ExistBlock("MT410ROD")
				ExecBlock("MT410ROD",.F.,.F.,{oDlg:Cargo,SubStr(cCliente,1,40),nTotPed+nTotDes,nTotDes,nTotPed}) 
			Else
				If ( cPaisLoc=="CHI" .And. (INCLUI .Or. ALTERA) .And. M->C5_MOEDA > 1 )
					Eval(oDlg:Cargo,SubStr(cCliente,1,40),;
									Transform(nTotPed+nTotDes,x3picture("C6_VALOR")),;
									Transform(nTotDes,x3picture("C6_VALOR")),;
									Transform(nTotPed,x3picture("C6_VALOR")))
				Else
					//3 parametro passado para EVAL desta maneira ,pois adicionava ao SAY valor incorreto ( FNC: 00000026096/2010 )			
					Eval(oDlg:Cargo,SubStr(cCliente,1,40),IIF(nTotDes!=0,nTotPed+nTotDes,nTotPed),nTotDes,nTotPed)
				EndIf 
			EndIf
		EndIf
	Endif      
EndIf
RestArea(aSvArea)
Return(.T.)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410Grava ³ Autor ³Eduardo Riera          ³ Data ³17.03.99  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Efetua a Gravacao de um pedido de Vendas                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica se houve gravacao de itens                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpL1: Liberacao Parcial                                    ³±±
±±³          ³ExpL2: Transfere Locais                                     ³±±
±±³          ³ExpN3: Tipo de Operacao a ser executada  ( Opcional )       ³±±
±±³          ³       [1] Inclusao                                         ³±±
±±³          ³       [2] Alteracao                                        ³±±
±±³          ³       [3] Exclusao                                         ³±±
±±³          ³       [4] Inclusao via XML                                 ³±±
±±³          ³ExpA4: aHeader das formas de pagamento ( Opcional )         ³±±
±±³          ³ExpA5: aCols das formas de pagamento   ( Opcional )         ³±±
±±³          ³ExpA6: Registros do SC6                ( Opcional )         ³±±
±±³          ³ExpA7: Registros do SCV                ( Opcional )         ³±±
±±³          ³ExpN8: Tamanho da pilha do semaforo    ( Opcional )         ³±±
±±³          ³ExpN8: Array com relacionamento entre SD4 X SC6( Opcional ) ³±±
±±³          ³ExpA9: Array com Adiantamentos relacionado ao Pedido (Opc)  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³Necessita das variaveis: aHeader,aCols,aHeadGrade,aColsGrade³±±
±±³          ³e INCLUI                                                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±³16/03/2010³ Marcos Justo  ³Incluida a contabilização do pedido on-line ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410Grava(lLiber,lTransf,nOpcao,aHeadFor,aColsFor,aRegSC6,aRegSCV,nStack,aEmpBn,aRecnoSE1,aHeadAGG,aColsAGG)
Local aArea     := GetArea("SC5")
Local aRegLib   := {}
Local bCampo 	:= {|nCPO| Field(nCPO) }
Local lTravou   := .F.
Local lTravou2  := .F.
Local lLiberou  := .F.
Local lLiberOk	:= .T.
Local lResidOk	:= .T.
Local lFaturOk	:= .F.
Local lGravou	:= .F.
Local lContinua := .F.
Local lQuery    := .F.
Local lXml      := .F.
Local lMta410I  := ExistBlock("MTA410I")
Local lMta410E  := ExistBlock("MTA410E")
Local cPedido   := ""
Local cMay      := ""
Local cArqQry   := "SC6"
Local cProdRef	:= ""
//---------- Variavel existente somente para manter legado ate R4
Local cMascara	:= SuperGetMv("MV_MASCGRD")
//------------------------------------------------------------------
Local nTamRef	:= If(FindFunction("MsMatGrade") .And. IsAtNewGrd(),0,Val(Substr(cMascara,1,2)))
Local nMaxFor	:= Len(aCols)
Local nMaxFor2	:= 0
Local nPItem    := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_ITEM"})
Local nPProduto := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_PRODUTO"})
Local nTpProd   := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_TPPROD"})
Local nVlrCred  := 0
Local nX        := 0
Local nY        := 0
Local nZ        := 0
Local nW        := 0
Local xZ			 := 0
Local nDeleted  := Len(aHeader)+1
Local nDeleted2 := 0
Local nMoedaOri := 1
Local nCntForma := 0
Local nCount    := 0
Local aSaldoSDC := {}
Local aRegStatus:= {}

Local lCtbOnLine := .F.
Local lDigita := .F.
Local lAglutina	 := .F.
Local aCtbDia	 := {} 
Local bCtbOnLine := {|| .T.}
Local cArqCtb    := ""
Local nTotalCtb  := 0
Local c612       := ""
Local c621       := ""
Local c632       := ""
Local c636       := ""
Local aCt5       := {}
Local nHdlPrv    := 0
Local aAreaSX1   := {}
Local lMata410	 := IIF(FUNNAME()=="MATA410",.T.,.F.)

Local lAtuSGJ	 := SuperGetMV("MV_PVCOMOP",.F.,.F.) .And. FindFunction("ALIASINDIC") .And. AliasIndic("SGJ")
Local nUsadoAGG  := 0
LOCAL cCondPOld  := ""
Local nTpCtlBN   := A410CtEmpBN()
Local aAreaAtu   := {}

Local cIntRot := ""

#IFDEF TOP
	Local cQuery    := ""
#ENDIF
//-- Gravacao de campos Memo por SYP no SC6
Local nI         := 0
Local cCpoSC6    := ''

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Integracao SIGAFAT e SIGADPR                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local aItemDPR	:= {}
Local lIFatDpr	:= SuperGetMV("MV_IFATDPR",.F.,.F.)
Local lBkpINCLUI	:= INCLUI
Private nValItPed	:= 0
PRIVATE cCondPAdt	:= "0" //Controle p/ cond. pgto. com aceite de Adt. 0=normal 1=Adt

DEFAULT nOpcao     := 0
DEFAULT aHeadFor   := {}
DEFAULT aColsFor   := {}
DEFAULT aRegSC6    := {}
DEFAULT aRegSCV    := {}
DEFAULT nStack     := 0
DEFAULT aEmpBn	   := {}
DEFAULT aRecnoSE1  := {}
DEFAULT aHeadAGG   := {}
DEFAULT aColsAGG   := {}


//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ avalia e mostra motivo de bloqueio por regra/verba (se houver)         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
A410BlqReg()

If Type( "nAutoAdt" ) == "N" .AND. nAutoAdt == 4
	cCondPOld := SC5->C5_CONDPAG
EndIf

nMaxFor2  := Len(aColsFor)
nDeleted2 := Len(aHeadFor)+1

aRegStatus := Array( Len( aRegSC6 ) )
AFill( aRegStatus, .T. )

// Não contabiliza a alteração - !ALTERA
If nOpcao <> 3
	aAreaSX1 := SX1->(GetArea())
	SaveInter()
	Pergunte("MTA410",.F.)
	//Carrega as variaveis com os parametros da execauto
	Ma410PerAut()
	lCtbOnLine := lMata410 .And. MV_PAR05==1 .And. !ALTERA .And. !Empty( SC5->( FieldPos( "C5_DTLANC" ) ) )
	lAglutina  := MV_PAR06==1
	lDigita := MV_PAR07==1
	RestInter()
	RestArea(aAreaSX1)
Else
	aAreaSX1 := SX1->(GetArea())
	SaveInter()
	Pergunte("MTA410",.F.)
	//Carrega as variaveis com os parametros da execauto
	Ma410PerAut()
	
	lCtbOnLine := lMata410 .And. !ALTERA .And. !Empty( SC5->( FieldPos( "C5_DTLANC" ) ) )
	lAglutina  	:= MV_PAR06==1
	lDigita 	:= MV_PAR07==1
	RestInter()
	RestArea(aAreaSX1)
Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada antes de iniciar a manutencao do pedido               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ExistBlock("M410AGRV")
	ExecBlock("M410AGRV",.f.,.f.,{ nOpcao })
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para pegar os registros de SDC para reconstruir as    ³
//³ as liberações na alteração dos Itens do Pedidos.                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( (ExistBlock("M410PSDC") ) )
	aSaldoSDC := ExecBlock("M410PSDC",.f.,.f.)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se Grade estiver ativa, grava Acols conf.AcolsGrade  para depois       ³
//³ continuar a gravar como um pedido comum.                               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( MaGrade().And. If(FindFunction("MsMatGrade") .And. IsAtNewGrd(),Type("oGrade")=="O",Type('aHeadGrade')<>'U') )
	Ma410GraGr()
	nMaxFor	:= Len(aCols)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se ha itens a serem gravados                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nX := 1 To nMaxFor
	If nOpcao == 3
		aCols[nX][nDeleted] := .T.
	EndIf
	If !aCols[nX][nDeleted]
		lGravou   := .T.
		lContinua := .T.
		Exit
	EndIf
Next nX

If !lGravou .And. !INCLUI
	nOpcao := 3
	lContinua := .T.
EndIf

If nOpcao == 3
	For nX := 1 To nMaxFor2
		aColsFor[nX][nDeleted2] := .T.
	Next nX
	lGravou := .T. 
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se a gravacao via JOB XML esta ativa                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lContinua .And. nOpcao == 1 .And. GetNewPar("MV_MSPVXML",.F.)
	lXml := Ma410GrXml()
EndIf
If nOpcao == 4
	nOpcao :=1
EndIf

nMoedaOri := M->C5_MOEDA

//Montagem dos dados da execauto de rateio
If Type( "nAutoAdt" ) == "N" .AND. nAutoAdt > 0 .And. Len(aRatCTBPC) > 0
	aHeadAGG:={}
	aColsAGG:={}
	DbSelectArea("SX3")
	dbSetOrder(1)
	MsSeek("AGG")
	While !EOF() .And. (SX3->X3_ARQUIVO == "AGG")
		IF X3USO(SX3->X3_USADO) .AND. cNivel >= SX3->X3_NIVEL .And. !"AGG_CUSTO"$AllTrim(SX3->X3_CAMPO)
			AADD(aHeadAGG,{ TRIM(x3Titulo()),;
			SX3->X3_CAMPO,;
			SX3->X3_PICTURE,;
			SX3->X3_TAMANHO,;
			SX3->X3_DECIMAL,;
			SX3->X3_VALID,;
			SX3->X3_USADO,;
			SX3->X3_TIPO,;
			SX3->X3_F3,;
			SX3->X3_CONTEXT } )
		EndIf
		dbSelectArea("SX3")
		dbSkip()
	EndDo
	aColsAGG := M410AutRat(aRatCTBPC, aHeadAGG)
Endif
nUsadoAGG := Len(aHeadAGG)

//Caso Alteração Automatica deleta os rateios
If Type( "nAutoAdt" ) == "N" .AND. nAutoAdt==4 .And. Len(aRatCTBPC) > 0
	aAreaAGG := GetArea()
	AGG->(DbSetOrder(1)) //CH_FILIAL+CH_PEDIDO+CH_FORNECE+CH_LOJA+CH_ITEMPD+CH_ITEM
	If AGG->(MsSeek(xFilial("AGG")+SC5->C5_NUM+SC5->C5_CLIENTE+SC5->C5_LOJACLI)) .and. nX==1
		While !AGG->(EOF()).and. (SC5->C5_FILIAL+SC5->C5_NUM+SC5->C5_CLIENTE+SC5->C5_LOJACLI==;
			AGG->AGG_FILIAL+AGG->AGG_PEDIDO+AGG->AGG_FORNECE+AGG->AGG_LOJA)
			RecLock("AGG",.F.)
			AGG->(dbDelete())
			MsUnlock()
			AGG->(DbSkip())
		Enddo
	EndIf
	RestArea(aAreaAGG)
Endif

If !lXml
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica a Numeracao do pedido de venda                                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SC5")
	cPedido := M->C5_NUM
	If ( INCLUI )
		cMay := "SC5"+ Alltrim(xFilial("SC5"))
		SC5->(dbSetOrder(1))
		While ( DbSeek(xFilial("SC5")+cPedido) .or. !MayIUseCode(cMay+cPedido) )
			cPedido := Soma1(cPedido,Len(M->C5_NUM))
		EndDo
	EndIf
	M->C5_NUM := cPedido
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Guarda o numero do registro do itens que serao alterados                ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Empty(aRegSC6) .And. !INCLUI
		dbSelectArea("SC6")
		dbSetOrder(1)
		#IFDEF TOP
		If TcSrvType()<>"AS/400"
			cArqQry := "A410GRAVA"
			lQuery  := .T.
			cQuery := "SELECT SC6.R_E_C_N_O_ SC6RECNO "
			cQuery += "FROM "+RetSqlName("SC6")+" SC6 "
			cQuery += "WHERE SC6.C6_FILIAL='"+xFilial("SC6")+"' AND "
			cQuery += "SC6.C6_NUM='"+M->C5_NUM+"' AND "
			cQuery += "SC6.D_E_L_E_T_=' ' "
			
			cQuery := ChangeQuery(cQuery)
			
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cArqQry,.T.,.T.)
		Else
		#ENDIF
		MsSeek(xFilial("SC6")+M->C5_NUM)
		#IFDEF TOP
		EndIf
		#ENDIF
		While ( !Eof() .And. xFilial("SC6")==(cArqQry)->C6_FILIAL .And.(cArqQry)->C6_NUM==M->C5_NUM )
			
			aadd(aRegSC6,If(lQuery,(cArqQry)->SC6RECNO,(cArqQry)->(Recno())))
			
			dbSelectArea(cArqQry)
			dbSkip()
			
		EndDo
		If lQuery
			dbSelectArea(cArqQry)
			dbCloseArea()
			dbSelectArea("SC6")
		EndIf
	EndIf
	If Empty(aRegSCV) .And. !INCLUI
		dbSelectArea("SCV")
		dbSetOrder(1)
		#IFDEF TOP
		If TcSrvType()<>"AS/400"
			cArqQry := "A410GRAVA"
			lQuery  := .T.
			cQuery := "SELECT SCV.R_E_C_N_O_ SCVRECNO,SCV.CV_FILIAL,SCV.CV_PEDIDO "
			cQuery += "FROM "+RetSqlName("SCV")+" SCV "
			cQuery += "WHERE SCV.CV_FILIAL='"+xFilial("SCV")+"' AND "
			cQuery += "SCV.CV_PEDIDO='"+M->C5_NUM+"' AND "
			cQuery += "SCV.D_E_L_E_T_=' ' "
			
			cQuery := ChangeQuery(cQuery)
			
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cArqQry,.T.,.T.)
		Else
		#ENDIF
		MsSeek(xFilial("SCV")+M->C5_NUM)
		#IFDEF TOP
		EndIf
		#ENDIF
		While ( !Eof() .And. xFilial("SCV")==(cArqQry)->CV_FILIAL .And.(cArqQry)->CV_PEDIDO=M->C5_NUM )
			
			aadd(aRegSCV,If(lQuery,(cArqQry)->(Recno()),(cArqQry)->SCVRECNO))
			
			dbSelectArea(cArqQry)
			dbSkip()
			
		EndDo
		If lQuery
			dbSelectArea(cArqQry)
			dbCloseArea()
			dbSelectArea("SCV")
		EndIf
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Atualiza os dados do pedido do venda                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lContinua
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Prepara a contabilizacao On-Line do Pedido              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lCtbOnLine
			DbSelectArea("SX5")
			DbSetOrder(1)
			If MsSeek(xFilial()+"09FAT")          // Verifica o numero do lote contabil
				cLoteCtb := AllTrim(X5Descri())
			Else
				cLoteCtb := "FAT "
			EndIf
			
			If At(UPPER("EXEC"),X5Descri()) > 0   // Executa um execblock
				cLoteCtb := &(X5Descri())
			EndIf
			
			nHdlPrv:=HeadProva(cLoteCtb,"MATA410",Subs(cUsuario,7,6),@cArqCtb) // Inicializa o arquivo de contabilizacao
			If nHdlPrv <= 0
				HELP(" ",1,"SEM_LANC")
				lCtbOnLine := .F.
			EndIf
		EndIf

		For nX := 1 To nMaxFor
			
			Begin Transaction
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ M_SER004_CRM019_Integraçao_Faturamento_DPR                           ³
			//³ Verifica se o item eh do tipo "Desenvolvimento" e grava num Array    ³
			//³	para incluir ou alterar uma pendencia de desenvolvimento.			   ³
			//³ Autor: Alexandre Felicio													   ³
			//³ Data: 06/05/2014															   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( Type("lExAutoDPR") == "L" .And. !lExAutoDPR .Or. IsInCallStack("MaBxOrc") )  .And. ( lIFatDpr ) .And. ( SC6->(FieldPos("C6_TPPROD")) > 0 )  .And. ( AliasInDic("DGC") ) .And. ( AliasInDic("DGP") )
				
				If ( ( nOpcao == 3 ) .AND. aCols[nX][nTpProd] == "2" .AND. !IsInCallStack("MaBxOrc")  )
					If !l410Auto
						lContinua := MsgYesNo(STR0232)	 
					EndIf
					
					If lContinua
						aItemDPR := {5, xFilial("SC6"), M->C5_NUM, aCols[nX][nPItem], aCols[nX][nPPRoduto]}
					EndIf
				ElseIf ( nOpcao <> 3 .AND. !aCols[nX][nDeleted] ) 
					
					// se efetivação do orçamento o aItemDPR recebe tanto os dados do orçamento como do PD que está sendo gerado
					If ( IsInCallStack("MaBxOrc") .And. aCols[nX][nTpProd] == "2" )
						aItemDPR := {7, xFilial("SC6"), SCK->CK_NUM, SCK->CK_ITEM, SCK->CK_PRODUTO, M->C5_NUM, aCols[nX][nPItem], aCols[nX][nPPRoduto]}
						// indica que eh um novo item do PV - insere dependencia de desenvolvimento
					ElseIf (Len(aRegSC6) < nX) .And. (aCols[nX][nTpProd] == "2")
						aItemDPR := {3, xFilial("SC6"), M->C5_NUM, aCols[nX][nPItem], aCols[nX][nPPRoduto], ""}
						// indica que nao eh um novo item, entao verifica se houve alteracao do codigo do produto ou tipo do produto
					Else
						If (Type("aColsHist") == "A") .And. (nX <= LEN(aColsHist))
							If (aColsHist[nX][nPProduto] <> aCols[nX][nPProduto])
								aItemDPR := {4, xFilial("SC6"), M->C5_NUM, aCols[nX][nPItem], aCols[nX][nPPRoduto], aColsHist[nX][nPPRoduto]}
							ElseIf ( (aColsHist[nX][nTpProd] == "1") .And. (aCols[nX][nTpProd] == "2") )
								aItemDPR := {3, xFilial("SC6"), M->C5_NUM, aCols[nX][nPItem], aCols[nX][nPPRoduto], ""}
							ElseIf ( (aColsHist[nX][nTpProd] == "2") .And. (aCols[nX][nTpProd] == "1") )
								aItemDPR := {5, xFilial("SC6"), M->C5_NUM, aCols[nX][nPItem], aCols[nX][nPPRoduto], ""}
							EndIf
						EndIf
					EndIf
				EndIf
			
				If Len(aItemDPR) > 0 .AND. lContinua
					lGravou := A410GrvDPR(aItemDPR)
					aItemDPR := {}
				EndIf	
			
			EndIf
		
			If lGravou
			
				INCLUI := lBkpINCLUI
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Se for o primeiro item e nao for exclusao, grava o cabecalho           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If nX == 1 .And. nOpcao <> 3
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Estorna  o cabecalho do pedido de venda                                ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If !INCLUI
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Armazena a moeda original do pedido de venda                           ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						nMoedaOri := SC5->C5_MOEDA
						MaAvalSC5("SC5",2,Nil,Nil,Nil,Nil,Nil,Nil,Nil,Nil,Nil,Nil,Nil,@nVlrCred)
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualiza o cabecalho do pedido de venda                                ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lGravou
						RecLock("SC5",INCLUI)
						For nY := 1 TO FCount()
							If ("FILIAL" $ FieldName(nY) )
								FieldPut(nY,xFilial("SC5"))
							ElseIf (("TABELA" $ FieldName(nY)) .And. (M->&(EVAL(bCampo,nY)) == PadR("1",Len(DA0->DA0_CODTAB))))
								FieldPut(nY,"")
							Else
								FieldPut(nY,M->&(EVAL(bCampo,nY)))
							EndIf
						Next nY
						SC5->C5_BLQ := ""
						
						//
						// Template GEM - Gestao de Empreendimentos Imobiliarios
						// Gravacao dos solidarios do cliente do pedido de venda
						//
						If ExistTemplate("GEMXGRSOL",,.T.)
							ExecTemplate("GEMXGRSOL",.F.,.F.,{nOpcao ,M->C5_NUM})
						EndIf
						
						//
						// Template GEM - Gestao de Empreendimentos Imobiliarios
						// Gravacao da condicao de venda "personalizada"
						//
						If ExistBlock("GEMXGRCVND",,.T.)
							ExecBlock("GEMXGRCVND",.F.,.F.,{nOpcao ,M->C5_NUM ,M->C5_CONDPAG})
						ElseIf ExistTemplate("GEMXGRCVND",,.T.)
							ExecTemplate("GEMXGRCVND",.F.,.F.,{nOpcao ,M->C5_NUM ,M->C5_CONDPAG})
						EndIf
						
						// Contabiliza cabeçalho - Lançamento Padrão 621
						If lCtbOnLine
							nTotalCtb+=DetProva(nHdlPrv,"621","MATA410",cLoteCtb)
						EndIf
						
					EndIf
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Atualiza as formas de pagamento                                        ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If Len(aColsFor) >= 1 .And. !Empty(aColsFor[1][1])
						SC5->(FkCommit())
						For nY := 1 To nMaxFor2
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Verifica se sera alteracao ou inclusao                                  ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If ( Len(aRegSCV) >= nY )
								dbSelectArea("SCV")
								MsGoto(aRegSCV[nY])
								RecLock("SCV",.F.)
								lTravou2 := .T.
							Else
								If ( !aColsFor[nY][nDeleted2] )
									RecLock("SCV",.T.)
									lTravou2 := .T.
								Else
									lTravou2 := .F.
								EndIf
							EndIf
							If aColsFor[nY][nDeleted2]
								If lTravou2
									SCV->(dbDelete())
								EndIf
							Else
								For nZ := 1 To Len(aHeadFor)
									If aHeadFor[nZ][10] <> "V"
										SCV->(FieldPut(FieldPos(aHeadFor[nZ][2]),aColsFor[nY][nZ]))
									EndIf
								Next nZ
								SCV->CV_FILIAL := xFilial("SCV")
								SCV->CV_PEDIDO := M->C5_NUM
								SCV->(MsUnLock())
							EndIf
						Next nY
					EndIf
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Grava o relacionamento com Adiantamentos³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If cPaisLoc $ "ANG|BRA" .and. AliasInDic("FIE") .and. Type( "nAutoAdt" ) == "N" .AND. (nAutoAdt==3 .OR. nAutoAdt==4) //.OR. nAutoAdt==5
						If A410UsaAdi( SC5->C5_CONDPAG )
							IF Len(aAdtPC)>0
								If nAutoAdt==3
									If a410AdtSld(SC5->C5_NUM,aAdtPC,nAutoAdt)>0
										FPedAdtGrv("R", 2, SC5->C5_NUM, aRecnoSE1,,,,aAdtPC,nAutoAdt)
										FPedAdtGrv("R", 1, SC5->C5_NUM, aRecnoSE1,,,,aAdtPC,nAutoAdt)
									Endif
								Else
									If lCkAdtFR3(SC5->C5_NUM,nAutoAdt)==0
										If a410AdtSld(SC5->C5_NUM,aAdtPC,nAutoAdt,0)>0 //Verifica saldo sem apresentar HELP
											FPedAdtGrv("R", 2, SC5->C5_NUM, aRecnoSE1,,,,aAdtPC,nAutoAdt)
											FPedAdtGrv("R", 1, SC5->C5_NUM, aRecnoSE1,,,,aAdtPC,nAutoAdt)
										Else
											If a410AdtSld(SC5->C5_NUM,aAdtPC,nAutoAdt,2)>0 //Verifica se ao excluir ADT haverá saldo para nova inclusao
												FPedAdtGrv("R", 2, SC5->C5_NUM, aRecnoSE1,,,,aAdtPC,nAutoAdt)
												If a410AdtSld(SC5->C5_NUM,aAdtPC,nAutoAdt)>0
													FPedAdtGrv("R", 1, SC5->C5_NUM, aRecnoSE1,,,,aAdtPC,nAutoAdt)
												Endif
											Endif
										Endif
									Else
										Help(" ",1,"A410ADTEMUSO") //"Pedido possui compensação por RA, não pode ser alterado ou excluido!"
									Endif
								Endif
							Else
								If nAutoAdt==4
									If lCkAdtFR3(SC5->C5_NUM,nAutoAdt)==0
										aRecnoSE1 := FPedAdtPed("R",{SC5->C5_NUM}, .F.,0)
										If Len(aRecnoSE1)<>0
											FPedAdtGrv("P", 2, SC5->C5_NUM, aRecnoSE1)
										Endif
									Else
										Help(" ",1,"A410ADTEMUSO") //"Pedido possui compensação por RA, não pode ser alterado ou excluido!"
									Endif
								Endif
							Endif
						Else
							If nAutoAdt==4
								If lCkAdtFR3(SC5->C5_NUM,nAutoAdt)==0
									If A410UsaAdi( cCondPOld )
										FPedAdtGrv("R", 2, SC5->C5_NUM, aRecnoSE1,,,,aAdtPC,nAutoAdt)
									Endif
								Else
									Help(" ",1,"A410ADTEMUSO") //"Pedido possui compensação por RA, não pode ser alterado ou excluido!"
								Endif
							Endif
						Endif
					Else
						If cPaisLoc $ "ANG|BRA|MEX|PER" .and. AliasInDic("FIE") //jgr
							If A410UsaAdi( SC5->C5_CONDPAG ) .AND. ((cPaisLoc $ "MEX|PER" .AND. !A410NatAdi(SC5->C5_NATUREZ)) .OR. (cPaisLoc <> "MEX" .AND. cPaisLoc <> "PER") )
								FPedAdtGrv( "R", 1, SC5->C5_NUM, aRecnoSE1 )
							EndIf
						Endif
					EndIf
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza os itens do pedido de venda                                   ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Verifica se sera alteracao ou inclusao de um item do PV                 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ( Len(aRegSC6) >= nX )
					dbSelectArea("SC6")
					
					If aRegStatus[ nX ]
						MsGoto(aRegSC6[nX])
					Endif
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Verifica se o item (acols) corresponde ao item gravado.Quando utiliza-se³
					//³grade de produtos os itens podem ser adicionados no em qualquer ordem   ³
					//³prejudicando a atualizacao dos campos Qtd.Entregue e Empenhada          ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Na situacao da troca de um produto que pertence a grade, os registros   ³
					//³posteriores nao podem ser reaproveitados, tendo que ser excluidos e in  ³
					//³seridos novamente                                                       ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If FindFunction("MsMatGrade") .And. IsAtNewGrd()
						If ( aCols[nX][nPItem] == SC6->C6_ITEM .And. SC6->C6_GRADE=="S" .And. aRegStatus[nX])
							cProdRef := aCols[nX][nPProduto]
							MatGrdPrRf(@cProdRef,.T.)
							nTamRef	:= Len(cProdRef)
							If SubStr(aCols[nX][nPProduto],1,nTamRef) <> SubStr(SC6->C6_PRODUTO,1,nTamRef)
								AFill( aRegStatus, .F., nX )
								
								For nCount := nX to Len( aRegSC6 )
									
									SC6->(MsGoto(aRegSC6[nCount]))
									
									//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
									//³Efetua o estorno dos itens do pedido de venda                           ³
									//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
									RecLock("SC6")
									MaAvalSC6("SC6",2,"SC5",lLiber,lTransf,@lLiberOk,@lResidOk,@lFaturOk,Nil,@nVlrCred,Nil,Nil,nMoedaOri)
									If !GetMv("MV_AVALCRD")
										nVlrCred := 0
									EndIf
									lTravou := .T.
									
									//-- Libera empenhos vinculados ao item do pedido
									If nTpCtlBN == 1 // metodo antigo - unico envio: gravacao na SD4
										dbSelectArea("SD4")
										dbSetOrder(6)
										If dbSeek(xFilial("SD4")+SC6->(C6_NUM+C6_ITEM))
											RecLock("SD4",.F.)
											Replace D4_NUMPVBN With CriaVar("D4_NUMPVBN",.F.)
											Replace D4_ITEPVBN With CriaVar("D4_ITEPVBN",.F.)
											MsUnLock()
										EndIf
										dbSelectArea("SDC")
										dbSetOrder(1)
										If dbSeek(xFilial("SDC")+SC6->(C6_PRODUTO+C6_LOCAL)+"SC2"+SC6->(C6_NUM+C6_ITEM))
											RecLock("SDC",.F.)
											Replace DC_PEDIDO With CriaVar("DC_PEDIDO",.F.)
											Replace DC_ITEM	With CriaVar("DC_ITEM",.F.)
											MsUnLock()
										EndIf
									ElseIf nTpCtlBN == 2 // metodo novo - multiplos envios: gravacao na SGO
										dbSelectArea("SGO")
										dbSetOrder(2) // GO_FILIAL+GO_NUMPV+GO_ITEMPV+GO_OP+GO_COD+GO_LOCAL
										dbSeek(xFilial("SGO")+SC6->C6_NUM+SC6->C6_ITEM)
										If ( GO_FILIAL+GO_NUMPV+GO_ITEMPV == SC6->C6_FILIAL+SC6->C6_NUM+SC6->C6_ITEM )
											RecLock("SGO", .F.)
											dbDelete()
											MsUnLock()
										EndIf
										dbSelectArea("SDC")
										dbSetOrder(1)
										If dbSeek(xFilial("SDC")+SC6->(C6_PRODUTO+C6_LOCAL)+"SC2"+SC6->(C6_NUM+C6_ITEM))
											RecLock("SDC",.F.)
											Replace DC_PEDIDO With CriaVar("DC_PEDIDO",.F.)
											Replace DC_ITEM	With CriaVar("DC_ITEM",.F.)
											MsUnLock()
										EndIf
									EndIf
									SC6->( dbDelete() )
									aRegStatus[ nCount ] := .F.
								Next nCount
							EndIf
						Endif
					Else
						If ( aCols[nX][nPItem] == SC6->C6_ITEM .And. SubStr(aCols[nX][nPProduto],1,nTamRef) <> SubStr(SC6->C6_PRODUTO,1,nTamRef) .And.;
							SC6->C6_GRADE=="S"  .And. aRegStatus[ nX ] )
							AFill( aRegStatus, .F., nX )
							
							For nCount := nX to Len( aRegSC6 )
								
								SC6->(MsGoto(aRegSC6[nCount]))
								
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³Efetua o estorno dos itens do pedido de venda                           ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								RecLock("SC6")
								MaAvalSC6("SC6",2,"SC5",lLiber,lTransf,@lLiberOk,@lResidOk,@lFaturOk,Nil,@nVlrCred,Nil,Nil,nMoedaOri)
								
								If !GetMv("MV_AVALCRD")
									nVlrCred := 0
								EndIf
								lTravou := .T.
								
								//-- Libera empenhos vinculados ao item do pedido
								If nTpCtlBN == 1 // metodo antigo - unico envio: gravacao na SD4
									dbSelectArea("SD4")
									dbSetOrder(6)
									If dbSeek(xFilial("SD4")+SC6->(C6_NUM+C6_ITEM))
										RecLock("SD4",.F.)
										Replace D4_NUMPVBN With CriaVar("D4_NUMPVBN",.F.)
										Replace D4_ITEPVBN With CriaVar("D4_ITEPVBN",.F.)
										MsUnLock()
									EndIf
									dbSelectArea("SDC")
									dbSetOrder(1)
									If dbSeek(xFilial("SDC")+SC6->(C6_PRODUTO+C6_LOCAL)+"SC2"+SC6->(C6_NUM+C6_ITEM))
										RecLock("SDC",.F.)
										Replace DC_PEDIDO With CriaVar("DC_PEDIDO",.F.)
										Replace DC_ITEM	With CriaVar("DC_ITEM",.F.)
										MsUnLock()
									EndIf
								ElseIf nTpCtlBN == 2 // metodo novo - multiplos envios: gravacao na SGO
									dbSelectArea("SGO")
									dbSetOrder(2) // GO_FILIAL+GO_NUMPV+GO_ITEMPV+GO_OP+GO_COD+GO_LOCAL
									dbSeek(xFilial("SGO")+SC6->C6_NUM+SC6->C6_ITEM)
									If ( GO_FILIAL+GO_NUMPV+GO_ITEMPV == SC6->C6_FILIAL+SC6->C6_NUM+SC6->C6_ITEM )
										RecLock("SGO", .F.)
										dbDelete()
										MsUnLock()
									EndIf
									dbSelectArea("SDC")
									dbSetOrder(1)
									If dbSeek(xFilial("SDC")+SC6->(C6_PRODUTO+C6_LOCAL)+"SC2"+SC6->(C6_NUM+C6_ITEM))
										RecLock("SDC",.F.)
										Replace DC_PEDIDO With CriaVar("DC_PEDIDO",.F.)
										Replace DC_ITEM	With CriaVar("DC_ITEM",.F.)
										MsUnLock()
									EndIf
								EndIf
								SC6->( dbDelete() )
								aRegStatus[ nCount ] := .F.
							Next nCount
						Endif
						
					EndIf
					
					If aRegStatus[ nX ]
						If SC6->C6_GRADE=="S" .And. ( FindFunction("MsMatGrade") .And. IsAtNewGrd() )
							cProdRef := aCols[nX][nPProduto]
							MatGrdPrRf(@cProdRef,.T.)
							nTamRef	:= Len(cProdRef)
						EndIf
						
						If ( aCols[nX][nPItem] <> SC6->C6_ITEM .Or. (aCols[nX][nPProduto] <> SC6->C6_PRODUTO .And. SubStr(aCols[nX][nPProduto],1,nTamRef) == SubStr(SC6->C6_PRODUTO,1,nTamRef)) .And.;
							SC6->C6_GRADE=="S" )
							If ( !aCols[nX][nDeleted] )
								RecLock("SC6",.T.)
								lTravou := .T.
							Else
								lTravou := .F.
							EndIf
							
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Move os Recnos do SC6 para posterior atualizacao                        ³
							
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							aadd(aRegSC6,0)
							aadd(aRegStatus,.T.)
							For nZ := Len(aRegSC6) To nX+1 STEP -1
								aRegSC6[nZ] := aRegSC6[nZ-1]
							Next nZ
						Else
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Efetua o estorno dos itens do pedido de venda                           ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							RecLock("SC6")
							MaAvalSC6("SC6",2,"SC5",lLiber,lTransf,@lLiberOk,@lResidOk,@lFaturOk,Nil,@nVlrCred,Nil,Nil,nMoedaOri)
							
							If !GetMv("MV_AVALCRD")
								nVlrCred := 0
							EndIf
							lTravou := .T.
						EndIf
					Else
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Caso o produto tenha sido trocado sera estornado o registro e incluido  ³
						//³novamente. Somsnte quando a troca for por produto de grade              ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						
						RecLock( "SC6", .T. )
						
						
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Atualiza os itens do pedido de venda                                    ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						For nY := 1 to Len(aHeader)
							If aHeader[nY][10] <> "V"
								SC6->(FieldPut(FieldPos(aHeader[nY][2]),aCols[nX][nY]))
							EndIf
						Next nY
						If SC6->C6_QTDLIB > 0 .Or. IIf(SC5->(FieldPos("C5_TPCOMPL")) > 0,;
							(SC5->C5_TIPO $ "IP" .Or. (SC5->C5_TIPO $ "C" .And. SC5->C5_TPCOMPL == "1")),;
							SC5->C5_TIPO $ "CIP")
							lLiberou := .T.
						EndIf
						MaAvalSC6("SC6",1,"SC5",lLiber,lTransf,@lLiberOk,@lResidOk,@lFaturOk,Nil,@nVlrCred)
						
						//Grava relacionamento entre SC6 e SD4,SDC
						If !Empty(aEmpBn)
							
							nY := aScan(aEmpBn, {|x| x[3] == SC6->C6_ITEM})
							While !Empty (nY) .AND. nY <= Len(aEmpBn) .And. aEmpBn[nY,3] == SC6->C6_ITEM
								(aEmpBn[nY,1])->(dbGoTo(aEmpBn[nY,2]))
								If nTpCtlBN == 1 // metodo antigo - unico envio: gravacao na SD4
									RecLock(aEmpBn[nY,1],.F.)
									If aEmpBn[nY,1] == "SD4"
										Replace D4_NUMPVBN With SC6->C6_NUM
										Replace D4_ITEPVBN With SC6->C6_ITEM
									Else
										Replace DC_PEDIDO With SC6->C6_NUM
										Replace DC_ITEM   With SC6->C6_ITEM
									EndIf
									MsUnLock()
								ElseIf nTpCtlBN == 2 // metodo novo - multiplos envios: gravacao na SGO
									If aEmpBn[nY,1] == "SDC"
										RecLock("SDC",.F.)
										Replace DC_PEDIDO With SC6->C6_NUM
										Replace DC_ITEM   With SC6->C6_ITEM
									ElseIf aEmpBn[nY,1] == "SD4"
										SGO->(dbSetOrder(2)) // GO_FILIAL+GO_NUMPV+GO_ITEMPV+GO_OP+GO_COD+GO_LOCAL
										If !(SGO->(dbSeek(xFilial("SGO")+SC6->C6_NUM+SC6->C6_ITEM+SD4->D4_OP+SD4->D4_COD+SD4->D4_LOCAL)))
											RecLock("SGO",.T.)
											Replace GO_FILIAL  With xFilial("SGO")
											Replace GO_OP      With SD4->D4_OP
											Replace GO_COD     With SD4->D4_COD
											Replace GO_LOCAL   With SD4->D4_LOCAL
											Replace GO_NUMPV   With SC6->C6_NUM
											Replace GO_ITEMPV  With SC6->C6_ITEM
											Replace GO_TRT     With SD4->D4_TRT
											Replace GO_RECNOD4 With SD4->(Recno())
										Else
											RecLock("SGO", .F.)
										EndIf
										Replace GO_QUANT   With SC6->C6_QTDVEN
										Replace GO_QTSEGUM With ConvUM(SD4->D4_COD, SC6->C6_QTDVEN, 0, 2)
									EndIf
									MsUnLock()
								EndIf
								nY++
							End
						EndIf
					Endif
				Else
					If ( !aCols[nX][nDeleted] )
						RecLock("SC6",.T.)
						lTravou := .T.
					Else
						lTravou := .F.
					EndIf
				EndIf
				
				If aCols[nX][nDeleted]
					
					If (lTravou)
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Grava os lancamentos nas contas orcamentarias SIGAPCO    ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						PcoDetLan("000100","02","MATA410")
						
						//-- Libera empenhos vinculados ao item do pedido
						If nTpCtlBN == 1 // metodo antigo - unico envio: gravacao na SD4
							dbSelectArea("SD4")
							dbSetOrder(6)
							If dbSeek(xFilial("SD4")+SC6->(C6_NUM+C6_ITEM))
								RecLock("SD4",.F.)
								Replace D4_NUMPVBN With CriaVar("D4_NUMPVBN",.F.)
								Replace D4_ITEPVBN With CriaVar("D4_ITEPVBN",.F.)
								MsUnLock()
								
							EndIf
							dbSelectArea("SDC")
							dbSetOrder(1)
							If dbSeek(xFilial("SDC")+SC6->(C6_PRODUTO+C6_LOCAL)+"SC2"+SC6->(C6_NUM+C6_ITEM))
								RecLock("SDC",.F.)
								Replace DC_PEDIDO With CriaVar("DC_PEDIDO",.F.)
								Replace DC_ITEM	With CriaVar("DC_ITEM",.F.)
								MsUnLock()
							EndIf
						ElseIf nTpCtlBN == 2 // metodo novo - multiplos envios: gravacao na SGO
							dbSelectArea("SGO")
							dbSetOrder(2) // GO_FILIAL+GO_NUMPV+GO_ITEMPV+GO_OP+GO_COD+GO_LOCAL
							dbSeek(xFilial("SGO")+SC6->C6_NUM+SC6->C6_ITEM)
							If ( GO_FILIAL+GO_NUMPV+GO_ITEMPV == SC6->C6_FILIAL+SC6->C6_NUM+SC6->C6_ITEM )
								RecLock("SGO", .F.)
								dbDelete()
								MsUnLock()
							EndIf
							dbSelectArea("SDC")
							dbSetOrder(1)
							If dbSeek(xFilial("SDC")+SC6->(C6_PRODUTO+C6_LOCAL)+"SC2"+SC6->(C6_NUM+C6_ITEM))
								RecLock("SDC",.F.)
								Replace DC_PEDIDO With CriaVar("DC_PEDIDO",.F.)
								Replace DC_ITEM	With CriaVar("DC_ITEM",.F.)
								MsUnLock()
								
							EndIf
						EndIf
						
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Executa a exclusao da tabela SGJ                    ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lAtuSGJ .And. FindFunction("A650DelSGJ")
							A650DelSGJ("I")		//Por Item
						Endif
						
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Efetua a Exclusão do Rateio³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If AliasInDic("AGG")
							aAreaAGG := GetArea()
							If (nY	:= aScan(aColsAGG,{|x| AllTrim(x[1]) == AllTrim(SC6->C6_ITEM) })) > 0
								For nZ := 1 To Len(aColsAGG[nY][2])
									AGG->(DbSetOrder(1)) //AGG_FILIAL+AGG_PEDIDO+AGG_FORNEC+AGG_LOJA+AGG_ITEMPD+AGG_ITEM
									If AGG->(MsSeek(xFilial("AGG")+SC5->C5_NUM+SC5->C5_CLIENTE+SC5->C5_LOJACLI+SC6->C6_ITEM+GdFieldGet("AGG_ITEM",nz,NIL,aHeadAGG,ACLONE(aColsAGG[NY,2]))))
										RecLock("AGG",.F.)
										AGG->(dbDelete())
										MsUnlock()
									EndIf
								Next nZ
							EndIf
							RestArea(aAreaAGG)
						EndIf
						
						dbSelectArea("SC6")
						dbDelete()
						MsUnLock()
						
						// Verifica se o C5_DTLANC esta preenchido, se estiver preenchido contabiliza a exclusão dos itens.
						If lCtbOnLine
							If !Empty(SC5->C5_DTLANC)
								nTotalCtb+=DetProva(nHdlPrv,"632","MATA410",cLoteCtb)
							Endif
						EndIf
						
						If lMta410E
							ExecBlock("MTA410E",.f.,.f.)
						EndIf
						
					EndIf

				Else
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Altera o campo C6_OP para permitir que a rotina de geracao de OP's por  ³
					//³venda seja executada novamente para este item                           ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If nOpcao == 2 .And. SC6->C6_PRODUTO <> aCols[nX][nPProduto] .And. !(SC6->C6_OP $ '01#03')
						SC6->C6_OP := ""
					EndIf
					
					If nOpcao == 2 .And. SuperGetMV("MV_ALTPVOP") == "S" .And. SC6->C6_OP == '05'
						SC6->C6_OP := " "
					EndIf
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Atualiza os itens do pedido de venda                                    ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					For nY := 1 to Len(aHeader)
						If aHeader[nY][10] <> "V"
						    If FieldPos("C6_INTROT") > 0
						        If (TRIM(aHeader[nY][2]) == "C6_INTROT") .And. SC6->C6_INTROT != aCols[nX][nY]
						            aCols[nX][nY] := IIF(Empty(SC6->C6_INTROT),"1",SC6->C6_INTROT)
						        EndIf
								If (TRIM(aHeader[nY][2]) == "C6_DATCPL") .And. SC6->C6_DATCPL != aCols[nX][nY]
									aCols[nX][nY] := SC6->C6_DATCPL
						        EndIf
								If (TRIM(aHeader[nY][2]) == "C6_HORCPL") .And. SC6->C6_HORCPL != aCols[nX][nY]
						            aCols[nX][nY] := SC6->C6_HORCPL
						        EndIf
						    EndIf
							SC6->(FieldPut(FieldPos(aHeader[nY][2]),aCols[nX][nY]))
						EndIf
					Next nY
					
					// Se for alteracao, e mudaram o cliente do pedido, nao considerar o valor o estorno
					// como um credito, pois o estorno considera um cliente e a gravacao considera outro.
					If nOpcao == 2 .And. (SC6->C6_CLI+SC6->C6_LOJA <> M->C5_CLIENTE+M->C5_LOJACLI)
						nVlrCred := 0
					EndIf
					SC6->C6_FILIAL	:= xFilial("SC6")
					SC6->C6_NUM		:= M->C5_NUM
					SC6->C6_CLI		:= M->C5_CLIENTE
					SC6->C6_LOJA 	:= M->C5_LOJACLI
					
					// Contabiliza itens do pedido de venda
					If lCtbOnLine
						nTotalCtb+=DetProva(nHdlPrv,"612","MATA410",cLoteCtb)
					EndIf
					
					If SC6->C6_QTDLIB > 0 .Or. IIf(SC5->(FieldPos("C5_TPCOMPL")) > 0,;
						(SC5->C5_TIPO $ "IP" .Or. (SC5->C5_TIPO $ "C" .And. SC5->C5_TPCOMPL == "1")),;
						SC5->C5_TIPO $ "CIP")
						lLiberou := .T.
					EndIf
					
					//Grava relacionamento entre SC6 e SD4,SDC
					If !Empty(aEmpBn)
						aAreaAtu := GetArea()
						nY := aScan(aEmpBn, {|x| x[3] == SC6->C6_ITEM})
						While !Empty (nY) .AND. nY <= Len(aEmpBn) .And. aEmpBn[nY,3] == SC6->C6_ITEM
							(aEmpBn[nY,1])->(dbGoTo(aEmpBn[nY,2]))
							If nTpCtlBN == 1 // metodo antigo - unico envio: gravacao na SD4
								RecLock(aEmpBn[nY,1],.F.)
								If aEmpBn[nY,1] == "SD4"
									Replace D4_NUMPVBN With SC6->C6_NUM
									Replace D4_ITEPVBN With SC6->C6_ITEM
								Else
									Replace DC_PEDIDO With SC6->C6_NUM
									Replace DC_ITEM   With SC6->C6_ITEM
								EndIf
								MsUnLock()
							ElseIf nTpCtlBN == 2 // metodo novo - multiplos envios: gravacao na SGO
								If aEmpBn[nY,1] == "SDC"
									RecLock("SDC",.F.)
									Replace DC_PEDIDO With SC6->C6_NUM
									Replace DC_ITEM   With SC6->C6_ITEM
								ElseIf aEmpBn[nY,1] == "SD4"
									SGO->(dbSetOrder(2)) // GO_FILIAL+GO_NUMPV+GO_ITEMPV+GO_OP+GO_COD+GO_LOCAL
									If !(SGO->(dbSeek(xFilial("SGO")+SC6->C6_NUM+SC6->C6_ITEM+SD4->D4_OP+SD4->D4_COD+SD4->D4_LOCAL)))
										RecLock("SGO",.T.)
										Replace GO_FILIAL  With xFilial("SGO")
										Replace GO_OP      With SD4->D4_OP
										Replace GO_COD     With SD4->D4_COD
										Replace GO_LOCAL   With SD4->D4_LOCAL
										Replace GO_NUMPV   With SC6->C6_NUM
										Replace GO_ITEMPV  With SC6->C6_ITEM
										Replace GO_TRT     With SD4->D4_TRT
										Replace GO_RECNOD4 With SD4->(Recno())
									Else
										RecLock("SGO", .F.)
									EndIf
									Replace GO_QUANT   With SC6->C6_QTDVEN
									Replace GO_QTSEGUM With ConvUM(SD4->D4_COD, SC6->C6_QTDVEN, 0, 2)
								EndIf
								MsUnLock()
							EndIf
							nY++
						End
						RestArea(aAreaAtu)
					EndIf
					If SC6->(FieldPos('C6_CODINF')) > 0 .And. Type('aMemoSC6') <> 'U'
						For nI := 1 To Len(aMemoSC6)
							cCpoSC6 := aMemoSC6[nI,1]
							MSMM(&cCpoSC6,,,GDFieldGet( aMemoSC6[nI,2], nX ),1,,,'SC6',aMemoSC6[nI,1])
						Next nI
					EndIf
					MaAvalSC6("SC6",1,"SC5",lLiber,lTransf,@lLiberOk,@lResidOk,@lFaturOk,Nil,@nVlrCred)
					
					If lAtuSGJ .And. FindFunction("A650AvalPV")
						A650AvalPV()
					Endif
					
					If AliasInDic("AGG")
						AGG->(DbSetOrder(1)) //AGG_FILIAL+AGG_PEDIDO+AGG_FORNEC+AGG_LOJA+AGG_ITEMPD+AGG_ITEM
						If (nY	:= aScan(aColsAGG,{|x| Alltrim(x[1]) == Alltrim(SC6->C6_ITEM) })) > 0
							For nZ := 1 To Len(aColsAGG[nY][2])
								If Type( "nAutoAdt" ) == "N" .AND. nAutoAdt == 0
									cItemSCH := GdFieldGet("AGG_ITEM",nz,NIL,aHeadAGG,ACLONE(aColsAGG[NY,2]))
								Else
									cItemSCH := aRatCTBPC[nY][2][nZ][aScan(aRatCTBPC[nY][2][nZ],{|x| x[1] == "AGG_ITEM"})][2]
								EndIf
								lAchou:=AGG->(MsSeek(xFilial("AGG")+SC5->C5_NUM+SC5->C5_CLIENTE+SC5->C5_LOJACLI+SC6->C6_ITEM+cItemSCH) )
								If !aColsAGG[nY][2][nZ][nUsadoAGG+1]
									RecLock("AGG",!lAchou)
									For nW := 1 To nUsadoAGG
										If aHeadAGG[nW][10] <> "V"
											AGG->(FieldPut(FieldPos(aHeadAGG[nW][2]),aColsAGG[nY][2][nZ][nW]))
										EndIf
									Next nW
									AGG->AGG_FILIAL	:= xFilial("AGG")
									AGG->AGG_PEDIDO	:= SC5->C5_NUM
									AGG->AGG_FORNEC:= SC5->C5_CLIENTE
									AGG->AGG_LOJA	:= SC5->C5_LOJACLI
									AGG->AGG_ITEMPD	:= SC6->C6_ITEM
									MsUnlock()
								ElseIf lAchou
									RecLock("AGG",.F.)
									AGG->(dbDelete())
									MsUnlock()
								EndIf
							Next nZ
						EndIf
					EndIf
				EndIf
				
				// Template GEM - Gestao de Empreendimentos Imobiliarios
				// Gera o contrato baseado nos dados do pedido de venda
				If  HasTemplate("LOT") .AND. ExistTemplate("GEMXPV",,.T.)
					// atualiza o status do empreendimento
					ExecTemplate("GEMXPV",.F.,.F.,{ aCols[nX][nDeleted] ,SC6->C6_CODEMPR, 2 })
				EndIf
				
				If lMta410I
					ExecBlock("MTA410I",.f.,.f.,nX)
				EndIf
				
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Caso seja o ultimo item e exclusao, exclui o cabecalho                 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If nX == nMaxFor .And. nOpcao == 3
					
					If Len(aRegSCV) > 0
						dbSelectArea("SCV")
						For nCntForma := 1 to Len(aColsFor)
							dbSelectArea("SCV")
							MsGoto(aRegSCV[nCntForma])
							RecLock("SCV")
							dbDelete()
							MsUnLock()
						Next
					Endif
					
					dbSelectArea("SC5")
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Atualiza os acumulados do SC5                                           ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					MaAvalSC5("SC5",2,lLiber,lTransf,@lLiberOk,@lResidOk,@lFaturOk,Nil,Nil,Nil,Nil,Nil,Nil,@nVlrCred)
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Grava os lancamentos nas contas orcamentarias SIGAPCO    ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					PcoDetLan("000100","04","MATA410")
					
					//
					// Template GEM - Gestao de Empreendimentos Imobiliarios
					// Exclui os solidarios do cliente gravados no pedido de venda
					//
					If ExistTemplate("GEMXGRSOL",,.T.)
						ExecTemplate("GEMXGRSOL",.F.,.F.,{nOpcao ,SC5->C5_NUM})
					EndIf
					
					//
					// Template GEM - Gestao de Empreendimentos Imobiliarios
					// Exclui a condicao de venda "personalizada" do cliente gravado no pedido de venda
					//
					If ExistBlock("GEMXGRCVND",,.T.)
						ExecBlock("GEMXGRCVND",.F.,.F.,{nOpcao ,SC5->C5_NUM ,SC5->C5_CONDPAG})
					ElseIf ExistTemplate("GEMXGRCVND",,.T.)
						ExecTemplate("GEMXGRCVND",.F.,.F.,{nOpcao ,SC5->C5_NUM ,SC5->C5_CONDPAG})
					EndIf
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Executa a exclusao da tabela SGJ                    ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lAtuSGJ .And. FindFunction("A650DelSGJ")
						A650DelSGJ("T")		//Por Total
					Endif
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Exclui o SC5                                                           ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					dbSelectArea("SC5")
					RecLock("SC5")
					dbDelete()
					MsUnLock()
					// Verifica se o C5_DTLANC esta preenchido, se estiver preenchido contabiliza cabeçalho do PV.
					If lCtbOnLine
						If !Empty(SC5->C5_DTLANC)
							nTotalCtb+=DetProva(nHdlPrv,"636","MATA410",cLoteCtb)
						Endif
					EndIf
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Agroindustria  									                 ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If FindFunction("OGXUtlOrig") //Encontra a função
						If OGXUtlOrig()
							If (FindFunction("OGX215"))//Encontra a função
								lContinua := OGX215()
							EndIf
						EndIf
					EndIf
					
					If (ExistBlock("MA410DEL"))
						ExecBlock("MA410DEL",.F.,.F.)
					EndIf
					
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Apaga o SALDO do relacionamento com Adiantamentos³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If A410UsaAdi( SC5->C5_CONDPAG )
						aRecnoSE1 := FPedAdtPed( "R", { SC5->C5_NUM }, .F. )
						FPedAdtGrv( "R", 2, SC5->C5_NUM, aRecnoSE1 )
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Retira relacionamento coma tabela NPM - SIGAAGR(UBS)			³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If AliasIndic("NPM")
						If FindFunction("AGR900DPED") 
							lContinua := AGR900DPED( SC5->C5_NUM )
						Else
							NPM->(dbSetOrder(2))
							If NPM->(dbSeek(xFilial("NPM")+SC5->C5_NUM))
								RecLock("NPM",.F.)
								NPM->NPM_NUMPV := Space(TamSX3("NPM_NUMPV")[1])
								MsUnlock()
							EndIf
						EndIf						
					EndIf
					
				EndIf
		
				If SC5->C5_TIPLIB=="2" .And. !aCols[nX][nDeleted]
					aAdd(aRegLib,SC6->(RecNo()))
				EndIf
				
			EndIf
		
			If nX >= nMaxFor
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Envia os dados para o modulo contabil             ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If lCtbOnLine
					RodaProva(nHdlPrv,nTotalCtb)
					If nTotalCtb > 0
						cA100Incl(cArqCtb,nHdlPrv,1,cLoteCtb,lDigita,lAglutina)
					EndIf
				EndIf
				
				// Flag de contabilização on-line.
				If lCtbOnLine
					RecLock("SC5")
					SC5->C5_DTLANC := dDataBase
					MsUnlock()
				Endif	
			Endif

			CLOSETRANSACTION LOCKIN "SC5,SC6"		
		Next nX
		
		Begin Transaction  
		
		If ( lGravou ) .And. nOpcao <> 3
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica a liberacao por pedido de venda                                ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( SC5->C5_TIPLIB=="2" .And. (lLiberou .Or. MaTesSel(SC6->C6_TES)) )
				MaAvalSC5("SC5",3,lLiber,lTransf,@lLiberOk,@lResidOk,@lFaturOk,Nil,Nil,Nil,aRegLib,Nil,Nil,@nVlrCred)
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Atualiza os acumulados do SC5                                           ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			MaAvalSC5("SC5",1,lLiber,lTransf,@lLiberOk,@lResidOk,@lFaturOk,Nil,Nil,Nil,Nil,Nil,Nil,@nVlrCred)
			If INCLUI
				While GetSX8Len() > nStack
					ConfirmSX8()
				EndDo
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Pontos de entrada para todos os itens do pedido.    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ExistTemplate("MTA410T")
				ExecTemplate("MTA410T",.F.,.F.)
			EndIf
			
			If nModulo == 72
				KEXF920()
			EndIf
			
			If ExistBlock("MTA410T")
				ExecBlock("MTA410T",.F.,.F.)
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³  Processa Gatilhos                                   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			EvalTrigger()
		EndIf
				
		End Transaction
	EndIf
Else
	lGravou := lXml
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Aciona integração via mensagem única          				³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If FindFunction('GETROTINTEG') .And. FWHasEAI("MATA410",.T.,,.T.) .And. lGravou
	FwIntegDef( 'MATA410' )
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para refazer as liberações de estoque considerando o  ³
//³ os registros de SDC da liberação anterior...                           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( (ExistBlock("M410RLIB") ) )
	aSaldoSDC := ExecBlock("M410RLIB",.f.,.f.,aSaldoSDC)
EndIf

RestArea( aArea )

If lGravou .Or. nOpcao == 3
	If nOpcao == 1
		IntPVSServ(SC5->C5_NUM,3)
	ElseIf nOpcao == 2
		IntPVSServ(SC5->C5_NUM,4)
	ElseIf nOpcao == 3
		IntPVSServ(SC5->C5_NUM,5)
	EndIf
EndIf

Return(lGravou)


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma410GraGr³ Autor ³Eduardo Riera          ³ Data ³26.02.99  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Esta funcao compatibiliza o acols da grade de produtos com  ³±±
±±³          ³o acols original do pedido de vendas assim nao eh necessario³±±
±±³          ³qualquer modificacao na funcao de gravacao do Pedido de     ³±±
±±³          ³Venda                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Author  ³ BOPS  ³ Manutencao Efetuada                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma410GraGr()

Local aColsOrig:= aClone(aCols)  //aCols Original
Local nMaxFor  := Len(aColsOrig)
Local nCntFor  := 0     // Contador
Local nPProduto:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPItem   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEM"})
Local nPItGrade:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEMGRD"})
Local nPPrcVen := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN"})
Local nPQtdVen := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPQtdVen2:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_UNSVEN"})
Local nPQtdLib := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDLIB"})
Local nPValor  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALOR"})
Local nPGrade  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_GRADE"})
Local nPValDesc := aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALDESC"})
Local nPOpc    := aScan(aHeader,{|x| AllTrim(x[2])=="C6_OPC"})
Local nPDescri := aScan(aHeader,{|x| AllTrim(x[2])=="C6_DESCRI"})
Local nPPrUnit := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRUNIT"})
Local nPBlq    := aScan(aHeader,{|x| AllTrim(x[2])=="C6_BLQ"})
Local nOP      := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMOP"})
Local nItmOP   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEMOP"})
Local nLinha   := 0     // Contador de Linhas
Local nColuna  := 0     // Contador de Colunas
Local nAcols   := 0     // Numero de Elementos do Acols
Local cProdRef := ""    // Codigo do Produto Grade
Local cItem    := "00"  // Controle de Itens do Pedido de Venda
Local aColsGrd := {} 	//montara aCols de produtos da grade aqui para poder ordenar pelo codigo

Local lTestaDel:= If(Len(aColsOrig[1])==Len(aHeader),.F.,.T.)
Local lGrdMult := FindFunction("MATGRADE_V") .And. MATGRADE_V() >= 20110425 .And. "MATA410" $ SuperGetMV("MV_GRDMULT",.F.,"")

If FindFunction("MsMatGrade") .And. IsAtNewGrd()
	If MaGrade() .And. Type("oGrade")=="O" .And. Len(oGrade:aColsGrade)>0
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Inicializa o Acols para posterior atualizacao                           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aCols := {}
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Varre o acols original para atualizar a variavel aCols                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nCntFor := 1 To nMaxFor
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Atualiza o Controle de Itens do Pedido de Venda e da Grade              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			cItem    := aColsOrig[nCntFor][nPitem] //Soma1(cItem,Len(SC6->C6_ITEM))
			cItemGrd := StrZero(0,TamSX3("C6_ITEMGRD")[1])
			cProdRef := aColsOrig[nCntFor][nPProduto]
			If ( !Empty(cProdRef) )                   
				oGrade:nPosLinO := nCntFor
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Verifica se foi digitado uma referencia                                 ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ( Len(oGrade:aHeadGrade)>0 .And. oGrade:aHeadGrade[nCntFor][1] == "R" )
					For nLinha := 1 To Len(oGrade:aColsGrade[nCntFor])
						For nColuna := 2 To Len(oGrade:aHeadGrade[nCntFor])
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Verifica se a valor a ser gravado                                       ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If ( oGrade:aColsFieldByName("C6_QTDVEN",nCntFor,nLinha,nColuna) <> 0 .And.;
									If(lTestaDel,!aColsOrig[nCntFor][Len(aHeader)+1],.T.) )
								cItemGrd := Soma1(cItemGrd,Len(SC6->C6_ITEMGRD))
								cProdRef := aColsOrig[nCntFor][nPProduto]
								MatGrdPrRf(@cProdRef)                
								cProdRef := oGrade:GetNameProd(cProdRef,nLinha,nColuna) 
								aadd(aColsGrd,aClone(aColsOrig[nCntFor]))
								nAcols := Len(aColsGrd)
								aColsGrd[nAcols][nPProduto ]  := PadR(cProdRef,Len(SB1->B1_COD))
								aColsGrd[nAcols][nPItem    ]  := cItem
								If ( nPItGrade <> 0 )
									aColsGrd[nAcols][nPItGrade ]  := cItemGrd
								EndIf
								If ( nPQtdVen <> 0 )
									aColsGrd[nAcols][nPQtdVen  ]  := oGrade:aColsFieldByName("C6_QTDVEN",nCntFor,nLinha,nColuna)
								EndIf
								// --- Tratamento OP
								If (nOP <> 0 .And. nItmOP <> 0)
									aOP := A410GrdOP(aColsGrd[nAcols][nPItem],aColsGrd[nAcols][nPProduto])
									aColsGrd[nAcols][nOP]    := aOP[1]
									aColsGrd[nAcols][nItmOP] := aOP[2]
								EndIf
								If ( nPQtdVen2 <> 0 )
									aColsGrd[nAcols][nPQtdVen2 ]  := oGrade:aColsFieldByName("C6_UNSVEN",nCntFor,nLinha,nColuna)
								EndIf
								If ( nPQtdLib <> 0 )
									aColsGrd[nAcols][nPQtdLib  ]  := oGrade:aColsFieldByName("C6_QTDLIB",nCntFor,nLinha,nColuna)
								EndIf
								If ( nPValor <> 0 )
									If lGrdMult
										aColsGrd[nAcols][nPValor   ]  := oGrade:aColsFieldByName("C6_VALOR",nCntFor,nLinha,nColuna)
									Else
										aColsGrd[nAcols][nPValor   ]  := a410Arred(oGrade:aColsFieldByName("C6_QTDVEN",nCntFor,nLinha,nColuna)*aColsOrig[nCntFor][nPPrcVen],"C6_VALOR")
									EndIf
								EndIf
								If  ( nPGrade <>  0 )
									aColsGrd[nAcols][nPGrade   ]  := "S"
								Endif
								If  ( nPValDesc !=  0 )
									If lGrdMult
										aColsGrd[nAcols][nPValDesc]	:= oGrade:aColsFieldByName("C6_VALDESC",nCntFor,nLinha,nColuna)
									Else
										aColsGrd[nAcols][nPValDesc]	:= (aColsOrig[nCntFor][nPValDesc]/aColsOrig[nCntFor][nPQtdVen])*aColsGrd[nAcols][nPQtdVen	]
									EndIf
								EndIf
								If  ( nPOpc !=  0 )
									aColsGrd[nAcols][nPOpc]	:= oGrade:aColsFieldByName("C6_OPC",nCntFor,nLinha,nColuna)
								EndIf
								If lGrdMult
									If  ( nPPrcVen != 0 )
										aColsGrd[nAcols][nPPrcVen]	:= oGrade:aColsFieldByName("C6_PRCVEN",nCntFor,nLinha,nColuna)
									EndIf
									If  ( nPDescri != 0 )
										aColsGrd[nAcols][nPDescri]	:= oGrade:aColsFieldByName("C6_DESCRI",nCntFor,nLinha,nColuna)
									EndIf
									If	( nPPrUnit != 0 )
										aColsGrd[nAcols][nPPrUnit]	:= oGrade:aColsFieldByName("C6_PRUNIT",nCntFor,nLinha,nColuna)
									EndIf
									If	(nPBlq != 0 )
										aColsGrd[nAcols][nPBlq]	:= oGrade:aColsFieldByName("C6_BLQ",nCntFor,nLinha,nColuna)
									EndIf
								EndIf
							Else
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³Verifica se o item ja foi gravado para deleta-lo                        ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If ( !Empty(oGrade:aColsFieldByName("C6_ITEM",nCntFor,nLinha,nColuna)) )
									cProdRef := aColsOrig[nCntFor][nPProduto]
									cItemGrd := Soma1(cItemGrd,Len(SC6->C6_ITEMGRD))
									MatGrdPrRf(@cProdRef) 
									cProdRef := oGrade:GetNameProd(cProdRef,nLinha,nColuna) 
									aadd(aColsGrd,aClone(aColsOrig[nCntFor]))
									nAcols := Len(aColsGrd)
									aColsGrd[nAcols][nPProduto ]  := PadR(cProdRef,Len(SB1->B1_COD))
									aColsGrd[nAcols][nPItem    ]  := cItem
									If ( nPItGrade <> 0 )
										aColsGrd[nAcols][nPItGrade ]  := cItemGrd
									EndIf
									If ( nPQtdVen <> 0 )
										aColsGrd[nAcols][nPQtdVen  ]  := oGrade:aColsFieldByName("C6_QTDVEN",nCntFor,nLinha,nColuna) 
									EndIf
									// --- Tratamento OP
									If (nOP <> 0 .And. nItmOP <> 0)
										aOP := A410GrdOP(aColsGrd[nAcols][nPItem],aColsGrd[nAcols][nPProduto])
										aColsGrd[nAcols][nOP]    := aOP[1]
										aColsGrd[nAcols][nItmOP] := aOP[2]
									EndIf
									If ( nPQtdLib <> 0 )
										aColsGrd[nAcols][nPQtdLib  ]  := oGrade:aColsFieldByName("C6_QTDLIB",nCntFor,nLinha,nColuna) 
									EndIf
									If ( nPValor <> 0 )
										If lGrdMult
											aColsGrd[nAcols][nPValor   ]  := oGrade:aColsFieldByName("C6_VALOR",nCntFor,nLinha,nColuna) 
										Else
											aColsGrd[nAcols][nPValor   ]  := a410Arred(oGrade:aColsFieldByName("C6_QTDVEN",nCntFor,nLinha,nColuna)*aColsOrig[nCntFor][nPPrcVen],"C6_VALOR")
										EndIf
									EndIf
									If  ( nPGrade <>  0 )
										aColsGrd[nAcols][nPGrade   ]  := "S"
									EndIf
									If  ( nPValDesc !=  0 )
										If lGrdMult
											aColsGrd[nAcols][nPValDesc]	:= oGrade:aColsFieldByName("C6_VALDESC",nCntFor,nLinha,nColuna) 
										Else
											aColsGrd[nAcols][nPValDesc]	:= (aColsOrig[nCntFor][nPValDesc]/aColsOrig[nCntFor][nPQtdVen])*aColsGrd[nAcols][nPQtdVen	]
										EndIf
									EndIf
									If  ( nPOpc !=  0 )
										aColsGrd[nAcols][nPOpc]	:= oGrade:aColsFieldByName("C6_OPC",nCntFor,nLinha,nColuna)
									EndIf
									If lGrdMult
										If  ( nPPrcVen != 0 )
											aColsGrd[nAcols][nPPrcVen]	:= oGrade:aColsFieldByName("C6_PRCVEN",nCntFor,nLinha,nColuna)
										EndIf
										If  ( nPDescri != 0 )
											aColsGrd[nAcols][nPDescri]	:= oGrade:aColsFieldByName("C6_DESCRI",nCntFor,nLinha,nColuna)
										EndIf
										If	( nPPrUnit != 0 )
											aColsGrd[nAcols][nPPrUnit]	:= oGrade:aColsFieldByName("C6_PRUNIT",nCntFor,nLinha,nColuna)
										EndIf
										If	(nPBlq != 0 )
											aColsGrd[nAcols][nPBlq]	:= oGrade:aColsFieldByName("C6_BLQ",nCntFor,nLinha,nColuna)
										EndIf
									EndIf
									aColsGrd[nAcols][Len(aHeader)+1] := .T.
								EndIf
							EndIf
						Next nColuna
					Next nLinha
					
					//--Ordena itens da grade pelo codigo para evitar erro durante alteracoes e liberacoes do PV
					aSort(aColsGrd,,,{|x,y| x[2] < y[2]})
					
					For nAcols := 1 To Len(aColsGrd)
						aColsGrd[nAcols][nPItGrade] := StrZero(nAcols,TamSX3("C6_ITEMGRD")[1])
						aAdd(aCols, aClone(aColsGrd[nAcols]) )
					Next nAcols
				Else
					aadd(aCols,aClone(aColsOrig[nCntFor]))
					nAcols := Len(aCols)
					aCols[nAcols][nPItem    ]  := cItem
				EndIf
				//--Limpa array temporario utilizado para o sort
				aColsGrd := {}
			EndIf
		Next nCntFor
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Ordena o aCols                                                          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aCols       := aSort(aCols,,,{|x,y| x[nPItem]+x[nPItGrade] < y[nPItem]+y[nPItGrade] })
		oGrade:aColsGrade  := {}
		oGrade:aHeadGrade  := {}
	EndIf
Else
	_Ma410GraGr()
EndIf
Return(Nil)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A410VldTOk  ³ Autor ³Eduardo Riera        ³ Data ³01/06/2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Rotina de validacao da tudoOk da Enchoice                   ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1: Dados validos?                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³Esta rotina efetua a validacao da TudoOk da Enchoice        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410VldTOk(nOpc, aRecnoSE1RA)

Local lRet      := .T.
Local lMt410TOK := Existblock("MT410TOK")  
Local cString   := ""
Local aRecnoSE1 := {}

If nOpc = 4
	cString   := STR0141 //"Este Documento não poderá ser alterado pois existe um vinculo com pedido de compras ja recebido"
Else	
	 cString   := STR0142 //"Este Documento não poderá ser excluido pois existe um vinculo com pedido de compras ja recebido"
EndIf    

Default aRecnoSE1RA := {}

If cPaisLoc=="ARG" .And. lRet
	If   SC5->(FieldPos('C5_IDIOMA')) >0  .AND.  SC5->(FieldPos('C5_INCOTER')) >0 .And. SC5->(FieldPos('C5_PERMISS')) >0 .AND. SC5->(FieldPos('C5_TPVENT'))   >0;
		.AND. SC5->(FieldPos('C5_PAISENT'))   >0
			SA1->(DbSetOrder(1))
		If( SA1->(DbSeek(xFilial("SA1") + M->C5_CLIENTE+M->C5_LOJACLI))  .And.  M->C5_PAISENT <> SA1->A1_PAIS) .And. ;
		  (Empty(M->C5_IDIOMA) .OR.  Empty(M->C5_INCOTER) .OR.  Empty(M->C5_TPVENT) ;
		  .OR.  Empty(M->C5_PAISENT))
			MsgStop(STR0143,STR0140)
			lRet := .F.
		EndIf
	 EndIf
EndIf                   
If !__lPyme

	//
	// Template GEM
	//	
	If lRet 
		If ExistBlock("GMCVndVLD")
			lRet := ExecBlock("GMCVndVLD",.F.,.F.,{ lRet ,aHeader ,aCols ,aGEMCVnd })
		ElseIf ExistTemplate("GMCVndVLD",,.T.)
			//
			// executa a validacao da condicao de venda
			//
			lRet := ExecTemplate("GMCVndVLD",.F.,.F.,{ lRet ,aHeader ,aCols ,aGEMCVnd })
		Endif	

	EndIf

Endif

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ponto de entrada para validar ao clicar botao OK          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lMt410TOK
	lRet := Execblock("MT410TOK",.F.,.F.,{nOpc,aRecnoSE1RA})
Endif


//Valida Natureza e Condicao de Pagamento. (Anticipo Mexico)
If lRet .AND. cPaisLoc $ "MEX|PER"  //jgr
	 //Qdo Natureza Compensa Adiantamento nao permite condicao de Pagamento que usa Adiantamento
	 //Logo:
	 //NF de Adiantamento: Natureza Comp. Adiantamento = SIM e Cond. Pag. Usa Adiant. = NAO
	 //NF que usa Adiantamento: Natureza Comp. Adiantamento = Nao e Cond. Pag. Usa Adiant. = SIM
	 If a410NatAdi(M->C5_NATUREZ) .AND. A410UsaAdi( M->C5_CONDPAG )
		  Aviso(STR0038,STR0178,{STR0040}) //"ATENCAO!"###"Quando a natureza compensar adiantamento não será possivel utilizar condicao de pagamento que usa adiantamentos."###"OK"
		  lRet := .F.                                      
	 Endif                
EndIf  

If A410UsaAdi(SC5->C5_CONDPAG)
	If !A410UsaAdi(M->C5_CONDPAG)
		If !A410UsaAdi( M->C5_CONDPAG ) .AND. Len(aRecnoSE1RA) > 0 .AND. lRet
				Help(" ",1,"A410CONDNADT")
				lRet := .F.
		ElseIf !A410UsaAdi( M->C5_CONDPAG ) .AND. Len(aRecnoSE1RA) <= 0 .AND. lRet
				aRecnoSE1 := FPedAdtPed( "R", { SC5->C5_NUM }, .F. )
				FPedAdtGrv("R", 2, SC5->C5_NUM, aRecnoSE1,,,,aAdtPC,nAutoAdt)
		EndIf
	EndIf
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Valida se há relacionamentos de Adiantamentos³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If 	!( cPaisLoc $ "MEX|PER") .AND. ( Type("l410Auto") == "U" .OR. !l410Auto ) .AND.; 
	A410UsaAdi( M->C5_CONDPAG ) .AND.; 
	Len(aRecnoSE1RA) <= 0 .AND.;
	lRet
	
	lRet := MsgYesNo( STR0125 ) // "Não foram relacionados Adiantamentos para este pedido. Deseja prosseguir?"
EndIf

If lRet .AND. Len(aCols) > 0 .And. Type("INCLUI") == "L" .And. !INCLUI
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se existe Vinculo com SC6 E SC7, se  ³
	//³houve recebimento do SC7 O sc6 nao podera ser ³
	//³alterado.									 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		lRet :=	A410VerISC6(SC5->C5_FILIAL,SC5->C5_NUM ,aCols,aHeader)
	If !lRet 
		Aviso(STR0140,cString,{"Ok"}) //  "ATENÇÃO" | "Este Documento não poderá ser alterado/excluido pois existe um vinculo com pedido de compras ja recebido"				
	EndIf	
EndIf	   

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se este pedido possui Orcamentos-DAV em aberto no SIGALOJA		³
//³Se sim, entao exclui todos. Se orcamento ja se tornou uma venda, entao	³
//³bloqueia a alteracao do pedido											³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lRet .and. nOpc == 4 .and. cPaisLoc == "BRA" .and. SC9->(FieldPos("C9_DAV")) > 0 .and. SuperGetMV("MV_LJPAFEC",,.F.) .AND. LjNfPafEcf(SM0->M0_CGC)
	MsgRun('Verificando DAV relacionado...','Aguarde...',{|| lRet := Ma410VlDav(M->C5_NUM)})
EndIf

Return(lRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410Bonus ³ Autor ³Eduardo Riera          ³ Data ³16.06.2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Rotina de tratamento da regra de bonificacao para interface ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Tipo de operacao                                     ³±±
±±³          ³       [1] Inclusao do bonus                                ³±±
±±³          ³       [2] Exclusao do bonus                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo avaliar a regra de bonificacao³±±
±±³          ³e adicionar na respectiva interface                         ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A410Bonus(nTipo)

Local aArea     := GetArea()
Local aBonus    := {}
Local lA410BLCo := ExistBlock("A410BLCO")
Local nX        := 0
Local nY        := 0
Local nW        := 0 
Local nZ        := Len(aCols)
Local nUsado    := Len(aHeader)
Local nPProd    := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO" })
Local nPQtdVen  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN" })
Local nPPrcVen  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN" })
Local nPValor   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALOR" })
Local nPTES		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES" })                
Local nPItem	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEM" })
Local nPQtdLib  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDLIB" })
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica os bonus                                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nTipo == 1
	Ma410GraGr()
	If M->C5_TIPO=="N"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Verifica os bonus por item de venda                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock('A410BONU')
			aBonus	:=	ExecBlock('A410BONU',.F.,.F.,{aCols,{nPProd,nPQtdVen,nPTES}})
		Else
			aAreaSE4 := SE4->(GetArea())
			SE4->(DbSetOrder(1))
			SE4->(DbSeek( xFilial("SE4") + M->C5_CONDPAG ))
			aBonus   := FtRgrBonus(aCols,{nPProd,nPQtdVen,nPTES},M->C5_CLIENTE,M->C5_LOJACLI,M->C5_TABELA,M->C5_CONDPAG,SE4->E4_FORMA)
			SE4->(RestArea(aAreaSE4))
		Endif
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Recupera os bonus ja existentes                         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aBonus   := FtRecBonus(aCols,{nPProd,nPQtdVen,nPTES,nUsado+1},aBonus)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Grava os novos bonus                                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nY := Len(aBonus)
		If nY > 0
			cItem := aCols[nZ,nPItem]
			For nX := 1 To nY
				cItem := Soma1(cItem)
				aadd(aCols,Array(nUsado+1))
				nZ++
				N := nZ
				For nW := 1 To nUsado
					If (aHeader[nW,2] <> "C6_REC_WT") .And. (aHeader[nW,2] <> "C6_ALI_WT")
						aCols[nZ,nW] := CriaVar(aHeader[nW,2],.T.)
					EndIf	
				Next nW
				aCols[nZ,nUsado+1] := .F.
				aCols[nZ,nPItem  ] := cItem
				A410Produto(aBonus[nX][1],.F.)
				A410MultT("M->C6_PRODUTO",aBonus[nX][1])
				A410MultT("M->C6_TES",aBonus[nX][3])
				aCols[nZ,nPProd  ] := aBonus[nX][1]
				
				If ExistTrigger("C6_PRODUTO")
					M->C6_PRODUTO := aCols[nZ,nPProd]
					RunTrigger(2,Len(aCols))
				Endif

				aCols[nZ,nPQtdVen] := aBonus[nX][2]
				aCols[nZ,nPTES   ] := aBonus[nX][3]
				If ( aCols[nZ,nPPrcVen] == 0 )
					aCols[nZ,nPPrcVen] := 1
					aCols[nZ,nPValor ] := aCols[nZ,nPQtdVen]
				Else
					aCols[nZ,nPValor ] := A410Arred(aCols[nZ,nPQtdVen]*aCols[nZ,nPPrcVen],"C6_VALOR")
				EndIf
				
				If ExistTrigger("C6_TES    ")
						RunTrigger(2,Len(aCols))
				Endif

				If mv_par01 == 1 
					aCols[nZ,nPQtdLib ] := aCols[nZ,nPQtdVen ]
				Endif

				If lA410BLCo
					aCols[nZ] := ExecBlock("A410BLCO",.F.,.F.,{aHeader,aCols[nZ]})
				Endif
			Next nX
		EndIf
	EndIf
Else
	FtDelBonus(aCols,{nPProd,nPQtdVen,nPTES,nUsado+1})	
EndIf
RestArea(aArea)
Return(.T.)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³MA410ForPg³ Autor ³Henry Fila             ³ Data ³17.08.2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Interface com o usuario das formas de pagamento             ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Opcao do aRotina                                     ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo controlar a interface com o   ³±±
±±³          ³usuario das formas de pagamento                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Ma410ForPg(nOpcX)

Local aArea     := GetArea()
Local aPosObj   := {}
Local aObjects  := {}
Local aSize     := MsAdvSize()
Local nOpcA     := 0
Local oDlg
Local oGetDad

PRIVATE N := 1
PRIVATE aHeader := aClone(aHeadFor)
PRIVATE aCols   := aClone(aColsFor)

AAdd( aObjects, { 100, 100, .t., .t. } )

aSize[ 3 ] -= 50
aSize[ 4 ] -= 50 	

aSize[ 5 ] -= 100
aSize[ 6 ] -= 100

aInfo   := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 2 }
aPosObj := MsObjSize( aInfo, aObjects )

dbSelectArea("SCV")
DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0041) From aSize[7],00 to aSize[6],aSize[5] Of oMainWnd PIXEL
oGetDad := MsGetDados():New(aPosObj[1,1],aPosObj[1,2],aPosObj[1,3],aPosObj[1,4],nOpcX,"M410FmLok()","M410FmTOk()",,.T.,,,,99)
ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| nOpcA := 1,If(oGetDad:TudoOk(),oDlg:End(),nOpcA := 0)},{||oDlg:End()}) CENTERED
If nOpcA == 1
	aHeadFor := aClone(aHeader)
	aColsFor   := aClone(aCols)
EndIf
RestArea(aArea)
Return(.T.)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410FmTOk ³ Autor ³Henry Fila             ³ Data ³23.08.2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao da TudoOk da Getdados das formas de pagamento     ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica se todos os itens sao validos                 ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a validacao da TudoOk ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function M410FmTok()

Local lRet     := .T.
Local nX       := 0
Local nPercent := 0
Local nPosPer  := Ascan(aHeader,{|x| Alltrim(x[2]) == "CV_RATFOR"})
Local lValida  := .F.

For nX := 1 to Len(aCols)
	If !aCols[nX][Len(aHeader)+1]
		nPercent += aCols[nX][nPosPer]
		lValida  := .T.
	Endif
Next nX
If nPercent <> 100 .And. lValida
	Help(" ",1,"M410FRATEI")
	lRet := .F.
EndIf
Return(lRet)
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³A410FmLOk ³ Autor ³Henry Fila             ³ Data ³23.08.2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Validacao da Linha Ok da Getdados das formas de pagamento   ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica se a linha e valida                           ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a validacao da linhaOk³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function M410FmLok()

Local lRet     := .T.
Local nX       := 0

Local nPosFor  := Ascan(aHeader,{|x| Alltrim(x[2]) == "CV_FORMAPG"})

If !aCols[n][Len(aHeader)+1]

	For nX := 1 to Len(aCols)
		If !aCols[nX][Len(aHeader)+1] .And. n <> nX
			If aCols[nX][nPosFor] == aCols[n][nPosFor]
				Help(" ",1,"M410FORMA")
				lRet := .F.
			Endif
		Endif
	Next nX
EndIf
Return(lRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma410MtFor³ Autor ³Henry Fila             ³ Data ³17.08.2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Montagem das formas de pagamento                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpA1: Array onde sera montado o aHeader do SCV             ³±±
±±³          ³ExpA2: Array onde sera montado o aCols do SCV               ³±±
±±³          ³ExpA3: Array com os recnos do SCV                           ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a montagem do aheader ³±±
±±³          ³e acols da tabela SCV para uso na GetDados.                 ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma410MtFor(aHeadFor,aColsFor,aRegSCV)

Local cArqQry    := "SCV"
Local lQuery     := .F.
Local nUsado     := 0
Local nX         := 0

#IFDEF TOP
	Local aStruSCV   := {}
	Local cQuery     := ""
#ENDIF 	

DEFAULT aRegSCV  := {}
DEFAULT aHeadFor := {}
DEFAULT aColsFor := {}
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Montagem do aHeadFor                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SX3")
dbSetOrder(1)
dbSeek("SCV")
While !Eof() .And. SX3->X3_ARQUIVO == "SCV"
	If X3Uso(SX3->X3_USADO) .And. cNivel >= SX3->X3_NIVEL
		nUsado++
		Aadd(aHeadFor, { AllTrim(X3Titulo()),;
			SX3->X3_CAMPO,;
			SX3->X3_PICTURE,;
			SX3->X3_TAMANHO,;
			SX3->X3_DECIMAL,;
			SX3->X3_VALID,;
			SX3->X3_USADO,;
			SX3->X3_TIPO,;
			SX3->X3_ARQUIVO,;
			SX3->X3_CONTEXT } )
	EndIf
	dbSelectArea("SX3")
	dbSkip()
EndDo
If  !INCLUI
	SCV->(DbSetOrder(1))
	#IFDEF TOP
		If TcSrvType()<>"AS/400" .And. !InTransact()
			lQuery  := .T.
			cArqQry := "SCV"
			aStruSCV:= SCV->(dbStruct())

			cQuery := "SELECT SCV.*,SCV.R_E_C_N_O_ SCVRECNO "
			cQuery += "FROM "+RetSqlName("SCV")+" SCV "
			cQuery += "WHERE "
			cQuery += "SCV.CV_FILIAL='"+xFilial("SCV")+"' AND "
			cQuery += "SCV.CV_PEDIDO='"+M->C5_NUM+"' AND "
			cQuery += "SCV.D_E_L_E_T_=' ' "
			cQuery += "ORDER BY "+SqlOrder(SCV->(IndexKey()))

			cQuery := ChangeQuery(cQuery)

			dbSelectArea("SCV")
			dbCloseArea()
			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cArqQry,.T.,.T.)

			For nX := 1 To Len(aStruSCV)
				If	aStruSCV[nX,2] <> "C"
					TcSetField(cArqQry,aStruSCV[nX,1],aStruSCV[nX,2],aStruSCV[nX,3],aStruSCV[nX,4])
				EndIf
			Next nX
		Else
	#ENDIF
		SCV->(DbSeek(xFilial("SCV")+M->C5_NUM))
		#IFDEF TOP
		EndIf
		#ENDIF
	While (cArqQry)->(!Eof() .And. (cArqQry)->CV_FILIAL==xFilial("SCV") .And.;
			(cArqQry)->CV_PEDIDO==M->C5_NUM)
		aadd(aColsFor,Array(nUsado+1))	
		For nX := 1 To nUsado
			If ( aHeadFor[nX][10] <> "V" )
				aColsFor[Len(aColsFor)][nX] := (cArqQry)->(FieldGet(FieldPos(aHeadFor[nX][2])))
			Else
				aColsFor[Len(aColsFor)][nX] := CriaVar(aHeadFor[nX,2])
			EndIf
		Next
		aColsFor[Len(aColsFor)][nUsado+1] := .F.

		aadd(aRegSCV,If(lQuery,(cArqQry)->SCVRECNO,(cArqQry)->(RecNo())))

		dbSelectArea(cArqQry)
		dbSkip()
	EndDo
	If lQuery
		dbSelectArea(cArqQry)
		dbCloseArea()
		ChkFile("SCV",.F.)
		dbSelectArea("SCV")
	EndIf
Endif

If Empty(aColsFor)
	aadd(aColsFor,Array(nUsado+1))

	For nX := 1 To nUsado
		aColsFor[1][nX] := CriaVar(aHeadFor[nX][2])
	Next nX
	aColsFor[Len(aColsFor)][nUsado+1] := .F.
Endif

Return(.T.)

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A410DelOk ³ Autor ³Rodrigo de A. Sartorio ³ Data ³21/08/00  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Consistencia geral dos itens de Pedidos de Venda antes da  ³±±
±±³          ³ exclusao.                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
*/
Function A410DelOk()
Local lRet    := .T.
Local z       := 0
Local lAtuSGJ := SuperGetMV("MV_PVCOMOP",.F.,.F.) .And. FindFunction("ALIASINDIC") .And. AliasIndic("SGJ")
Local lCanDel := SuperGetMv("MV_DELPVOP",.F.,.T.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Trata se exclui ou nao itens que geraram OPs         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Estrutura do Array aOPs :                            ³
//³ aOPs[z,1] := Item do Pedido de Vendas                ³
//³ aOPs[z,2] := Produto do Pedido de Vendas             ³
//³ aOPs[z,3] := No. da OP gerada para o PV              ³
//³ aOPs[z,4] := Item da OP gerada para o PV             ³
//³ aOPs[z,5] := No. da SC gerada para o PV              ³
//³ aOPs[z,6] := Item da SC gerada para o PV             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For z:=1 to Len(aOps)
	If lCanDel
		 If ValType(aOps[z,5])=="C" .And. !Empty(aOps[z,5]) .And. !Empty(aOps[z,6])
			lRet:=(Aviso(OemToAnsi(STR0014),STR0027+aOps[z,1]+" - "+aOps[z,2]+ " " + OemToAnsi(STR0108)+ " : " + aOps[z,5]+"/"+aOps[z,6]+"."+STR0029,{STR0030,STR0031}) == 1) //"Aten‡„o"###"O item "###" gerou a Solicitacao de Compras "###"Confirma Exclusao ?"###"Sim"###"Nao"
		ElseIf lAtuSGJ
			Aviso(OemToAnsi(STR0014),STR0060,{STR0040})
			lRet := .F.
		Else
			lRet:=(Aviso(OemToAnsi(STR0014),STR0027+aOps[z,1]+" - "+aOps[z,2]+STR0028+aOps[z,3]+"/"+aOps[z,4]+"."+STR0029,{STR0030,STR0031}) == 1) //"Aten‡„o"###"O item "###" gerou a Ordem de Producao "###"Confirma Exclusao ?"###"Sim"###"Nao"
		EndIf
		If !lRet
			Exit
		EndIf
	Else
		Aviso(OemToAnsi(STR0014),STR0060,{STR0040})
		lRet := .F.
		Exit
	Endif
Next z

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³a410IncRap³ Autor ³ Eduardo Riera         ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa exclusivo para inclusao no MATA410                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ Void a410IncRap(ExpC1,ExpN1,,lOrcamento)                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±³          ³ ExpL1 = Define se a inclusao foi efetuado pelo MATA416     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410IncRap(cAlias,nReg,nOpc)

Local nOpcA 	:= 0

Local nCntFor	:= 0
Local nStack    := GetSX8Len() 


Local nUsado	:= 0

Local lLiber	:= .F.
Local lTransf	:= .F.
Local lGravou	:= .F.
Local nPProduto:= 0
Local bCampo	:= { |nCPO| Field(nCPO) }
Local oDlg
Local oGetD
Local oSAY1
Local oSAY2
Local oSAY3
Local oSAY4
Local nNumDec := TamSX3("C6_VALOR")[2]

Local aPosObj   := {}
Local aObjects  := {}
Local aSize     := {}
Local aPosGet   := {}
Local nGetLin   := 0
Local lM410Bar  := ExistBlock("M410CODBAR")
Local aRecnoSE1RA := {} // Array com os titulos selecionados pelo Adiantamento
Local aHeadAGG    := {}
Local aColsAGG    := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carrega perguntas do MATA440 e MATA410                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte("MTA440",.F.)
lLiber := MV_PAR02 == 1
lTransf:= MV_PAR01 == 1
Pergunte("MTA410",.F.)
//Carrega as variaveis com os parametros da execauto
Ma410PerAut()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variavel utilizada p/definir Op. Triangulares.       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IsTriangular( (MV_PAR03==1) )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta a entrada de dados do arquivo                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aTela[0][0]
PRIVATE aGets[0]
PRIVATE bArqF3
PRIVATE bCpoF3
PRIVATE aTrocaF3	:= {}
PRIVATE aValidGet	:= {}   
PRIVATE oGetPV		:= Nil

PRIVATE cCondPAdt   := "0" //Controle p/ cond. pgto. com aceite de Adt. 0=normal 1=Adt
If !FindFunction("MsMatGrade") .And. IsAtNewGrd()
	PRIVATE aColsGrade := {}
	PRIVATE aHeadGrade := {}
EndIf

If (! MaGrade() )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Salva a integridade dos campos de Bancos de Dados    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SC5")
	dbSetOrder(1)

	RegToMemory( "SC5", .T., .F. )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Salva a integridade dos campos de Bancos de Dados    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PRIVATE aHeader[0]
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Montagem do aHeader                                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SX3")
	dbSetOrder(1)
	MsSeek("SC6")
	While ( !Eof() .And. (SX3->X3_ARQUIVO == "SC6") )
		IF ( X3USO(SX3->X3_USADO) .And. cNivel >= SX3->X3_NIVEL ) .And.;
				(	!AllTrim(SX3->X3_CAMPO)=="C6_NUM" 	.And.;
				!SX3->X3_CAMPO$"C6_QTDEMP #C6_QTDENT " .And.;
				!SX3->X3_CAMPO$"C6_RESERVA#C6_BLQ    " .And.;
				!SX3->X3_CAMPO$"C6_NFORI  #C6_SERIORI#C6_ITEMORI" .And.;
				!SX3->X3_CAMPO$"C6_LOTECTL#C6_NUMLOTE#C6_DTVALID#C6_NUMSERI#C6_LOCALIZ" )
			nUsado++
			Aadd(aHeader,{ AllTrim(X3Titulo()),;
				SX3->X3_CAMPO	,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;
				SX3->X3_VALID	,;
				SX3->X3_USADO	,;
				SX3->X3_TIPO	,;
				SX3->X3_ARQUIVO,;
				SX3->X3_CONTEXT } )
		EndIf
		dbSelectArea("SX3")
		dbSkip()
	EndDo
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Montagem do aCols                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	PRIVATE aCOLS[1][nUsado+1]
	For nCntFor	:= 1 To nUsado
		aCols[1][nCntFor] := CriaVar(aHeader[nCntFor][2])
		If ( AllTrim(aHeader[nCntFor][2]) == "C6_ITEM" )
			aCols[1][nCntFor] := "01"
		EndIf
	Next nCntFor
	aCOLS[1][Len(aHeader)+1] := .F.
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Rotina de inclusao automatica                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( Type("l410Auto") <> "U" .And. l410Auto )
		MsAuto2Acols()
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Estabelece a Troca de Clientes conforme o Tipo do Pedido de Venda      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( M->C5_TIPO $ "DB" )
		aTrocaF3 := {{"C5_CLIENTE","SA2"}}
	Else
		aTrocaF3 := {}
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se eh rotina de inclusao automatica          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( Type("l410Auto") == "U" .or. ! l410Auto )
		aSize := MsAdvSize()
		aObjects := {}
		AAdd( aObjects, { 100, 100, .T., .T. } )
		AAdd( aObjects, { 100, 100, .T., .T. } )
		AAdd( aObjects, { 100, 015, .T., .F. } )
		aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
		aPosObj := MsObjSize( aInfo, aObjects )
		aPosGet := MsObjGetPos(aSize[3]-aSize[1],315,{{003,033,160,200,240,263}})
		nGetLin := aPosObj[3,1]
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Armazenar dados do Pedido anterior.                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DEFINE MSDIALOG oDlg TITLE cCadastro From aSize[7],0 to aSize[6],aSize[5] of oMainWnd PIXEL

		oGetPV:=MSMGet():New( "SC5", nReg, nOpc, , , , , APOSOBJ[1],,3)
//		@ nGetLin,aPosGet[1,1] SAY OemToAnsi(IIF(M->C5_TIPO$"DB",STR0008,STR0009)) SIZE 020,09 PIXEL //"Fornec.:"###"Cliente: "
		@ nGetLin,aPosGet[1,2] SAY oSAY1 VAR Space(40)						SIZE 120,09 PICTURE "@!"	OF oDlg PIXEL
		@ nGetLin,aPosGet[1,3] SAY OemToAnsi(STR0011)						SIZE 020,09 OF oDlg PIXEL	//"Total :"
		@ nGetLin,aPosGet[1,4] SAY oSAY2 VAR 0 PICTURE TM(0,16,Iif(cPaisloc=="CHI",NIL,nNumDec))		SIZE 050,09 OF oDlg PIXEL
		@ nGetLin,aPosGet[1,5] SAY OemToAnsi(STR0012)						SIZE 030,09 OF oDlg PIXEL 	//"Desc. :"
		@ nGetLin,aPosGet[1,6] SAY oSAY3 VAR 0 PICTURE TM(0,16,Iif(cPaisloc=="CHI",NIL,nNumDec))		SIZE 050,09 OF oDlg PIXEL RIGHT
		@ nGetLin+10,aPosGet[1,5] SAY OemToAnsi("=")							SIZE 020,09 OF oDlg PIXEL
		@ nGetLin+10,aPosGet[1,6] SAY oSAY4 VAR 0								SIZE 050,09 PICTURE TM(0,16,Iif(cPaisloc=="CHI",NIL,nNumDec)) OF oDlg PIXEL	 RIGHT
		oDlg:Cargo	:= {|c1,n2,n3,n4| oSay1:SetText(c1),;
			oSay2:SetText(n2),;
			oSay3:SetText(n3),;
			oSay4:SetText(n4) }
		SetKey(VK_F4,{||A440Stok(NIL,"A410")})
		oGetd:=MsGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],nOpc,"Ma410GrvIt","A410TudOk","+C6_ITEM/C6_Local/C6_TES/C6_CF/C6_PEDCLI",.T.,,1,,1200)
		If Type("lCodBarra")<>"U"
			oGetd:oBrowse:bGotFocus:={|| IIF(lCodBarra .And. !lM410Bar,a410EntraBarra(oGetD),IIF(lCodBarra .And. lM410Bar,Execblock("M410CODBAR",.F.,.F.,{nOpc,oGetD}),))}
		EndIf
		Private oGetDad:=oGetd
		Ma410Rodap(oGetd)
		ACTIVATE MSDIALOG oDlg ON INIT Ma410Bar(oDlg,{||nOpcA:=1,If(oGetd:TudoOk(),If(!obrigatorio(aGets,aTela),nOpcA:=0,oDlg:End()),nOpcA:=0)},{||oDlg:End()},nOpc,oGetD,nTotalPed,@aRecnoSE1RA,@aHeadAGG,@aColsAGG)
		SetKey(VK_F4,)
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Variaveis utilizadas pela rotina de inclusao automatica     ³
		//³ aValidGet                                                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aValidGet := {}
		nOpcA := 1
		If ! SC5->(MsVldGAuto(aValidGet)) // consiste os gets
			nOpcA := 0
		EndIf
		If (nOpcA == 0) .or. !(SC6->(MsVldAcAuto(aValidGet,"A410LinOk(o)","A410TudOk()")))   // consiste o campos do Acols
			nOpcA := 0
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Efetua a Gravacao do Pedido de Venda                                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	nPProduto := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
	For nCntfor := 1 To Len(aCols)
		If ( Empty(aCols[nCntFor][nPProduto]) )
			aCols[nCntFor][nUsado+1] := .T.
		EndIf
		If ( !aCols[nCntfor][nUsado+1] )
			lGravou := .T.
		EndIf
	Next nCntFor
	If ( nOpcA == 1 .And. lGravou )
		While GetSX8Len() > nStack 
			ConfirmSX8()
		EndDo
		EvalTrigger()
	Else
		For nCntFor := 1 To Len(aCols)
			If ( !aCols[nCntFor][nUsado+1] )
				aCols[nCntFor][nUsado+1] := .T.
				n := nCntFor
				Ma410GrvIt()
			EndIf
		Next nCntFor
		While GetSX8Len() > nStack 
			RollBackSx8()
		EndDo
	EndIf
	If ( lGravou )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Grava arquivo SC5 (Cabec.do pedido de Venda)        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SC5")
		dbSetOrder(1)
		If ( !MsSeek(xFilial("SC5")+M->C5_NUM) )
			RecLock("SC5",.T.)
		Else
			RecLock("SC5")
		EndIf
		For nCntFor := 1 TO FCount()
			If "FILIAL"$FieldName(nCntFor)
				FieldPut(nCntFor,xFilial("SC5"))
			ElseIf (("TABELA" $ FieldName(nCntFor)) .And. (M->&(EVAL(bCampo,nCntFor)) == PadR("1",Len(DA0->DA0_CODTAB))))
				FieldPut(nCntFor,"")
			Else
				FieldPut(nCntFor,M->&(EVAL(bCampo,nCntFor)))
			EndIf
		Next nCntFor
		MsUnLock()
	EndIf
	dbSelectArea("SC6")
	dbSetOrder(1)
	If ( !MsSeek(xFilial("SC6")+M->C5_NUM) )
		dbSelectArea("SC5")
		dbSetOrder(1)
		If ( MsSeek(xFilial("SC5")+M->C5_NUM) )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava os lancamentos nas contas orcamentarias SIGAPCO    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PcoDetLan("000100","04","MATA410")

			RecLock("SC5")
			dbDelete()
			MsUnLock()
		EndIf
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Restaura a Integridade da Tela de Entrada                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea(cAlias)
EndIf
Return( nOpcA )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A410AltRap³ Autor ³ Claudinei M. Benzi    ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa exclusivo ao MATA410 para alteracao               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ Void A410AltRap(ExpC1,ExpN1)                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                   ³±±
±±³          ³ ExpN1 = Numero do registro                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Mata410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410AltRap(cAlias,nReg,nOpc)

Local bCampo	:= { |nCPO| Field(nCPO) }
Local nOpcA		:= 0

Local lLiber 	:= .F.
Local lTransf	:= .F.
Local cCampo	:=""
Local lContinua:= .T.
Local nUsado   := 0
Local nCntFor  := 0
Local nTotalPed:= 0
Local nTotalDes:= 0
Local lGrade	:= MaGrade()
Local lBloqueio:= .T.
Local aLiberado:= {}
Local nPIdentB6:= 0
Local nPNfOrig := 0
Local nPSerOrig:= 0
Local nPItOrig := 0
Local nAux		:= 0
Local lNaoFatur:= .F.

Local lQuery   := .F.
Local cArqQry  := ""
Local oDlg
Local oGetd
Local oSAY1
Local oSAY2
Local oSAY3
Local oSAY4
Local nNumDec := TamSX3("C6_VALOR")[2]
Local aPosObj   := {}
Local aObjects  := {}
Local aSize     := {}
Local aPosGet   := {}
Local nGetLin   := 0
Local aRecnoSE1RA := {} // Array com os titulos selecionados pelo Adiantamento
Local aHeadAGG    := {}
Local aColsAGG    := {}

#IFDEF TOP
	Local cQuery     := ""
#ENDIF 	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas na LinhaOk                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aCols    	:= {}
PRIVATE aHeader  	:= {}
PRIVATE aAlterado := {}  
If FindFunction("MsMatGrade") .And. IsAtNewGrd()
	PRIVATE oGrade	  := MsMatGrade():New('oGrade',,"C6_QTDVEN", ,"a410GValid()",{ {VK_F4,{|| A440Saldo(.T.,oGrade:aColsAux[oGrade:nPosLinO][aScan(oGrade:aHeadAux,{|x| AllTrim(x[2])=="C6_LOCAL"})] )}} }) 
Else
	PRIVATE aColsGrade:= {}
	PRIVATE aHeadgrade:= {}
EndIf

PRIVATE oGetPV 	:= Nil

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta a entrada de dados do arquivo                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aTELA[0][0],aGETS[0]
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carrega perguntas do MATA440 e MATA410                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte("MTA440",.F.)
lLiber := MV_PAR02 == 1
lTransf:= MV_PAR01 == 1  
Pergunte("MTA410",.F.) 
//Carrega as variaveis com os parametros da execauto
Ma410PerAut()

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variavel utilizada p/definir Op. Triangulares.       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
IsTriangular( MV_PAR03==1 )
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Salva a integridade dos campos de Bancos de Dados    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cAlias)
IF ( (ExistBlock("M410ALOK")) )
	If (! ExecBlock("M410ALOK",.F.,.F.) )
		lContinua := .F.
	EndIf
EndIf

IF ( SC5->C5_FILIAL <> xFilial("SC5") )
	Help(" ",1,"A000FI")
	lContinua := .F.
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Salva a integridade dos campos de Bancos de Dados    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cAlias)
#IFDEF TOP
	TcSrvMap("SC5")
	dbGoto(RecNo())
#ENDIF
If !SoftLock(cAlias)
	lContinua := .F.
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Inicializa desta forma para criar uma nova instancia de variaveis private ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RegToMemory( "SC5", .F., .F. )

dbSelectArea("SX3")
dbSetOrder(1)
MsSeek("SC6")
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Montagem do aHeader                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
While ( !EOF() .And. (SX3->X3_ARQUIVO == "SC6") )
	If (	X3USO(SX3->X3_USADO) .And.;
			!( Trim(SX3->X3_CAMPO) == "C6_NUM" );
			.And. Trim(x3_campo) <> "C6_QTDEMP";
			.And. Trim(x3_campo) <> "C6_QTDENT";
			.And. cNivel >= SX3->X3_NIVEL )
		nUsado++
		Aadd(aHeader,{ TRIM(X3Titulo()),;
			SX3->X3_CAMPO,;
			SX3->X3_PICTURE,;
			SX3->X3_TAMANHO,;
			SX3->X3_DECIMAL,;
			SX3->X3_VALID,;
			SX3->X3_USADO,;
			SX3->X3_TIPO,;
			SX3->X3_ARQUIVO,;
			SX3->X3_CONTEXT } )
		If ( AllTrim(SX3->X3_CAMPO)=="C6_IDENTB6" )
			nPIdentB6 := nUsado
		EndIf
		If ( AllTrim(SX3->X3_CAMPO)=="C6_NFORI" )
			nPNfOrig := nUsado
		EndIf
		If ( AllTrim(SX3->X3_CAMPO)=="C6_SERIORI" )
			nPSerOrig:= nUsado
		EndIf
		If ( AllTrim(SX3->X3_CAMPO)=="C6_ITEMORI" )
			nPItOrig := nUsado
		EndIf
	EndIf
	dbSelectArea("SX3")
	dbSkip()
EndDo
If ( lContinua )
	dbSelectArea("SC6")
	dbSetOrder(1)
	#IFDEF TOP
		If ( TcSrvType()<>"AS/400" )
			cArqQry := "MATA410"
			lQuery  := .T.
			cQuery := "SELECT SC6.*,R_E_C_N_O_ SC6RECNO "
			cQuery += "FROM "+RetSqlName("SC6")+" SC6 "
			cQuery += "WHERE SC6.C6_FILIAL='"+xFilial("SC6")+"' AND "
			cQuery += "SC6.C6_NUM='"+SC5->C5_NUM+"' AND "
			cQuery += "SC6.D_E_L_E_T_<>'*' "
			cQuery += "ORDER BY "+SqlOrder(SC6->(IndexKey()))

			cQuery := ChangeQuery(cQuery)

			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cArqQry,.T.,.T.)
			For nCntFor := 1 To Len(aHeader)
				If ( aHeader[nCntFor,8]<>"C" .And. aHeader[nCntFor,10] <>  "V" )
					TcSetField(cArqQry,AllTrim(aHeader[nCntFor][2]),aHeader[nCntFor,8],aHeader[nCntFor,4],aHeader[nCntFor,5])
				EndIf
			Next nCntFor
		Else
	#ENDIF
		cArqQry := "SC6"
		MsSeek(xFilial("SC6")+SC5->C5_NUM)
		#IFDEF TOP
		EndIf
		#ENDIF
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem do aCols                                    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	While ( !Eof() .And. (cArqQry)->C6_FILIAL	== xFilial("SC6") .And.;
			(cArqQry)->C6_NUM 	== SC5->C5_NUM		.And.;
			lContinua )
		
		dbSelectArea("SF4")
		dbSetOrder(1)
		dbSeek(xFilial("SF4")+(cArqQry)->C6_TES)
		If ( (cArqQry)->C6_QTDENT < (cArqQry)->C6_QTDVEN .AND. SF4->F4_QTDZERO <> "1" ) .OR. ;
			((cArqQry)->C6_QTDENT == (cArqQry)->C6_QTDVEN .AND. SF4->F4_QTDZERO == "1" .AND. Empty((cArqQry)->C6_NOTA))
			lNaoFatur := .T.
		EndIf
		If !(("R"$Alltrim((cArqQry)->C6_BLQ)).And.(SuperGetMv("MV_RSDOFAT")=="N")) .And. (cArqQry)->C6_QTDENT < (cArqQry)->C6_QTDVEN
			lBloqueio := .F.
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica se este item foi digitada atraves de uma    ³
		//³ grade, se for junta todos os itens da grade em uma   ³
		//³ referencia , abrindo os itens so quando teclar enter ³
		//³ na quantidade                                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( (cArqQry)->C6_GRADE == "S" .And. lGrade )
			a410Grade(.T.,,cArqQry)
		Else
			AADD(aCols,Array(Len(aHeader)+1))
			For nCntFor := 1 To Len(aHeader)
				cCampo := Alltrim(aHeader[nCntFor,2])
				If ( aHeader[nCntFor,10] # "V" )
					aCols[Len(aCols)][nCntFor] := FieldGet(FieldPos(cCampo))
				Else
					If ( lQuery )
						SC6->(MsGoto((cArqQry)->SC6RECNO))
					EndIf
					aCols[Len(aCols)][nCntFor] := CriaVar(cCampo)
				EndIf
			Next nCntFor
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Mesmo nao sendo um item digitado atraves de grade e' necessa-³
			//³ rio criar o Array referente a este item para controle da     ³
			//³ grade                                                        ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ   
			If FindFunction("MsMatGrade") .And. IsAtNewGrd()
				oGrade:MatGrdMont(Len(aCols))       
			Else
				MatGrdMont(Len(aCols))
			EndIf
		EndIf
		If ( SC5->C5_TIPO <> "D" )
			nAux := aScan(aLiberado,{|x| x[2] == aCols[Len(aCols)][nPIdentB6]})
			If ( nAux == 0 )
				aadd(aLiberado,{ (cArqQry)->C6_ITEM , aCols[Len(aCols)][nPIdentB6] , (cArqQry)->C6_QTDEMP ,(cArqQry)->C6_QTDENT})
			Else
				aLiberado[nAux][3] += (cArqQry)->C6_QTDEMP
				aLiberado[nAux][4] += (cArqQry)->C6_QTDENT
			EndIf
		Else
			nAux := aScan(aLiberado,{|x| x[1] == (cArqQry)->C6_SERIORI .And.;
				x[2] == (cArqQry)->C6_NFORI   .And.;
				x[3] == (cArqQry)->C6_ITEMORI })
			If ( nAux == 0 )
				aadd(aLiberado,{ (cArqQry)->C6_SERIORI , (cArqQry)->C6_NFORI , (cArqQry)->C6_ITEMORI , (cArqQry)->C6_QTDEMP })
			Else
				aLiberado[nAux][4] += (cArqQry)->C6_QTDEMP
			EndIf
		EndIf
		nTotalPed += (cArqQry)->C6_VALOR
		If ( (cArqQry)->C6_PRUNIT = 0 )
			nTotalDes += (cArqQry)->C6_VALDESC
		Else
			nTotalDes += ((cArqQry)->C6_PRUNIT*(cArqQry)->C6_QTDVEN)-((cArqQry)->C6_PRCVEN*(cArqQry)->C6_QTDVEN)
		EndIf
		aCols[Len(aCols)][Len(aHeader)+1] := .F.
		dbSelectArea(cArqQry)
		dbSkip()
	EndDo
	If ( lQuery )
		dbSelectArea(cArqQry)
		dbCloseArea()
		dbSelectArea("SC6")
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso nao ache nenhum item , abandona rotina.         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( Len(aCols) == 0 )
	lContinua := .F.
	Help(" ",1,"A410S/ITEM")
EndIf
If ( (ExistBlock("M410GET")) )
	ExecBlock("M410GET",.F.,.F.)
EndIf
If ( lBloqueio )
	Help(" ",1,"A410ELIM")
	lContinua := .F.
EndIf
If ((!(SuperGetMv("MV_ALTPED")=="S") .And. !lNaoFatur ) .And. !(SC5->C5_TIPO $ "CIP")) .And. !(!Empty(SC5->C5_PEDEXP) .And. SuperGetMv("MV_EECFAT") .And. FindFunction("AVINTEMB") .And. AvIntEmb())
	Help(" ",1,"A410PEDFAT")
	lContinua := .F.
EndIf

If ( lContinua )

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Faz o calculo automatico de dimensoes de objetos     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	aSize := MsAdvSize()

	aObjects := {}
	AAdd( aObjects, { 100, 100, .t., .t. } )
	AAdd( aObjects, { 100, 100, .t., .t. } )
	AAdd( aObjects, { 100, 015, .t., .f. } )	

	aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
	aPosObj := MsObjSize( aInfo, aObjects )

	aPosGet := MsObjGetPos(aSize[3]-aSize[1],315,;
		{{003,033,160,200,240,263}} )

	nGetLin := aPosObj[3,1]

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Armazenar dados do Pedido anterior.                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DEFINE MSDIALOG oDlg TITLE cCadastro From aSize[7],0 to aSize[6],aSize[5] of oMainWnd PIXEL

	IF M->C5_TIPO $ "DB"
		aTrocaF3 := {{"C5_CLIENTE","SA2"}}
	Else
		aTrocaF3 := {}
	EndIf
	oGetPV:=MSMGet():New( "SC5", nReg, nOpc, , , , , aPosObj[1], , 3)
//	@ nGetLin,aPosGet[1,1] SAY OemToAnsi(IIF(M->C5_TIPO$"DB",STR0008,STR0009))		//"Fornec.:"###"Cliente: "
//	@ nGetLin,aPosGet[1,1] SAY OemToAnsi(IIF(M->C5_TIPO$"DB",STR0008,STR0009)) SIZE 020,09 PIXEL	//"Fornec.:"###"Cliente: "
	@ nGetLin,aPosGet[1,2] SAY oSAY1 VAR Space(40)						SIZE 120,09 PICTURE "@!"	OF oDlg PIXEL
	@ nGetLin,aPosGet[1,3] SAY OemToAnsi(STR0011)						SIZE 020,09 OF oDlg PIXEL	//"Total :"
	@ nGetLin,aPosGet[1,4] SAY oSAY2 VAR 0 PICTURE TM(0,16,Iif(cPaisloc=="CHI",NIL,nNumDec))		SIZE 050,09 OF oDlg PIXEL
	@ nGetLin,aPosGet[1,5] SAY OemToAnsi(STR0012)						SIZE 030,09 OF oDlg PIXEL 	//"Desc. :"
	if cPaisLoc == "BRA"	
		@ nGetLin,aPosGet[1,6] SAY oSAY3 VAR 0 PICTURE TM(0,16,2)		SIZE 050,09 OF oDlg PIXEL RIGHT
	Else
		@ nGetLin,aPosGet[1,6] SAY oSAY3 VAR 0 PICTURE TM(0,16,Iif(cPaisloc=="CHI",NIL,nNumDec))		SIZE 050,09 OF oDlg	PIXEL RIGHT
	EndIf	
	@ nGetLin+10,aPosGet[1,5] SAY OemToAnsi("=")							SIZE 020,09 OF oDlg PIXEL
	if cPaisLoc == "BRA"
		@ nGetLin+10,aPosGet[1,6] SAY oSAY4 VAR 0								SIZE 050,09 PICTURE TM(0,16,2) OF oDlg PIXEL RIGHT
	Else
		@ nGetLin+10,aPosGet[1,6] SAY oSAY4 VAR 0								SIZE 050,09 PICTURE TM(0,16,Iif(cPaisloc=="CHI",NIL,nNumDec)) OF oDlg PIXEL RIGHT	
	EndIf
	oDlg:Cargo	:= {|c1,n2,n3,n4| oSay1:SetText(c1),;
		oSay2:SetText(n2),;
		oSay3:SetText(n3),;
		oSay4:SetText(n4) }
	Set Key VK_F4 to A440Stok(NIL,"A410")
	oGetd:=MsGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],nOpc,"A410LinOk","A410TudOk","+C6_ITEM/C6_Local/C6_TES/C6_CF/C6_PEDCLI",.T.,,1,,1200,"Ma410ItAlt()")
	Private oGetDad:=oGetd	
	Ma410Rodap(oGetD,nTotalPed,nTotalDes)
	ACTIVATE MSDIALOG oDlg ON INIT Ma410Bar(oDlg,{||nOpcA:=1,if(oGetd:TudoOk(),If(!obrigatorio(aGets,aTela),nOpcA := 0,oDlg:End()),nOpcA := 0)},{||oDlg:End()},nOpc,oGetD,nTotalPed,@aRecnoSE1RA,@aHeadAGG,@aColsAGG)
	SetKey(VK_F4,)
	If ( nOpcA == 1 )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Efetua as Alteracoes                                                    ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nCntFor := 1 To Len(aAlterado)

			N := aAlterado[nCntFor]
			Ma410GrvIt()

		Next nCntFor
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Efetua as Delecoes                                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nCntFor := 1 To Len(aCols)
			If ( aCols[nCntfor][nUsado+1] )
				N := nCntFor
				Ma410GrvIt()
			EndIf
		Next nCntFor
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Efetua a Gravacao SC5                                                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		RecLock("SC5")
		For nCntFor := 1 TO FCount()
			If "FILIAL"$FieldName(nCntFor)
				FieldPut(nCntFor,xFilial("SC5"))
			ElseIf (("TABELA" $ FieldName(nCntFor)) .And. (M->&(EVAL(bCampo,nCntFor)) == PadR("1",Len(DA0->DA0_CODTAB))))
				FieldPut(nCntFor,"")
			Else
				FieldPut(nCntFor,M->&(EVAL(bCampo,nCntFor)))
			EndIf
		Next nCntFor
		SC5->(MsUnLock())
	Else
		If ( (ExistBlock("M410ABN")) )
			ExecBlock("M410ABN",.f.,.f.)
		EndIf
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Destrava Todos os Registros                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
MsUnLockAll()
dbSelectArea(cAlias)

Return( nOpcA )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Ma410GrvIt³ Autor ³ Eduardo Riera         ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Programa exclusivo para inclusao no MATA410                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe e ³ Void Ma410GrvIt(o)                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpO1 = Objeto da getdados                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function Ma410GrvIt(o)

Local nPItem   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEM"})
Local nPProduto:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local aArea    := GetArea()
Local lRetorno := If ( o<>Nil , a410LinOk(o) , .T. )
Local lLiber   := MV_PAR02 == 1
Local lTransf  := MV_PAR01 == 1
Local nCntFor  := 0
Local bCampo   := {|n| FieldName(n)}
Local nMCusto  := 0
Local cMemo    := ''
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o Produto foi prenchido                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( Empty(aCols[n][nPProduto]) )
	aCols[n][Len(aHeader)+1] := .T.
EndIf

If ( lRetorno )
	If __lSx8
		ConfirmSX8()
	EndIf
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Grava arquivo SC5 (Cabec.do pedido de Venda)        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SC5")
	dbSetOrder(1)
	If ( !MsSeek(xFilial("SC5")+M->C5_NUM) )
		RecLock("SC5",.T.)
		For nCntFor := 1 To FCount()
			If "FILIAL"$FieldName(nCntFor)
				FieldPut(nCntFor,xFilial("SC5"))
			ElseIf (("TABELA" $ FieldName(nCntFor)) .And. (M->&(EVAL(bCampo,nCntFor)) == PadR("1",Len(DA0->DA0_CODTAB))))
				FieldPut(nCntFor,"")
			Else
				FieldPut(nCntFor,M->&(EVAL(bCampo,nCntFor)))
			EndIf
		Next nCntFor
		MsUnLock()
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Posiciona Clientes                                                      ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SA1")
	dbSetOrder(1)
	MsSeek(xFilial("SA1")+SC5->C5_CLIENTE+SC5->C5_LOJACLI)

	nMCusto := If(SA1->A1_MOEDALC > 0, SA1->A1_MOEDALC, Val(SuperGetMv("MV_MCUSTO")))
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Estorna o Item do Pedido de Venda                   ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

	dbSelectArea("SC6")
	dbSetOrder(1)
	If ( MsSeek(xFilial("SC6")+SC5->C5_NUM+aCols[n][nPItem]) )

		dbSelectArea("SF4")
		dbSetOrder(1)
		MsSeek(xFilial("SF4")+SC6->C6_TES)

		RecLock("SC6")

		If ( SF4->F4_ESTOQUE == "S" )
			dbSelectArea("SB2")
			dbSetOrder(1)
			MsSeek( xFilial( "SB2" ) + SC6->C6_PRODUTO + SC6->C6_LOCAL )

			RecLock("SB2")
			If cPaisLoc == "BRA"
				SB2->B2_QPEDVEN -= (SC6->C6_QTDVEN-SC6->C6_QTDENT-SC6->C6_QTDEMP-SC6->C6_QTDRESE	)
				SB2->B2_QPEDVE2 -= ConvUM(SB2->B2_COD, SC6->C6_QTDVEN-SC6->C6_QTDENT-SC6->C6_QTDEMP-SC6->C6_QTDRESE, 0, 2)
			Else
				If SA1->A1_TIPO <> "E"
					SB2->B2_QPEDVEN -= (SC6->C6_QTDVEN-SC6->C6_QTDENT-SC6->C6_QTDEMP-SC6->C6_QTDRESE	)
				EndIf
			EndIf
			MsUnLock()

		EndIf

		If ( SF4->F4_DUPLIC == "S" )
			nQtdVen := SC6->C6_QTDVEN - SC6->C6_QTDEMP - SC6->C6_QTDENT
			If ( nQtdVen > 0 )
				RecLock("SA1")
				SA1->A1_SALPED -= xMoeda( nQtdVen * SC6->C6_PRCVEN , SC5->C5_MOEDA , nMCusto , SC5->C5_EMISSAO )
				MsUnLock()
			EndIf
		EndIf

		dbSelectArea("SC9")
		dbSetOrder(1)
		MsSeek(xFilial("SC9")+SC6->C6_NUM+SC6->C6_ITEM)

		While ( !Eof() .And. SC9->C9_FILIAL == xFilial("SC9") .And.;
				SC9->C9_PEDIDO == SC6->C6_NUM .And.;
				SC9->C9_ITEM   == SC6->C6_ITEM )

			If ( SC9->C9_BLCRED <> "10"  .And. SC9->C9_BLEST <> "10" .And. SC9->C9_BLCRED <> "ZZ"  .And. SC9->C9_BLEST <> "ZZ")
				Begin Transaction
					a460Estorna(.T.)
				End Transaction
			EndIf

			dbSelectArea("SC9")
			dbSkip()

		EndDo

		dbSelectArea("SC6")
		If ( aCols[n][Len(aHeader)+1] )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Grava os lancamentos nas contas orcamentarias SIGAPCO    ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PcoDetLan("000100","02","MATA410")
			RecLock("SC6")
			dbDelete()
		EndIf

	Else

		If (!aCols[n][Len(aHeader)+1] )
			RecLock("SC6",.T.)
		EndIf

	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Efetua a gravacao do Item do Pedido de Venda                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ( !SC6->(Deleted()) .And. (!aCols[n][Len(aHeader)+1] ) )
		RecLock("SC6")
		For nCntfor := 1 To Len(aHeader)
			FieldPut(FieldPos(aHeader[nCntFor][2]),aCols[n][nCntFor])
		Next nCntFor
		SC6->C6_FILIAL := xFilial("SC6")
		SC6->C6_NUM    := SC5->C5_NUM
		SC6->C6_CLI    := SC5->C5_CLIENTE
		SC6->C6_LOJA   := SC5->C5_LOJACLI

		dbSelectArea("SF4")
		dbSetOrder(1)
		MsSeek(xFilial("SF4")+SC6->C6_TES)

		CriaSB2( SC6->C6_PRODUTO, SC6->C6_LOCAL )

		dbSelectArea("SB2")
		dbSetOrder(1)
		MsSeek(xFilial("SB2")+SC6->C6_PRODUTO+SC6->C6_LOCAL)

		If ( SF4->F4_ESTOQUE == "S" )
			RecLock("SB2")
			SB2->B2_QPEDVEN += (SC6->C6_QTDVEN-SC6->C6_QTDENT-SC6->C6_QTDEMP-SC6->C6_QTDRESE	)
			SB2->B2_QPEDVE2 += ConvUM(SB2->B2_COD, SC6->C6_QTDVEN-SC6->C6_QTDENT-SC6->C6_QTDEMP-SC6->C6_QTDRESE, 0, 2)
			MsUnLock()
		EndIf
		If ( SF4->F4_DUPLIC == "S" )
			nQtdVen := SC6->C6_QTDVEN - SC6->C6_QTDEMP - SC6->C6_QTDENT
			If ( nQtdVen > 0 )
				RecLock("SA1")
				SA1->A1_SALPED += xMoeda( nQtdVen * SC6->C6_PRCVEN , SC5->C5_MOEDA , nMCusto , SC5->C5_EMISSAO )
				MsUnLock()
			EndIf
		EndIf
		If ( SC6->C6_QTDLIB > 0 )
			Begin Transaction
				MaLibDoFat(SC6->(RecNo()),SC6->C6_QTDLIB,,,.T.,.T.,lLiber,lTransf)
			End Transaction
		EndIf
	EndIf
	SC6->(MsUnLock())
EndIf

RestArea(aArea)

Return(lRetorno)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma410ItAlt³ Autor ³Eduardo Riera          ³ Data ³20.08.1999³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Verifica os Itens que foram alterados                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma410ItAlt()

Local nScan := aScan(aAlterado,N)

If ( nScan == 0 )
	aadd(aAlterado,N)
EndIf

Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MA410Impos³ Autor ³ Eduardo Riera         ³ Data ³06.12.2001 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Ma410Impos( nOpc)                                            ³±±
±±³          ³Funcao de calculo dos impostos contidos no pedido de venda   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nOpc                                                        ³±±
±±³          ³ lRetTotal - Logico - Quando .T. retorna total com impostos  ³±±
±±³          ³ aRefRentab - Array - Retorna por referencia o array da aba   ³±±
±±³          ³ rentabilidade                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta funcao efetua os calculos de impostos (ICMS,IPI,ISS,etc)³±±
±±³          ³com base nas funcoes fiscais, a fim de possibilitar ao usua- ³±±
±±³          ³rio o valor de desembolso financeiro.                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function Ma410Impos( nOpc, lRetTotal, aRefRentab)
Local aArea		:= GetArea()
Local aAreaSA1	:= SA1->(GetArea())
Local aFisGet	:= {}
Local aFisGetSC5:= {}
Local aTitles   := {STR0044,STR0045,STR0080} //"Nota Fiscal"###"Duplicatas"###"Rentabilidade"
Local aDupl     := {}
Local aVencto   := {}
Local aFlHead   := { STR0046,STR0047,STR0063 } //"Vencimento"###"Valor"
Local aEntr     := {}
Local aDuplTmp  := {}
Local aNfOri    := {}
Local aRFHead   := { RetTitle("C6_PRODUTO"),RetTitle("C6_VALOR"),STR0081,STR0082,STR0083,STR0084} //"C.M.V"###"Vlr.Presente"###"Lucro Bruto"###"Margem de Contribuição(%)"
Local aRentab   := {}
Local nPLocal   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCAL"})
Local nPTotal   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALOR"})
Local nPValDesc := aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALDESC"})
Local nPPrUnit  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRUNIT"})
Local nPPrcVen  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN"})
Local nPQtdVen  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPDtEntr  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ENTREG"})
Local nPProduto := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPTES     := aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES"})
Local nPCodRet  := Iif(cPaisLoc=="EQU",aScan(aHeader,{|x| AllTrim(x[2])=="C6_CONCEPT"}),"")
Local nPNfOri   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NFORI"})
Local nPSerOri  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_SERIORI"})
Local nPItemOri := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEMORI"})
Local nPIdentB6 := aScan(aHeader,{|x| AllTrim(x[2])=="C6_IDENTB6"})
Local nPItem    := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEM"})
Local nPProvEnt := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PROVENT"})
Local nPosCfo	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_CF"})
Local nPAbatISS := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ABATISS"})
Local nPLote    := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOTECTL"})
Local nPSubLot	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMLOTE"})
Local nPClasFis := aScan(aHeader,{|x| AllTrim(x[2])=="C6_CLASFIS"})
Local nPAliqIss := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ALIQISS"})
Local nPrcMedP  := If (!Empty(SuperGetMv("MV_PRCMEDP",.F.,"")) .And. SC6->(FieldPos(GetMv("MV_PRCMEDP"))) > 0, aScan(aHeader,{|x| AllTrim(x[2])==GetMv("MV_PRCMEDP")}), 0) //Posição do campo Media Ponderada, no aHeader
Local nPSuframa := 0      
Local nUsado    := Len(aHeader)
Local nX        := 0
Local nX1       := 0
Local nAcerto   := 0
Local nPrcLista := 0
Local nValMerc  := 0
Local nDesconto := 0
Local nAcresFin := 0	// Valor do acrescimo financeiro do total do item
Local nQtdPeso  := 0
Local nRecOri   := 0
Local nPosEntr  := 0
Local nItem     := 0
Local nY        := 0 
Local nPosCpo   := 0
Local nPropLot  := 0
Local lDtEmi    := SuperGetMv("MV_DPDTEMI",.F.,.T.)
Local dDataCnd  := M->C5_EMISSAO
Local oDlg
Local oDupl
Local oFolder
Local oRentab
Local lCondVenda := .F. // Template GEM
Local aRentabil := {}
Local cProduto  := ""
Local nTotDesc  := 0
Local lSaldo    := MV_PAR04 == 1 .And. !INCLUI
Local nQtdEnt   := 0
Local lM410Ipi	:= ExistBlock("M410IPI")
Local lM410Icm	:= ExistBlock("M410ICM")
Local lM410Soli	:= ExistBlock("M410SOLI")
Local lUsaVenc  := .F.
Local lIVAAju   := .F.
Local lRastro	 := ExistBlock("MAFISRASTRO")
Local lRastroLot := .F.
Local lPParc	:=.F.
Local aSolid	:= {}
Local nLancAp	:=	0
Local aHeadCDA		:=	{}
Local aColsCDA		:=	{}
Local aTransp	:= {"",""}
Local aSaldos	:= {}
Local aInfLote	:= {}
Local a410Preco := {}  // Retorno da Project Function P_410PRECO com os novos valores das variaveis {nValMerc,nPrcLista}
Local nAcresUnit:= 0	// Valor do acrescimo financeiro do valor unitario
Local nAcresTot := 0	// Somatoria dos Valores dos acrescimos financeiros dos itens
Local dIni		:= Ctod("//") 
Local cEstado	:= SuperGetMv("MV_ESTADO") 
Local cTesVend  :=  SuperGetMv("MV_TESVEND",,"")
Local cCliPed   := "" 
Local lCfo      := .F.
Local nlValor	:= 0
Local nValRetImp:= 0
Local cImpRet 	:= ""
Local cNatureza :="" 
Local lM410FldR := .T.
Local aTotSolid := {}            
Local nValTotal := 0 //Valor total utilizado no retorno quando lRetTotal for .T.
Local nTotal	:= 0
Local nValIpiTrf	:= 0
Local nPIPITrf		:= Ascan(aHeader,{|x| Trim(x[2]) == "C6_IPITRF"})
Local aValMerc	:= {}
Local lRent      := AllTrim(FunName()) $ "MATA851|MATA852|MATA853" //Verifica se é executado pelos programas de rentabilidade
Local lContinua  := .F. 
Local aIcms	:= {}
Local nAliqISS  := 0
Local nVMercAux := 0
Local nPrcLsAux := 0
Local nPDesCab	:= 0
Local nTotPeso 	:= 0
Local nPCodIss := aScan(aHeader,{|x| AllTrim(x[2])=="C6_CODISS"})
Local nPFciCod := aScan(aHeader,{|x| AllTrim(x[2])=="C6_FCICOD"})
Local cCodOrig := ""
Local lMvFisFras := SuperGetMv("MV_FISFRAS",.F.,.F.)
Local lMvFISAUCF := SuperGetMv("MV_FISAUCF",.F.,.F.)
Local lM410Vct	 := ExistBlock("M410VCT")

Default lRetTotal := .F.
Default aRefRentab := {}

PRIVATE oLancApICMS
PRIVATE _nTotOper_ := 0		//total de operacoes (vendas) realizadas com um cliente - calculo de IB - Argentina
Private _aValItem_ := {}

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Busca referencias no SC6                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aFisGet	:= {}
dbSelectArea("SX3")
dbSetOrder(1)
MsSeek("SC6")
While !Eof().And.X3_ARQUIVO=="SC6"
	cValid := UPPER(X3_VALID+X3_VLDUSER)
	If 'MAFISGET("'$cValid
		nPosIni 	:= AT('MAFISGET("',cValid)+10
		nLen		:= AT('")',Substr(cValid,nPosIni,Len(cValid)-nPosIni))-1
		cReferencia := Substr(cValid,nPosIni,nLen)
		aAdd(aFisGet,{cReferencia,X3_CAMPO,MaFisOrdem(cReferencia)})
	EndIf
	If 'MAFISREF("'$cValid
		nPosIni		:= AT('MAFISREF("',cValid) + 10
		cReferencia	:=Substr(cValid,nPosIni,AT('","MT410",',cValid)-nPosIni)
		aAdd(aFisGet,{cReferencia,X3_CAMPO,MaFisOrdem(cReferencia)})
	EndIf
	dbSkip()
EndDo
aSort(aFisGet,,,{|x,y| x[3]<y[3]})

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Busca referencias no SC5                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aFisGetSC5	:= {}
dbSelectArea("SX3")
dbSetOrder(1)
MsSeek("SC5")
While !Eof().And.X3_ARQUIVO=="SC5"
	cValid := UPPER(X3_VALID+X3_VLDUSER)
	If 'MAFISGET("'$cValid
		nPosIni 	:= AT('MAFISGET("',cValid)+10
		nLen		:= AT('")',Substr(cValid,nPosIni,Len(cValid)-nPosIni))-1
		cReferencia := Substr(cValid,nPosIni,nLen)
		aAdd(aFisGetSC5,{cReferencia,X3_CAMPO,MaFisOrdem(cReferencia)})
	EndIf
	If 'MAFISREF("'$cValid
		nPosIni		:= AT('MAFISREF("',cValid) + 10
		cReferencia	:=Substr(cValid,nPosIni,AT('","MT410",',cValid)-nPosIni)
		aAdd(aFisGetSC5,{cReferencia,X3_CAMPO,MaFisOrdem(cReferencia)})
	EndIf
	dbSkip()
EndDo
aSort(aFisGetSC5,,,{|x,y| x[3]<y[3]})

SA4->(dbSetOrder(1))
If SA4->(dbSeek(xFilial("SA4")+M->C5_TRANSP)) 
	aTransp[01] := SA4->A4_EST
	aTransp[02] := Iif(SA4->(FieldPos("A4_TPTRANS")) > 0,SA4->A4_TPTRANS,"")
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Inicializa a funcao fiscal                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ  

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³A Consultoria Tributária, por meio da Resposta à Consulta nº 268/2004, determinou a aplicação das seguintes alíquotas nas Notas Fiscais de venda emitidas pelo vendedor remetente:                                                                         ³
//³1) no caso previsto na letra "a" (venda para SP e entrega no PR) - aplicação da alíquota interna do Estado de São Paulo, visto que a operação entre o vendedor remetente e o adquirente originário é interna;                                              ³
//³2) no caso previsto na letra "b" (venda para o DF e entrega no PR) - aplicação da alíquota interestadual prevista para as operações com o Paraná, ou seja, 12%, visto que a circulação da mercadoria se dá entre os Estado de São Paulo e do Paraná.       ³
//³3) no caso previsto na letra "c" (venda para o RS e entrega no SP) - aplicação da alíquota interna do Estado de São Paulo, uma vez que se considera interna a operação, quando não se comprovar a saída da mercadoria do território do Estado de São Paulo,³
//³ conforme previsto no art. 36, § 4º do RICMS/SP                                                                                                                                                                                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If len(aCols) > 0
	If cEstado == 'SP'
		If !Empty(M->C5_CLIENT) .And. M->C5_CLIENT <> M->C5_CLIENTE
			For nX := 1 To Len(aCols)
					If Alltrim(aCols[nX][nPTES])$ Alltrim(cTesVend)
					lCfo:= .T.
				EndIf
				Next		   	
				If lCfo		
				dbSelectArea(IIF(M->C5_TIPO$"DB","SA2","SA1"))
				dbSetOrder(1)           
				MsSeek(xFilial()+M->C5_CLIENTE+M->C5_LOJAENT)
				If Iif(M->C5_TIPO$"DB", SA2->A2_EST,SA1->A1_EST) == 'SP'
					cCliPed := M->C5_CLIENTE
				Else
					cCliPed := M->C5_CLIENT
				EndIf
			EndIf
		EndIf
	EndIf
EndIf

MaFisSave()
MaFisEnd()
aEval(aCols,{|x| nTotal += a410Arred( If(x[Len(x)],0,x[nPTotal]+(x[nPTotal]*M->C5_ACRSFIN/100)),"D2_TOTAL")})
nTotal+= (M->C5_FRETE+M->C5_DESPESA+M->C5_SEGURO)
MaFisIni(IIf(!Empty(cCliPed),cCliPed,Iif(Empty(M->C5_CLIENT),M->C5_CLIENTE,M->C5_CLIENT)),;// 1-Codigo Cliente/Fornecedor
	M->C5_LOJAENT,;		// 2-Loja do Cliente/Fornecedor
	IIf(M->C5_TIPO$'DB',"F","C"),;				// 3-C:Cliente , F:Fornecedor
	M->C5_TIPO,;				// 4-Tipo da NF
	M->C5_TIPOCLI,;		// 5-Tipo do Cliente/Fornecedor
	Nil,;
	Nil,;
	Nil,;
	Nil,;
	"MATA461",;
	Nil,;
	Nil,;
	Nil,;
	Nil,;
	Nil,;
	Nil,;
	Nil,;
	aTransp,,,M->C5_NUM,M->C5_CLIENTE,M->C5_LOJACLI,nTotal,,M->C5_TPFRETE)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Realiza alteracoes de referencias do SC5         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Len(aFisGetSC5) > 0
	dbSelectArea("SC5")
	For nY := 1 to Len(aFisGetSC5)
		If !Empty(&("M->"+Alltrim(aFisGetSC5[ny][2])))
			MaFisAlt(aFisGetSC5[ny][1],&("M->"+Alltrim(aFisGetSC5[ny][2])),,.F.)
		EndIf
	Next nY
Endif
IF cPaisLoc == "COL"
	if SC5->(FieldPos("C5_TPACTIV")) > 0
		MaFisLoad("NF_TPACTIV",AllTrim(M->C5_TPACTIV))
	endif
ENDIF
If SuperGetMV("MV_ISSXMUN",.F.,.F.)
	If !Empty(M->C5_MUNPRES)
		MaFisLoad("NF_CODMUN",AllTrim(M->C5_MUNPRES))
	EndIf
	
	If !Empty(M->C5_ESTPRES)
		MaFisLoad("NF_UFPREISS",AllTrim(M->C5_ESTPRES))
	EndIf
EndIf
//Na argentina o calculo de impostos depende da serie.
If cPaisLoc == 'ARG'
	SA1->(DbSetOrder(1))
	SA1->(MsSeek(xFilial()+IIf(!Empty(M->C5_CLIENT),M->C5_CLIENT,M->C5_CLIENTE)+M->C5_LOJAENT))
	MaFisAlt('NF_SERIENF',LocXTipSer('SA1',MVNOTAFIS))
	/*
	ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	³ Tratamento de IB para monotributistas - Argentina           ³
	³ AGIP 177/2009                                               ³
	ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
	If SA1->A1_TIPO == "M"
		dIni := (dDatabase + 1) - 365
		_nTotOper_ := RetTotOper(SA1->A1_COD,SA1->A1_LOJA,"C",dIni,dDatabase,1)
	Endif 
ElseIf cPaisLoc=="EQU"   
	SA1->(DbSetOrder(1))
	SA1->(MsSeek(xFilial()+IIf(!Empty(M->C5_CLIENT),M->C5_CLIENT,M->C5_CLIENTE)+M->C5_LOJAENT))
	cNatureza:=SA1->A1_NATUREZ
	
	lPParc:=Posicione("SED",1,xFilial("SED")+cNatureza,"ED_RATRET")=="1"	
Endif

If cPaisLoc<>"BRA"
	MaFisAlt('NF_MOEDA',M->C5_MOEDA)
EndIf	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Agrega os itens para a funcao fiscal         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If nPTotal > 0 .And. nPValDesc > 0 .And. nPPrUnit > 0 .And. nPProduto > 0 .And. nPQtdVen > 0 .And. nPTes > 0
	For nX := 1 To Len(aCols)
		nQtdPeso := 0

			nItem++
			/*
			ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			³ Tratamento de IB para monotributistas - Argentina           ³
			³ AGIP 177/2009                                               ³
			ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ*/
			If cPaisLoc == "ARG"
				If SA1->A1_TIPO == "M"
					Aadd(_aValItem_,{nItem,.F.,xmoeda(aCols[nX][nPPrcVen],SC5->C5_MOEDA ,1,)})
				Endif
			Endif
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Posiciona Registros                          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lSaldo .And. nPItem > 0
				dbSelectArea("SC6")
				dbSetOrder(1)
				MsSeek(xFilial("SC6")+M->C5_NUM+aCols[nX][nPItem]+aCols[nX][nPProduto])
				nQtdEnt := IIf(!SubStr(SC6->C6_BLQ,1,1)$"RS" .And. Empty(SC6->C6_BLOQUEI),SC6->C6_QTDENT,SC6->C6_QTDVEN)
			Else
				lSaldo := .F.
			EndIf
			
			cProduto := aCols[nX][nPProduto]
			MatGrdPrRf(@cProduto)
			SB1->(dbSetOrder(1))
			If SB1->(MsSeek(xFilial("SB1")+cProduto))
				nQtdPeso := If(lSaldo,aCols[nX][nPQtdVen]-nQtdEnt,aCols[nX][nPQtdVen])*SB1->B1_PESO
			EndIf
			If nPIdentB6 <> 0 .And. !Empty(aCols[nX][nPIdentB6])
				SD1->(dbSetOrder(4))
				If SD1->(MSSeek(xFilial("SD1")+aCols[nX][nPIdentB6]))
					nRecOri := SD1->(Recno())
				EndIf
			ElseIf nPNfOri > 0 .And. nPSerOri > 0 .And. nPItemOri > 0
				If !Empty(aCols[nX][nPNfOri]) .And. !Empty(aCols[nX][nPItemOri])
					SD1->(dbSetOrder(1))
					If SD1->(MSSeek(xFilial("SD1")+aCols[nX][nPNfOri]+aCols[nX][nPSerOri]+M->C5_CLIENTE+M->C5_LOJACLI+aCols[nX][nPProduto]+aCols[nX][nPItemOri]))
						nRecOri := SD1->(Recno())
					EndIf
				EndIf
			EndIf
				SB2->(dbSetOrder(1))
				SB2->(MsSeek(xFilial("SB2")+SB1->B1_COD+aCols[nX][nPLocal]))
				SF4->(dbSetOrder(1))
				SF4->(MsSeek(xFilial("SF4")+aCols[nX][nPTES]))
			IF nRecOri == 0 .And. SF4->(FieldPos("F4_INDVF")) > 0 .And. nPNfOri > 0 .And. nPSerOri > 0
			     SD2->(dbSetOrder(3))
			     IF SD2->(MSSeek(xFilial("SD2")+aCols[nX][nPNfOri]+aCols[nX][nPSerOri]))
			     //D2_FILIAL+D2_DOC+D2_SERIE+D2_CLIENTE+D2_LOJA+D2_COD+D2_ITEM
			         nRecOri := SD2->(Recno())
			     Endif 
			EndIf	
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Calcula o preco de lista                     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nValMerc  := If(aCols[nX][nPQtdVen]==0,aCols[nX][nPTotal],If(lSaldo,(aCols[nX][nPQtdVen]-nQtdEnt)*aCols[nX][nPPrcVen],aCols[nX][nPTotal]))
			nPrcLista := aCols[nX][nPPrUnit]
			If ( nPrcLista == 0 )
				nValMerc  := If(aCols[nX][nPQtdVen]==0,aCols[nX][nPTotal],If(lSaldo,(aCols[nX][nPQtdVen]-nQtdEnt)*aCols[nX][nPPrcVen],aCols[nX][nPTotal]))
			EndIf
			nAcresUnit:= A410Arred(aCols[nX][nPPrcVen]*M->C5_ACRSFIN/100,"D2_PRCVEN")
			nAcresFin := A410Arred(If(lSaldo,aCols[nX][nPQtdVen]-nQtdEnt,aCols[nX][nPQtdVen])*nAcresUnit,"D2_TOTAL")
			nAcresTot += nAcresFin
			nValMerc  += nAcresFin
			nDesconto := a410Arred(nPrcLista*If(lSaldo,aCols[nX][nPQtdVen]-nQtdEnt,aCols[nX][nPQtdVen]),"D2_DESCON")-nValMerc
			nDesconto := IIf(nDesconto<=0,aCols[nX][nPValDesc],nDesconto)
			nDesconto := Max(0,nDesconto)
			nPrcLista += nAcresUnit
			//Para os outros paises, este tratamento e feito no programas que calculam os impostos.
			If cPaisLoc=="BRA" .or. GetNewPar('MV_DESCSAI','1') == "2"
				nValMerc  += nDesconto
			Endif
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica a data de entrega para as duplicatas³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( nPDtEntr > 0 )
				If ( dDataCnd > aCols[nX][nPDtEntr] .And. !Empty(aCols[nX][nPDtEntr]) )
					dDataCnd := aCols[nX][nPDtEntr]
				EndIf
			Else
				dDataCnd  := M->C5_EMISSAO
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Tratamento do IVA Ajustado                   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
			SB1->(dbSetOrder(1))
			If SB1->(MsSeek(xFilial("SB1")+cProduto))
					lIVAAju := IIF(SB1->(FieldPos("B1_IVAAJU")) > 0 .And. SB1->B1_IVAAJU == '1' .And. (IIF(lRastro,lRastroLot := ExecBlock("MAFISRASTRO",.F.,.F.),Rastro(cProduto,"S"))),.T.,.F.)			   
			EndIf
			dbSelectArea("SC6")
			dbSetOrder(1)
			MsSeek(xFilial("SC6")+M->C5_NUM)
			If lIVAAju
				dbSelectArea("SC9")
				dbSetOrder(1)
				If MsSeek(xFilial("SC9")+SC6->C6_NUM+SC6->C6_ITEM)
					If ( SC9->C9_BLCRED $ "  10"  .And. SC9->C9_BLEST $ "  10")
						While ( !Eof() .And. SC9->C9_FILIAL == xFilial("SC9") .And.;
								SC9->C9_PEDIDO == SC6->C6_NUM .And.;
								SC9->C9_ITEM   == SC6->C6_ITEM )
				
							aadd(aSaldos,{SC9->C9_LOTECTL,SC9->C9_NUMLOTE,,,SC9->C9_QTDLIB})	
		
							dbSelectArea("SC9")
							dbSkip()
						EndDo
					Else
						dbSelectArea("SC6")
						dbSetOrder(1)
						MsSeek(xFilial("SC6")+M->C5_NUM)
						lUsaVenc:= If(!Empty(SC6->C6_LOTECTL+SC6->C6_NUMLOTE),.T.,(SuperGetMv('MV_LOTVENC')=='S'))
						aSaldos := SldPorLote(aCols[nX][nPProduto],aCols[nX][nPLocal],aCols[nX][nPQtdVen]/* nQtdLib*/,0/*nQtdLib2*/,SC6->C6_LOTECTL,SC6->C6_NUMLOTE,SC6->C6_LOCALIZ,SC6->C6_NUMSERI,NIL,NIL,NIL,lUsaVenc,nil,nil,dDataBase)					
					EndIf
				Else
					dbSelectArea("SC6")
					dbSetOrder(1)
					MsSeek(xFilial("SC6")+M->C5_NUM)
					lUsaVenc:= If(!Empty(SC6->C6_LOTECTL+SC6->C6_NUMLOTE),.T.,(SuperGetMv('MV_LOTVENC')=='S'))
					aSaldos := SldPorLote(aCols[nX][nPProduto],aCols[nX][nPLocal],aCols[nX][nPQtdVen]/* nQtdLib*/,0/*nQtdLib2*/,SC6->C6_LOTECTL,SC6->C6_NUMLOTE,SC6->C6_LOCALIZ,SC6->C6_NUMSERI,NIL,NIL,NIL,lUsaVenc,nil,nil,dDataBase)									
				EndIf
				For nX1 := 1 to Len(aSaldos)
					nPropLot := aSaldos[nX1][5]
					If lRastroLot
						dbSelectArea("SB8")
						dbSetOrder(5)
						If MsSeek(xFilial("SB8")+cProduto+aSaldos[nX][01])
							aadd(aInfLote,{SB8->B8_DOC,SB8->B8_SERIE,SB8->B8_CLIFOR,SB8->B8_LOJA,nPropLot})
						EndIf		
					Else				
						dbSelectArea("SB8")
						dbSetOrder(2)
						If MsSeek(xFilial("SB8")+aSaldos[nX][02]+aSaldos[nX][01])
							aadd(aInfLote,{SB8->B8_DOC,SB8->B8_SERIE,SB8->B8_CLIFOR,SB8->B8_LOJA,nPropLot})
						EndIf
					EndIf
					dbSelectArea("SF3")
					dbSetOrder(4)
					If !Empty(aInfLote)
						If MsSeek(xFilial("SF3")+aInfLote[nX1][03]+aInfLote[nX1][04]+aInfLote[nX1][01]+aInfLote[nX1][02])
							aadd(aNfOri,{SF3->F3_ESTADO,SF3->F3_ALIQICM,aInfLote[nX1][05],0})
						EndIf
					EndIf
				Next nX1
			EndIf						
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Agrega os itens para a funcao fiscal         ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			MaFisAdd(cProduto,;   	// 1-Codigo do Produto ( Obrigatorio )
				aCols[nX][nPTES],;	   	// 2-Codigo do TES ( Opcional )
				If(lSaldo,aCols[nX][nPQtdVen]-nQtdEnt,aCols[nX][nPQtdVen]),;  	// 3-Quantidade ( Obrigatorio )
				nPrcLista,;		  	// 4-Preco Unitario ( Obrigatorio )
				nDesconto,; 	// 5-Valor do Desconto ( Opcional )
				"",;	   			// 6-Numero da NF Original ( Devolucao/Benef )
				"",;				// 7-Serie da NF Original ( Devolucao/Benef )
				nRecOri,;					// 8-RecNo da NF Original no arq SD1/SD2
				0,;					// 9-Valor do Frete do Item ( Opcional )
				0,;					// 10-Valor da Despesa do item ( Opcional )
				0,;					// 11-Valor do Seguro do item ( Opcional )
				0,;					// 12-Valor do Frete Autonomo ( Opcional )
				nValMerc,;			// 13-Valor da Mercadoria ( Obrigatorio )
				0,;					// 14-Valor da Embalagem ( Opiconal )	
				,;					// 15
				,;					// 16
				Iif(nPItem>0,aCols[nX,nPItem],""),; //17
				0,;					// 18-Despesas nao tributadas - Portugal
				0,;					// 19-Tara - Portugal
				aCols[nX,nPosCfo],; // 20-CFO
				aNfOri,;            // 21-Array para o calculo do IVA Ajustado (opcional)	
				Iif(cPaisLoc=="EQU",aCols[nX,nPCodRet],""),;// 22-Codigo Retencao - Equador
				IIF(nPAbatISS>0,aCols[nX,nPAbatISS],0),; //23-Valor Abatimento ISS
				aCols[nX,nPLote],; // 24-Lote Produto
				aCols[nX,nPSubLot],;	// 25-Sub-Lote Produto
				,;
				,;
				Iif(Len(Alltrim(aCols[nX,nPClasFis]))==3,aCols[nX,nPClasFis],"")) // 28-Classificação fiscal
				
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Chamada de funcao via Project Function para manipulacao das variaveis nValMerc e nPrcLista       ³
			//³ exclusivamente para o projeto MOTOROLA, nao deve ser utilizado por clientes.                     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If FindFunction("P_410PRECO")
				a410Preco := P_410PRECO( nX , nValMerc , nPrcLista )
				If Valtype(a410Preco) == "A"
					nValMerc  := a410Preco[1]
					nPrcLista := a410Preco[2]
				EndIf
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Tratamento do IVA Ajustado                   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lIVAAju
				MaFisLoad("IT_ANFORI2", aNfOri, nItem)
		
				aSaldos :={}
				aNfOri  :={}
			EndIf	
						
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Provincia de entrega - Ingresos Brutos       ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If cPaisLoc == "ARG"
				If nPProvEnt > 0
					MaFisAlt("IT_PROVENT",aCols[nX,nPProVent],nItem)
				Endif
			Endif
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Código do Servico                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If cPaisLoc == "BRA"
				If nPCodIss > 0 .And. !Empty(aCols[nX,nPCodIss]) .And. MaFisRet(nItem,"IT_CODISS") <> aCols[nX,nPCodIss] 
					MaFisAlt("IT_CODISS",aCols[nX,nPCodIss],nItem)
				EndIf
			EndIf
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Calculo do ISS                               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
			SF4->(dbSetOrder(1))
			SF4->(MsSeek(xFilial("SF4")+aCols[nX][nPTES]))
			If (M->C5_INCISS == "N" .And. M->C5_TIPO == "N")
				If ( SF4->F4_ISS=="S" )
					If nPAliqIss > 0
						nAliqISS := IIf(aCols[nX][nPAliqIss] == 0, MaAliqISS(nItem), aCols[nX][nPAliqIss])
					Else
						nAliqISS := MaAliqISS(nItem)
					Endif
					nVMercAux := nValMerc
					nPrcLsAux := nPrcLista
					nPrcLista := a410Arred(nPrcLista/(1-(nAliqISS/100)),"D2_PRCVEN")
					nValMerc  := a410Arred(nValMerc/(1-(nAliqISS/100)),"D2_PRCVEN")
					MaFisAlt("IT_PRCUNI",nPrcLista,nItem)
					MaFisAlt("IT_VALMERC",nValMerc,nItem)
				EndIf
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Altera peso para calcular frete              ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			nTotPeso += nQtdPeso
			MaFisAlt("IT_PESO",nQtdPeso,nItem)
			MaFisAlt("IT_PRCUNI",nPrcLista,nItem)
			MaFisAlt("IT_VALMERC",nValMerc,nItem)
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica o valor do campo C6_IPITRF			³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nPIPITrf > 0 .And. Acols[nX][nPIPITrf] > 0  
				nValIpiTrf := Acols[nX][nPIPITrf]
			 	MaFisAlt("IT_PRCCF",nValIpiTrf,nItem) 
			EndIf
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica o valor do campo informado no		³
			//³parâmetro MV_PRCMEDP							³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If nPrcMedP > 0 .And. Acols[nX][nPrcMedP] > 0  
			   MaFisAlt("IT_PRCMEDP",Acols[nX][nPrcMedP],nItem) 
			EndIf
			
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Analise da Rentabilidade                     ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If SF4->F4_DUPLIC=="S"
				nTotDesc += MaFisRet(nItem,"IT_DESCONTO")
				If !aCols[nX][nUsado+1]
					nY := aScan(aRentab,{|x| x[1] == aCols[nX][nPProduto]})
					If nY == 0
						aadd(aRenTab,{aCols[nX][nPProduto],0,0,0,0,0})
						nY := Len(aRenTab)
					EndIf
					If cPaisLoc=="BRA"
						aRentab[nY][2] += (nValMerc - nDesconto)
					Else
						aRentab[nY][2] += nValMerc
					Endif
					aRentab[nY][3] += If(lSaldo,aCols[nX][nPQtdVen]-nQtdEnt,aCols[nX][nPQtdVen])*SB2->B2_CM1
				EndIf	
			Else
				If GetNewPar("MV_TPDPIND","1")=="1"
					nTotDesc += MaFisRet(nItem,"IT_DESCONTO")
				EndIf
			EndIf

			// DCL FISCAl   
			 If ExistTemplate("M460ICM")  
				_lPedDCL 	:= .T.
				_BASEICM    := MaFisRet(nItem,"IT_BASEICM")
				_ALIQICM    := MaFisRet(nItem,"IT_ALIQICM")
				_QUANTIDADE := MaFisRet(nItem,"IT_QUANT")
				_VALICM     := MaFisRet(nItem,"IT_VALICM")
				_FRETE      := MaFisRet(nItem,"IT_FRETE")
				_VALICMFRETE:= MaFisRet(nItem,"IT_ICMFRETE")
				_DESCONTO   := MaFisRet(nItem,"IT_DESCONTO")		   
				aIcmTmp 	:= ExecTemplate("M460ICM",.F.,.F., {aCols[nX],aHeader})
				If ValType(aIcmTmp) == "A"
					aIcms := aClone(aIcmTmp)
				EndIf
				If Len(aIcms) == 2                                   			
					MaFisLoad("IT_VALFECP",NoRound(aIcms[1],2),nItem) 
					MaFisLoad("IT_ALIQFECP" ,NoRound(aIcms[2],2),nItem)    					
				EndIf
				MaFisLoad("IT_BASEICM",_BASEICM,nItem)
				MaFisLoad("IT_ALIQICM",_ALIQICM,nItem)
				MaFisLoad("IT_VALICM",_VALICM,nItem)
				MaFisLoad("IT_FRETE",_FRETE,nItem)
				MaFisLoad("IT_ICMFRETE",_VALICMFRETE,nItem)
				MaFisLoad("IT_DESCONTO",_DESCONTO,nItem)
				MaFisEndLoad(nX,1) 		
			 Endif
				  
			  If ExistTemplate("M460SOLI")  
				_lPedDCL	:= .T.
				ICMSITEM    := MaFisRet(nItem,"IT_VALICM")		// variavel para ponto de entrada		
				QUANTITEM   := MaFisRet(nItem,"IT_QUANT")		// variavel para ponto de entrada
				BASEICMRET  := MaFisRet(nItem,"IT_BASESOL")	// criado apenas para o ponto de entrada
				MARGEMLUCR  := MaFisRet(nItem,"IT_MARGEM")		// criado apenas para o ponto de entrada
				aSolidTmp := ExecTemplate("M460SOLI",.F.,.F.,{aCols[nX],aHeader})
				If ValType(aSolidTmp) == "A"
					aSolid := aClone(aSolidTmp)
				EndIf
				If Len(aSolid) == 5                                   			
					MaFisLoad("IT_BASESOL",NoRound(aSolid[1],2),nItem) 
					MaFisLoad("IT_VALSOL" ,NoRound(aSolid[2],2),nItem)
					MaFisLoad("IT_ALIQSOL" ,NoRound(aSolid[3],2),nItem)
					MaFisLoad("IT_VFECPST" ,NoRound(aSolid[4],2),nItem)
					MaFisLoad("IT_ALFCST" ,NoRound(aSolid[5],2),nItem)
					MaFisEndLoad(nX,1)      					
				EndIf
			 EndIf 
		
			If aCols[nX][nUsado+1]
				MaFisDel(nItem,aCols[nX][nUsado+1])	
			  EndIf
			Aadd(aValMerc,nValMerc)
	Next nX
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Indica os valores do cabecalho               ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ]

If ( ( cPaisLoc == "PER" .Or. cPaisLoc == "COL" ) .And. M->C5_TPFRETE == "F" ) .Or. ( cPaisLoc != "PER" .And. cPaisLoc != "COL" )
	MaFisAlt("NF_PESO",nTotPeso)
	MaFisAlt("NF_FRETE",M->C5_FRETE)
EndIf
MaFisAlt("NF_VLR_FRT",M->C5_VLR_FRT)
MaFisAlt("NF_SEGURO",M->C5_SEGURO)
MaFisAlt("NF_AUTONOMO",M->C5_FRETAUT)
MaFisAlt("NF_DESPESA",M->C5_DESPESA)                 
If cPaisLoc == "PTG"
	MaFisAlt("NF_DESNTRB",M->C5_DESNTRB)
	MaFisAlt("NF_TARA",M->C5_TARA)	
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Indenizacao por valor                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If M->C5_PDESCAB > 0
	MaFisAlt("NF_DESCONTO",nPDesCab:=A410Arred((MaFisRet(,"NF_VALMERC")-nTotDesc)*M->C5_PDESCAB/100,"C6_VALOR")+MaFisRet(,"NF_DESCONTO"))	
EndIf

If M->C5_DESCONT > 0
	MaFisAlt("NF_DESCONTO",Min(MaFisRet(,"NF_VALMERC")-0.01,nPDesCab+nTotDesc+M->C5_DESCONT),/*nItem*/,/*lNoCabec*/,/*nItemNao*/,GetNewPar("MV_TPDPIND","1")=="2" )
EndIf

If lM410Ipi .Or. lM410Icm .Or. lM410Soli
	nItem := 0
	aTotSolid := {}
	For nX := 1 To Len(aCols)
		nItem++
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Ponto de Entrada M410IPI para alterar os valores do IPI referente a palnilha financeira           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lM410Ipi 
			VALORIPI    := MaFisRet(nItem,"IT_VALIPI")
			BASEIPI     := MaFisRet(nItem,"IT_BASEIPI")
			QUANTIDADE  := MaFisRet(nItem,"IT_QUANT")
			ALIQIPI     := MaFisRet(nItem,"IT_ALIQIPI")
			BASEIPIFRETE:= MaFisRet(nItem,"IT_FRETE")
			MaFisAlt("IT_VALIPI",ExecBlock("M410IPI",.F.,.F.,{ nItem }),nItem,.T.)
			MaFisLoad("IT_BASEIPI",BASEIPI ,nItem)
			MaFisLoad("IT_ALIQIPI",ALIQIPI ,nItem)
			MaFisLoad("IT_FRETE"  ,BASEIPIFRETE,nItem,"11")
			MaFisEndLoad(nItem,1)
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Ponto de Entrada M410ICM para alterar os valores do ICM referente a palnilha financeira           ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lM410Icm
			_BASEICM    := MaFisRet(nItem,"IT_BASEICM")
			_ALIQICM    := MaFisRet(nItem,"IT_ALIQICM")
			_QUANTIDADE := MaFisRet(nItem,"IT_QUANT")
			_VALICM     := MaFisRet(nItem,"IT_VALICM")
			_FRETE      := MaFisRet(nItem,"IT_FRETE")
			_VALICMFRETE:= MaFisRet(nItem,"IT_ICMFRETE")
			_DESCONTO   := MaFisRet(nItem,"IT_DESCONTO")
			ExecBlock("M410ICM",.F.,.F., { nItem } )
			MaFisLoad("IT_BASEICM" ,_BASEICM    ,nItem)
			MaFisLoad("IT_ALIQICM" ,_ALIQICM    ,nItem)
			MaFisLoad("IT_VALICM"  ,_VALICM     ,nItem)
			MaFisLoad("IT_FRETE"   ,_FRETE      ,nItem)
			MaFisLoad("IT_ICMFRETE",_VALICMFRETE,nItem)
			MaFisLoad("IT_DESCONTO",_DESCONTO   ,nItem)
			MaFisEndLoad(nItem,1)
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Ponto de Entrada M410SOLI para alterar os valores do ICM Solidario referente a palnilha financeira³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lM410Soli
			ICMSITEM    := MaFisRet(nItem,"IT_VALICM")		// variavel para ponto de entrada
			QUANTITEM   := MaFisRet(nItem,"IT_QUANT")		// variavel para ponto de entrada
			BASEICMRET  := MaFisRet(nItem,"IT_BASESOL")	    // criado apenas para o ponto de entrada
			MARGEMLUCR  := MaFisRet(nItem,"IT_MARGEM")		// criado apenas para o ponto de entrada
			aSolid := ExecBlock("M410SOLI",.f.,.f.,{nItem}) 
			aSolid := IIF(ValType(aSolid) == "A" .And. Len(aSolid) == 2, aSolid,{})
			If !Empty(aSolid)
				MaFisLoad("IT_BASESOL",NoRound(aSolid[1],2),nItem)
				MaFisLoad("IT_VALSOL" ,NoRound(aSolid[2],2),nItem)
				MaFisEndLoad(nItem,1)
					 AAdd(aTotSolid, { nItem , NoRound(aSolid[1],2) , NoRound(aSolid[2],2)} )
			Endif
		EndIf
	Next
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Realiza alteracoes de referencias do SC6         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SC6")
If Len(aFisGet) > 0
	For nX := 1 to Len(aCols)
		If Len(aCols[nX])==nUsado .Or. !aCols[nX][Len(aHeader)+1]
			For nY := 1 to Len(aFisGet)
				nPosCpo := aScan(aHeader,{|x| AllTrim(x[2])==Alltrim(aFisGet[ny][2])})
				If nPosCpo > 0
					If !Empty(aCols[nX][nPosCpo]) .and. !HasTemplate("M460ICM")  	
						MaFisAlt(aFisGet[ny][1],aCols[nX][nPosCpo],nX,.F.)
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Quando o ponto de Entrada M410SOLI retornar valores forcar o recalculo pois o MaFisAlt acima      ³
						//³recalculava os valores retornados pelo ponto anulando a sua acao.                                 ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If lM410Soli .And. !Empty(aTotSolid)
							nPosSolid := Ascan(aTotSolid,{|x| x[1] == nX })
							If nPosSolid > 0
								MaFisLoad("IT_BASESOL", aTotSolid[nPosSolid,02] ,nX )
								MaFisLoad("IT_VALSOL" , aTotSolid[nPosSolid,03] ,nX )
								MaFisEndLoad(nX,1)
							EndIf
						Endif
					Endif
				EndIf
			Next nY
		Endif
		If !(lM410Soli .And. !Empty(aTotSolid))
			MaFisAlt("IT_VALMERC",aValMerc[nX],nX)
		EndIf
	Next nX
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Realiza alteracoes de referencias do SC5 Suframa ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nPSuframa:=aScan(aFisGetSC5,{|x| x[1] == "NF_SUFRAMA"})
If !Empty(nPSuframa)
	dbSelectArea("SC5")
	If !Empty(&("M->"+Alltrim(aFisGetSC5[nPSuframa][2])))
		MaFisAlt(aFisGetSC5[nPSuframa][1],Iif(&("M->"+Alltrim(aFisGetSC5[nPSuframa][2])) == "1",.T.,.F.),nItem,.F.)
	EndIf
Endif
// MV_FISFRAS: Indica se utiliza rastreabilidade para obtencao dos dados que necessitam desta funcionalidade. 
// MV_FISAUCF: Utiliza a origem do documento original (para produtos com rastreabilidade) para efetuar os calculos.
// Mesmo tratamento feito no MATA461 - Soh alterar se nao preencher o cod FCI na SC6.
If lMvFisFras .And. lMvFISAUCF
	For nX := 1 To Len(aCols)
		If (Empty(Iif(nPFciCod > 0, aCols[nX][nPFciCod], "")) .And. (!Empty(aCols[nX][nPSubLot]) .Or. !Empty(aCols[nX][nPLote])))
			// Carrega origem da NF de entrada (FCI)
			If Rastro( aCols[nX][nPProduto] )
				SpedRastro2(aCols[nX][nPSubLot],aCols[nX][nPLote],aCols[nX][nPProduto],,0,.T.,,,,,,@cCodOrig )
			Endif
		
			If !Empty( cCodOrig )
				MaFisAlt("IT_CLASFIS",cCodOrig + Substr(aCols[nX][nPClasFis],2),nX,.F.)
			EndIf				
		EndIf
	Next nX
EndIf
If ExistBlock("M410PLNF")
	ExecBlock("M410PLNF",.F.,.F.)
EndIf
MaFisWrite(1)
//
// Template GEM - Gestao de Empreendimentos Imobiliarios
//
// Verifica se a condicao de pagamento tem vinculacao com uma condicao de venda
//
If ExistTemplate("GMCondPagto")
	lCondVenda := .F.
	lCondVenda := ExecTemplate("GMCondPagto",.F.,.F.,{M->C5_CONDPAG,} )
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Calcula os venctos conforme a condicao de pagto  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !M->C5_TIPO == "B"
	If lDtEmi
		dbSelectarea("SE4")
		dbSetOrder(1)
		MsSeek(xFilial("SE4")+M->C5_CONDPAG)
		
		If (Type("INCLUI") <> "U" .AND. Type("ALTERA") <> "U")
			lContinua := !(INCLUI.OR.ALTERA)
		endif

		If (SE4->E4_TIPO=="9".AND.(lContinua .OR. lRent)) ;
			.OR. SE4->E4_TIPO<>"9"
		
			If SFB->FB_JNS == 'J' .And. cPaisLoc == 'COL'
				 dbSelectArea("SFC")
				dbSetOrder(2)
				If dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RV0" )
					nValRetImp 	:= MaFisRet(,"NF_VALIV2")
					Do Case
						Case FC_INCDUPL == '1'
							nlValor := MaFisRet(,"NF_BASEDUP") - nValRetImp
						Case FC_INCDUPL == '2'
							nlValor :=MaFisRet(,"NF_BASEDUP") + nValRetImp
						Otherwise
							nlValor :=MaFisRet(,"NF_BASEDUP")
					EndCase
				Elseif dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RF0" )
					nValRetImp 	:= MaFisRet(,"NF_VALIV4")
					Do Case
						Case FC_INCDUPL == '1'
							nlValor := MaFisRet(,"NF_BASEDUP") - nValRetImp
						Case FC_INCDUPL == '2'
							nlValor :=MaFisRet(,"NF_BASEDUP") + nValRetImp
						Otherwise
							nlValor :=MaFisRet(,"NF_BASEDUP")
					EndCase
				Elseif dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RC0" )
					nValRetImp 	:= MaFisRet(,"NF_VALIV7")
					Do Case
						Case FC_INCDUPL == '1'
							nlValor := MaFisRet(,"NF_BASEDUP") - nValRetImp
						Case FC_INCDUPL == '2'
							nlValor :=MaFisRet(,"NF_BASEDUP") + nValRetImp
						Otherwise
							nlValor :=MaFisRet(,"NF_BASEDUP")
					EndCase
				Endif
			Else
				nlValor := MaFisRet(,"NF_BASEDUP")
			EndIf				
		
			aDupl := Condicao(nlValor,M->C5_CONDPAG,MaFisRet(,"NF_VALIPI"),dDataCnd,MaFisRet(,"NF_VALSOL"),,,nAcresTot)
			If Len(aDupl) > 0
				If ! lCondVenda
					For nX := 1 To Len(aDupl)
						nAcerto += aDupl[nX][2]
					Next nX
					aDupl[Len(aDupl)][2] += MaFisRet(,"NF_BASEDUP") - nAcerto
				EndIf
	
				aVencto := aClone(aDupl)
				For nX := 1 To Len(aDupl)
					aDupl[nX][2] := TransForm(aDupl[nX][2],PesqPict("SE1","E1_VALOR"))
				Next nX
			Endif
		Else
			aDupl := {{Ctod(""),TransForm(MaFisRet(,"NF_BASEDUP"),PesqPict("SE1","E1_VALOR"))}}
			aVencto := {{dDataBase,MaFisRet(,"NF_BASEDUP")}}
		EndIf
	Else
		nItem := 0	
		For nX := 1 to Len(aCols)
			If Len(aCols[nX])==nUsado .Or. !aCols[nX][nUsado+1]
				If nPDtEntr > 0
					nItem++
					nPosEntr := Ascan(aEntr,{|x| x[1] == aCols[nX][nPDtEntr]})
					If nPosEntr == 0
						Aadd(aEntr,{aCols[nX][nPDtEntr],MaFisRet(nItem,"IT_BASEDUP"),MaFisRet(nItem,"IT_VALIPI"),MaFisRet(nItem,"IT_VALSOL")})
					Else    
						aEntr[nPosEntr][2]+= MaFisRet(nItem,"IT_BASEDUP")
						aEntr[nPosEntr][3]+= MaFisRet(nItem,"IT_VALIPI")
						aEntr[nPosEntr][4]+= MaFisRet(nItem,"IT_VALSOL")
					EndIf
				Endif
			Endif
		 Next
		dbSelectarea("SE4")
		dbSetOrder(1)
		MsSeek(xFilial("SE4")+M->C5_CONDPAG)
		If !(SE4->E4_TIPO=="9")
			For nY := 1 to Len(aEntr)
				nAcerto  := 0
				
				If SFB->FB_JNS $ 'J/S' .And. cPaisLoc == 'COL'
					 
					 dbSelectArea("SFC")
					dbSetOrder(2)
					If dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RV0" )
						nValRetImp 	:= MaFisRet(,"NF_VALIV2")
						Do Case
							Case FC_INCDUPL == '1'
								nlValor := aEntr[nY][2] - nValRetImp
							Case FC_INCDUPL == '2'
								nlValor :=aEntr[nY][2] + nValRetImp
							Otherwise
								nlValor :=aEntr[nY][2]
						EndCase
					Elseif dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RF0" )
						nValRetImp 	:= MaFisRet(,"NF_VALIV4")
						Do Case
							Case FC_INCDUPL == '1'
								nlValor := aEntr[nY][2] - nValRetImp
							Case FC_INCDUPL == '2'
								nlValor :=aEntr[nY][2] + nValRetImp
							Otherwise
								nlValor :=aEntr[nY][2]
						EndCase
					Elseif dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RC0" )
						nValRetImp 	:= MaFisRet(,"NF_VALIV7")
						Do Case
							Case FC_INCDUPL == '1'
								nlValor := aEntr[nY][2] - nValRetImp
							Case FC_INCDUPL == '2'
								nlValor :=aEntr[nY][2] + nValRetImp
							Otherwise
								nlValor :=aEntr[nY][2]
						EndCase
					Endif
				ElseIf cPaisLoc=="EQU" .And. lPParc
					DbSelectArea("SFC")
					SFC->(dbSetOrder(2))
					If DbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RIR") //Retenção IVA
						cImpRet		:= SFC->FC_IMPOSTO
						DbSelectArea("SFB")
						SFB->(dbSetOrder(1))
						If SFB->(DbSeek(xFilial("SFB")+AvKey(cImpRet,"FB_CODIGO")))
							nValRetImp 	:= MaFisRet(,"NF_VALIV"+SFB->FB_CPOLVRO)
						 Endif       
						 DbSelectArea("SFC")
						If SFC->FC_INCDUPL == '1'
							nlValor	:=aEntr[nY][2] - nValRetImp				
						ElseIf SFC->FC_INCDUPL == '2'
							nlValor :=aEntr[nY][2] + nValRetImp
						EndIf   
					 Endif
				Else
					nlValor := aEntr[nY][2]
				EndIf
				
				
				aDuplTmp := Condicao(nlValor,M->C5_CONDPAG,aEntr[nY][3],aEntr[nY][1],aEntr[nY][4],,,nAcresTot)
				If Len(aDuplTmp) > 0
					If ! lCondVenda
						If cPaisLoc=="EQU"
							For nX := 1 To Len(aDuplTmp)
								If nX==1                            
									If SFC->FC_INCDUPL == '1'
										aDuplTmp[nX][2]+= nValRetImp
									ElseIf SFC->FC_INCDUPL == '2'
										aDuplTmp[nX][2]-= nValRetImp
									Endif										
								Endif	
							Next nX
						Else
							For nX := 1 To Len(aDuplTmp)
								nAcerto += aDuplTmp[nX][2]
							Next nX
							aDuplTmp[Len(aDuplTmp)][2] += aEntr[nY][2] - nAcerto
						Endif
					EndIf
	
					aVencto := aClone(aDuplTmp)
					For nX := 1 To Len(aDuplTmp)
						aDuplTmp[nX][2] := TransForm(aDuplTmp[nX][2],PesqPict("SE1","E1_VALOR"))
					Next nX
					aEval(aDuplTmp,{|x| Aadd(aDupl,{aEntr[nY][1],x[1],x[2]})})
				EndIf
			Next
		Else
			aDupl := {{Ctod(""),TransForm(MaFisRet(,"NF_BASEDUP"),PesqPict("SE1","E1_VALOR"))}}
			aVencto := {{dDataBase,MaFisRet(,"NF_BASEDUP")}}
		EndIf
	EndIf
Else
	aDupl := {{Ctod(""),TransForm(0,PesqPict("SE1","E1_VALOR"))}}
	aVencto := {{dDataBase,0}}
EndIf
//
// Template GEM - Gestao de empreendimentos Imobiliarios
// Gera os vencimentos e valores das parcelas conforme a condicao de venda
//
If lCondVenda 
	If ExistBlock("GMMA410Dupl")
		aVencto := ExecBlock("GMMA410Dupl",.F.,.F.,{M->C5_NUM ,M->C5_CONDPAG,dDataCnd,,MaFisRet(,"NF_BASEDUP") ,aVencto}, .F., .F.) 
	ElseIf ExistTemplate("GMMA410Dupl")
		aVencto := ExecTemplate("GMMA410Dupl",.F.,.F.,{M->C5_NUM ,M->C5_CONDPAG,dDataCnd,,MaFisRet(,"NF_BASEDUP") ,aVencto}) 
	Endif	
	aDupl := {}
	aEval(aVencto ,{|aTitulo| aAdd( aDupl ,{transform(aTitulo[1],x3Picture("E1_VENCTO")) ,transform(aTitulo[2],x3Picture("E1_VALOR"))}) })
EndIf
If lM410Vct
	aDupl := ExecBlock("M410VCT",.F.,.F.,{aDupl,MaFisRet(,"NF_BASEDUP")})
EndIf
If Len(aDupl) == 0
	aDupl := {{Ctod(""),TransForm(MaFisRet(,"NF_BASEDUP"),PesqPict("SE1","E1_VALOR"))}}
	aVencto := {{dDataBase,MaFisRet(,"NF_BASEDUP")}}
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Analise da Rentabilidade - Valor Presente    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aRentabil := a410RentPV( aCols ,nUsado ,@aRenTab ,@aVencto ,nPTES,nPProduto,nPLocal,nPQtdVen, M->C5_EMISSAO )

If cPaisLoc=="BRA" .And. AliasIndic("CDA")
	aAdd(aTitles,STR0114)	//"Lançamentos da Apuração de ICMS"
	nLancAp	:=	Len(aTitles)
EndIf

//lRetTotal quando .T. não exibe a planilha mas retorna o NF_TOTAL de MafisRet
If !lRetTotal

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Monta a tela de exibicao dos valores fiscais ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0043) FROM 09,00 TO 28,80 //"Planilha Financeira"
	oFolder := TFolder():New(001,001,aTitles,{"HEADER"},oDlg,,,, .T., .F.,315,140)
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Folder 1                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	MaFisRodape(1,oFolder:aDialogs[1],,{005,001,310,60},Nil,.T.)
	nDecimal:=MsDecimais(MaFisRet(,"NF_MOEDA"))
	If cPaisLoc <> "PTG"
		@ 070,005 SAY RetTitle("F2_FRETE")		SIZE 40,10 PIXEL OF oFolder:aDialogs[1]
		@ 070,105 SAY RetTitle("F2_SEGURO")		SIZE 40,10 PIXEL OF oFolder:aDialogs[1]
		@ 070,205 SAY RetTitle("F2_DESCONT")	SIZE 40,10 PIXEL OF oFolder:aDialogs[1]
		@ 085,005 SAY RetTitle("F2_FRETAUT")	SIZE 40,10 PIXEL OF oFolder:aDialogs[1]
		@ 085,105 SAY RetTitle("F2_DESPESA")	SIZE 40,10 PIXEL OF oFolder:aDialogs[1]
		@ 085,205 SAY RetTitle("F2_VALFAT")		SIZE 40,10 PIXEL OF oFolder:aDialogs[1]
		@ 070,050 MSGET IIF(cPaisLoc=="CHI",NoRound(MaFisRet(,"NF_FRETE"),nDecimal),MaFisRet(,"NF_FRETE"))		PICTURE PesqPict("SF2","F2_FRETE",16,2)		SIZE 50,07 PIXEL WHEN .F. OF oFolder:aDialogs[1]
		@ 070,150 MSGET IIF(cPaisLoc=="CHI",NoRound(MaFisRet(,"NF_SEGURO"),nDecimal),MaFisRet(,"NF_SEGURO") ) 	PICTURE PesqPict("SF2","F2_SEGURO",16,2)	SIZE 50,07 PIXEL WHEN .F. OF oFolder:aDialogs[1]
		@ 070,250 MSGET IIF(cPaisLoc=="CHI",NoRound(MaFisRet(,"NF_DESCONTO"),nDecimal),MaFisRet(,"NF_DESCONTO"))	PICTURE PesqPict("SF2","F2_DESCONTO",16,2)	SIZE 50,07 PIXEL WHEN .F. OF oFolder:aDialogs[1]
		@ 085,050 MSGET IIF(cPaisLoc=="CHI",NoRound(MaFisRet(,"NF_AUTONOMO"),nDecimal),MaFisRet(,"NF_AUTONOMO")	)PICTURE PesqPict("SF2","F2_FRETAUT",16,2)	SIZE 50,07 PIXEL WHEN .F. OF oFolder:aDialogs[1]
		@ 085,150 MSGET IIF(cPaisLoc=="CHI",NoRound(MaFisRet(,"NF_DESPESA"),nDecimal),MaFisRet(,"NF_DESPESA"))		PICTURE PesqPict("SF2","F2_DESPESA",16,2)	SIZE 50,07 PIXEL WHEN .F. OF oFolder:aDialogs[1]
		@ 085,250 MSGET IIF(cPaisLoc=="CHI",NoRound(MaFisRet(,"NF_BASEDUP"),nDecimal), MaFisRet(,"NF_BASEDUP"))		PICTURE PesqPict("SF2","F2_VALFAT",16,2)	SIZE 50,07 PIXEL WHEN .F. OF oFolder:aDialogs[1]
		@ 105,005 TO 106,310 PIXEL OF oFolder:aDialogs[1]
		@ 110,005 SAY OemToAnsi(STR0048)   SIZE 40,10 PIXEL OF oFolder:aDialogs[1] //"Total da Nota"
		@ 110,050 MSGET IIF(cPaisLoc=="CHI",NoRound(MaFisRet(,"NF_TOTAL"),nDecimal),MaFisRet(,"NF_TOTAL"))      PICTURE Iif(cPaisLoc=="CHI",TM(0,16,NIL),PesqPict("SF2","F2_VALBRUT",16,2))                   	SIZE 50,07 PIXEL WHEN .F. OF oFolder:aDialogs[1]	
		@ 110,270 BUTTON OemToAnsi(STR0049)			SIZE 040,11 FONT oFolder:aDialogs[1]:oFont ACTION oDlg:End() OF oFolder:aDialogs[1] PIXEL		//"Sair"
	Else 
		@ 070,005 SAY RetTitle("F2_DESCONT")	SIZE 40,10 PIXEL OF oFolder:aDialogs[1]
		@ 070,105 SAY RetTitle("F2_FRETE")		SIZE 40,10 PIXEL OF oFolder:aDialogs[1]
		@ 070,205 SAY RetTitle("F2_SEGURO")		SIZE 40,10 PIXEL OF oFolder:aDialogs[1]
		@ 085,005 SAY RetTitle("F2_DESPESA")	SIZE 40,10 PIXEL OF oFolder:aDialogs[1]
		@ 085,105 SAY RetTitle("F2_DESNTRB")	SIZE 40,10 PIXEL OF oFolder:aDialogs[1]
		@ 085,205 SAY RetTitle("F2_TARA")		SIZE 40,10 PIXEL OF oFolder:aDialogs[1]
		@ 110,005 SAY RetTitle("F2_VALFAT")		SIZE 40,10 PIXEL OF oFolder:aDialogs[1]
		@ 070,050 MSGET MaFisRet(,"NF_DESCONTO")	PICTURE PesqPict("SF2","F2_DESCONTO",16,2)	SIZE 50,07 PIXEL WHEN .F. OF oFolder:aDialogs[1]
		@ 070,150 MSGET MaFisRet(,"NF_FRETE")		PICTURE PesqPict("SF2","F2_FRETE",16,2)		SIZE 50,07 PIXEL WHEN .F. OF oFolder:aDialogs[1]
		@ 070,250 MSGET MaFisRet(,"NF_SEGURO")  	PICTURE PesqPict("SF2","F2_SEGURO",16,2)	SIZE 50,07 PIXEL WHEN .F. OF oFolder:aDialogs[1]
		@ 085,050 MSGET MaFisRet(,"NF_DESPESA")		PICTURE PesqPict("SF2","F2_DESPESA",16,2)	SIZE 50,07 PIXEL WHEN .F. OF oFolder:aDialogs[1]
		@ 085,150 MSGET MaFisRet(,"NF_DESNTRB")		PICTURE PesqPict("SF2","F2_DESNTRB",16,2)	SIZE 50,07 PIXEL WHEN .F. OF oFolder:aDialogs[1]
		@ 085,250 MSGET MaFisRet(,"NF_TARA")		PICTURE PesqPict("SF2","F2_TARA",16,2)		SIZE 50,07 PIXEL WHEN .F. OF oFolder:aDialogs[1]
		@ 110,050 MSGET MaFisRet(,"NF_BASEDUP")		PICTURE PesqPict("SF2","F2_VALFAT",16,2)	SIZE 50,07 PIXEL WHEN .F. OF oFolder:aDialogs[1]
		@ 105,005 TO 106,310 PIXEL OF oFolder:aDialogs[1]
		@ 110,105 SAY OemToAnsi(STR0048)   SIZE 40,10 PIXEL OF oFolder:aDialogs[1] //"Total da Nota"
		@ 110,150 MSGET MaFisRet(,"NF_TOTAL")      PICTURE Iif(cPaisLoc=="CHI",TM(0,16,NIL),PesqPict("SF2","F2_VALBRUT",16,2))                   	SIZE 50,07 PIXEL WHEN .F. OF oFolder:aDialogs[1]
		@ 110,270 BUTTON OemToAnsi(STR0049)			SIZE 040,11 FONT oFolder:aDialogs[1]:oFont ACTION oDlg:End() OF oFolder:aDialogs[1] PIXEL		//"Sair"
	Endif
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Folder 2                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ                                                                                                      
	If lDtEmi
		@ 005,001 LISTBOX oDupl FIELDS TITLE aFlHead[1],aFlHead[2] SIZE 310,095 	OF oFolder:aDialogs[2] PIXEL
	Else	
		@ 005,001 LISTBOX oDupl FIELDS TITLE aFlHead[3],aFlHead[1],aFlHead[2] SIZE 310,095 	OF oFolder:aDialogs[2] PIXEL
	Endif	
	oDupl:SetArray(aDupl)
	oDupl:bLine := {|| aDupl[oDupl:nAt] }
	@ 105,005 TO 106,310 PIXEL OF oFolder:aDialogs[2]
	If cPaisLoc == "BRA"
		@ 110,005 SAY RetTitle("F2_VALFAT")		SIZE 40,10 PIXEL OF oFolder:aDialogs[2]
	Else
		@ 110,005 SAY OemToAnsi(STR0051)	    SIZE 40,10 PIXEL OF oFolder:aDialogs[2]
	Endif	
	@ 110,050 MSGET MaFisRet(,"NF_BASEDUP")		PICTURE PesqPict("SF2","F2_VALFAT",16,2)	SIZE 50,07 PIXEL WHEN .F. OF oFolder:aDialogs[2]
	
	//
	// Template GEM - Gestao de empreendimentos imobiliarios
	// Manutencao dos itens da condicao de venda 
	//
	If ExistBlock("GMMA410CVND",,.T.)
		If ExistBlock("GMMA410Dupl")
			@ 110,170 BUTTON OemToAnsi("Cond. de Venda") SIZE 050,11 FONT oFolder:aDialogs[1]:oFont ;
						 ACTION ( ExecBlock("GMMA410CVND",.F.,.F.,{nOpc ,M->C5_NUM ,M->C5_CONDPAG ,dDataCnd ,MaFisRet(,"NF_BASEDUP")}) ;
									,aVencto := ExecBlock("GMMA410Dupl",.F.,.F.,{M->C5_NUM ,M->C5_CONDPAG,dDataCnd,,MaFisRet(,"NF_BASEDUP"),aVencto}) ;
									,( aDupl := {} ,aEval(aVencto ,{|aTitulo| aAdd( aDupl ,{transform(aTitulo[1],x3Picture("E1_VENCTO")) ,transform(aTitulo[2],x3Picture("E1_VALOR"))})}) ;
									,aRentabil := a410RentPV( aCols ,nUsado ,@aRenTab ,@aVencto ,nPTES,nPProduto,nPLocal,nPQtdVen, M->C5_EMISSAO ) );
									,(oDupl:SetArray(aDupl),	oDupl:bLine := {|| aDupl[oDupl:nAt] }) ;
									,(oRentab:SetArray(aRentabil) ,oRentab:bLine := {|| aRentabil[oRenTab:nAt] }) ) ;
						 OF oFolder:aDialogs[2] PIXEL
		EndIf
	Else
		If ExistTemplate("GMMA410CVND",,.T.) .AND. HasTemplate("LOT")
			If ExistTemplate("GMMA410Dupl")
				@ 110,170 BUTTON OemToAnsi("Cond. de Venda") SIZE 050,11 FONT oFolder:aDialogs[1]:oFont ;
							 ACTION ( ExecTemplate("GMMA410CVND",.F.,.F.,{nOpc ,M->C5_NUM ,M->C5_CONDPAG ,dDataCnd ,MaFisRet(,"NF_BASEDUP")}) ;
										,aVencto := ExecTemplate("GMMA410Dupl",.F.,.F.,{M->C5_NUM ,M->C5_CONDPAG,dDataCnd,,MaFisRet(,"NF_BASEDUP"),aVencto}) ;
										,( aDupl := {} ,aEval(aVencto ,{|aTitulo| aAdd( aDupl ,{transform(aTitulo[1],x3Picture("E1_VENCTO")) ,transform(aTitulo[2],x3Picture("E1_VALOR"))})}) ;
										,aRentabil := a410RentPV( aCols ,nUsado ,@aRenTab ,@aVencto ,nPTES,nPProduto,nPLocal,nPQtdVen, M->C5_EMISSAO ) );
										,(oDupl:SetArray(aDupl),	oDupl:bLine := {|| aDupl[oDupl:nAt] }) ;
										,(oRentab:SetArray(aRentabil) ,oRentab:bLine := {|| aRentabil[oRenTab:nAt] }) ) ;
							 OF oFolder:aDialogs[2] PIXEL
			EndIf
		EndIf
	Endif
	@ 110,270 BUTTON OemToAnsi(STR0049)			SIZE 040,11 FONT oFolder:aDialogs[1]:oFont ACTION oDlg:End() OF oFolder:aDialogs[2] PIXEL	//"Sair"
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Folder 3                                     ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	@ 005,001 LISTBOX oRentab FIELDS TITLE aRFHead[1],aRFHead[2],aRFHead[3],aRFHead[4],aRFHead[5],aRFHead[6] SIZE 310,095 	OF oFolder:aDialogs[3] PIXEL
	@ 110,270 BUTTON OemToAnsi(STR0049)			SIZE 040,11 FONT oFolder:aDialogs[3]:oFont ACTION oDlg:End() OF oFolder:aDialogs[3] PIXEL		//"Sair"
	If Empty(aRentabil)
		aRentabil   := {{"",0,0,0,0,0}}
	EndIf
	oRentab:SetArray(aRentabil)
	oRentab:bLine := {|| aRentabil[oRentab:nAt] }
	
	If cPaisLoc=="BRA" .And. AliasIndic("CDA")
		oLancApICMS := A410LAICMS(oFolder:aDialogs[nLancAp],{005,001,310,095},@aHeadCDA,@aColsCDA,.T.,.F.)
		@ 110,270 BUTTON OemToAnsi(STR0049)			SIZE 040,11 FONT oFolder:aDialogs[nLancAp]:oFont ACTION oDlg:End() OF oFolder:aDialogs[nLancAp] PIXEL		//"Sair"
	EndIf
	 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Ponto de entrada para inibir o Folder Rentabilidade ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If ExistBlock("M410FLDR") 
		lM410FldR := ExecBlock("M410FLDR",.F.,.F.)
		If ValType(lM410FldR) == "L" 
			oFolder:aDialogs[3]:lActive:= lM410FldR  
		EndIf
	EndIf

	ACTIVATE MSDIALOG oDlg CENTERED ON INIT CursorArrow()
Else
	nValTotal := MaFisRet(,"NF_TOTAL")
EndIf

MaFisEnd()
MaFisRestore()

RestArea(aAreaSA1)
RestArea(aArea)

aRefRentab := aRentabil

If SuperGetMv("MV_RSATIVO",.F.,.F.)
	lPlanRaAtv := .T.
EndIf

If !lRetTotal
	Return(.T.)
Else
	Return(nValTotal)
EndIf


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma410Track³ Autor ³ Sergio Silveira       ³ Data ³18/12/2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Faz o tratamento da chamada do System Tracker              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ .T.                                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function A410Track()

Local aEnt     := {}
Local cPedido  := M->C5_NUM
Local nPosItem := GDFieldPos( "C6_ITEM" )
Local nLoop    := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Inicializa a funcao fiscal                   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nLoop := 1 To Len( aCols )
	AAdd( aEnt, { "SC6", cPedido + aCols[ nLoop, nPosItem ] } )
Next nLoop

MaTrkShow( aEnt )

Return( .T. )


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³A410Devol³ Autor ³ Henry Fila             ³ Data ³ 07-09-2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Programa de Consulta de Historicos da Revisao.               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpC1 = Alias do arquivo                                     ³±±
±±³          ³ ExpN1 = Numero do registro                                   ³±±
±±³          ³ ExpN2 = Numero da opcao selecionada                          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Generico                                                     ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410Devol(cAlias,nReg,nOpcx)

Static oNoMarked:= LoadBitmap(GetResources(),'LBNO')
Static oMarked	:= LoadBitmap(GetResources(),'LBOK') 

Local oDlgEsp
Local oLbx
Local lFornece  := .F.
Local aRotina	:= {{OemtoAnsi(STR0053),"A410ProcDv",0,4}}
Local nOpca     := 0
Local aHSF1     := {}
Local aSF1      := {}
Local aCpoSF1   := {}
Local dDataDe   := CToD('  /  /  ')
Local dDataAte  := CToD('  /  /  ')
Local nCnt      := 0
Local nPosDoc   := 0
Local nPosSerie := 0
Local cDocSF1   := ''
Local cIndex    := ''
Local cQuery    := ''
Local cAliasSF1 := ''

Private cFornece := CriaVar("F1_FORNECE",.F.)
Private cLoja    := CriaVar("F1_LOJA",.F.)

Private lForn    := .T.

If Inclui
	//-- Valida filtro de retorno de doctos fiscais.
	If A410FRet(@lFornece,@dDataDe,@dDataAte,@lForn)
		If lFornece
			Aadd( aHSF1, ' ' )
			SX3->(DbSetOrder(1))
			SX3->(DbSeek("SF1"))
			While SX3->(!Eof()) .And. SX3->X3_ARQUIVO == "SF1" 
				If  SX3->X3_BROWSE == "S" .And. SX3->X3_CONTEXT <> "V"
					Aadd( aHSF1, X3Titulo() )
					Aadd( aCpoSF1, SX3->X3_CAMPO )
					//-- Armazena a posicao do documento e serie
					If AllTrim(SX3->X3_CAMPO) == 'F1_DOC'
						nPosDoc := Len(aHSF1)
					ElseIf AllTrim(SX3->X3_CAMPO) == 'F1_SERIE'
						nPosSerie := Len(aHSF1)
					EndIf
				EndIf
				SX3->(DbSkip())	
			EndDo
			//-- Retorna as notas que atendem o filtro.
			aSF1 := A410RetNF(aCpoSF1,dDataDe,dDataAte,lForn,lFornece)
			If !Empty(aSF1)
				DEFINE MSDIALOG oDlgEsp TITLE OemToAnsi(STR0098) FROM 00,00 TO 330,600 PIXEL //-- Retorno de Doctos. de Entrada
					oLbx:= TWBrowse():New( 012, 000, 300, 140, NIL, ;
														aHSF1, NIL, oDlgEsp, NIL, NIL, NIL,,,,,,,,,, "ARRAY", .T. )
					oLbx:SetArray( aSF1 )
					oLbx:bLDblClick  := { || { A410SelIt(oLbx:nAT,aSF1,cFornece,cLoja,nPosDoc,nPosSerie),oLbx:DrawSelect() }}			
					oLbx:bLine := {|| aSF1[oLbx:nAT]}
				ACTIVATE MSDIALOG oDlgEsp ON INIT EnchoiceBar(oDlgEsp,{|| Iif(A410Check(aSF1),nOpca := 1,), Iif(nOpca == 1,oDlgEsp:End(), MsgInfo(STR0187))},{||oDlgEsp:End()}) CENTERED
				//-- Processa Devolucao
				If nOpca == 1
					For nCnt := 1 To Len(aSF1)
						If aSF1[nCnt,1] == oMarked
							#IFDEF TOP
								cDocSF1 += "( SD1.D1_DOC = '" + aSF1[nCnt,nPosDoc] + "' AND SD1.D1_SERIE = '" + aSF1[nCnt,nPosSerie] + "' ) OR "
							#ELSE
								cDocSF1 += "( SD1->D1_DOC == '" + aSF1[nCnt,nPosDoc] + "' .And. SD1->D1_SERIE == '" + aSF1[nCnt,nPosSerie] + "' ) .Or. "
							#ENDIF
						EndIf
					Next nCnt
					If !Empty(cDocSF1)
						#IFDEF TOP
							cDocSF1 := SubStr(cDocSF1,1,Len(cDocSF1)-3) + " )"
						#ELSE
							cDocSF1 := SubStr(cDocSF1,1,Len(cDocSF1)-5) + " )"
						#ENDIF
					EndIf
					A410ProcDv(cAlias,nReg,nOpcx,lFornece,cFornece,cLoja,cDocSF1)
				EndIf
			Else
				Aviso(OemToAnsi(STR0014),OemToAnsi(STR0101),{OemToAnsi(STR0040)}, 2) //-- //"Atencao!"###"Nenhum documento encontrado, favor verificar os dados informados  ..."###"Ok"
			EndIf
		Else		
			DbSelectArea("SF1")
			cIndex := CriaTrab(NIL,.F.)
			cQuery := " SF1->F1_FILIAL == '" + xFilial("SF1") + "' "
			cQuery += " .And. SF1->F1_FORNECE == '" + cFornece + "' "
			cQuery += " .And. SF1->F1_LOJA    == '" + cLoja    + "' "
			cQuery += " .And. DtoS(SF1->F1_EMISSAO) >= '" + DtoS(dDataDe)  + "'"
			cQuery += " .And. DtoS(SF1->F1_EMISSAO) <= '" + DtoS(dDataAte) + "' "
			If lForn
				cQuery += " .And. !(SF1->F1_TIPO $ 'DB') "
			Else
				cQuery += " .And. SF1->F1_TIPO $ 'DB'
			EndIf
			
			If Existblock("A410RNF")
					cQuery := ExecBlock("A410RNF",.F.,.F.,{dDataDe,dDataAte,lForn,lFornece})
			EndIf
			
			IndRegua("SF1",cIndex,SF1->(IndexKey()),,cQuery)
			
			If SF1->(!Eof())
				MaWndBrowse(0,0,300,600,OemToAnsi(STR0098),"SF1",,aRotina,,,,.T.,,,,,,.F.) 
			Else
				Aviso(OemToAnsi(STR0014),OemToAnsi(STR0101),{OemToAnsi(STR0040)}, 2) //-- //"Atencao!"###"Nenhum documento encontrado, favor verificar os dados informados  ..."###"Ok"
			EndIf
			RetIndex( "SF1" )
			FErase( cIndex+OrdBagExt() )
		EndIf		
	EndIf
EndIf

Inclui := !Inclui

Return .T.


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³a410ProcDv³Autor  ³Henry Fila             ³ Data ³07.09.2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Alias do cabecalho do pedido de venda                ³±±
±±³          ³ExpN2: Recno do cabecalho do pedido de venda                ³±±
±±³          ³ExpN3: Opcao do arotina                                     ³±±
±±³          ³ExpL3: Se traz baseado em uma entrada (SF1)                 ³±±
±±³          ³       .T. - Se baseia na nota fiscal de entrada            ³±±
±±³          ³       .F. - Copia um pedido de venda Normal                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a interface com o usua³±±
±±³          ³rio e o pedido de vendas                                    ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function A410ProcDv(cAlias,nReg,nOpc,lFornece,cFornece,cLoja,cDocSF1)

Local aArea     := GetArea()
Local aAreaSX3  := SX3->(GetArea())
Local aAreaSF1  := SF1->(GetArea())
Local aAreaSD1  := SD1->(GetArea())
Local aAreaSB8  := SB8->(GetArea())
Local aPosObj   := {}
Local aObjects  := {}
Local aSize     := {}
Local aPosGet   := {}
Local aRegSC6   := {}
Local aRegSCV   := {}
Local aInfo     := {}
Local aHeadSC6  := {}
Local aValor    := {}

Local lLiber 	:= .F.
Local lTransf	:= .F.
Local lQuery    := .F.
Local lContinua := .T.
Local lPoder3   := .T. 
Local lM410PcDv := ExistBlock("M410PCDV")
Local nOpcA		:= 0
Local nUsado    := 0
Local nCntFor   := 0
Local nTotalPed := 0
Local nTotalDes := 0
Local nNumDec   := TamSX3("C6_VALOR")[2]
Local cItem		:= StrZero(0,TamSX3("C6_ITEM")[1])
Local nGetLin   := 0
Local nStack    := GetSX8Len()
Local nPosPrc   := 0
Local nPValDesc := 0
Local nPPrUnit  := 0
Local nPQuant   := 0
Local nSldQtd   := 0
Local nSldQtd2  := 0
Local nSldLiq   := 0
Local nSldBru   := 0
Local nX        := 0
Local nCntSD1   := 0
Local nTamPrcVen:= TamSX3("C6_PRCVEN")[2]

Local cAliasSD1 := "SD1"
Local cAliasSB1 := "SB1"
Local cCodTES   := ""
Local cCadastro := IIF(cCadastro == Nil,OemToAnsi("STR0007"),cCadastro) //"Atualiza‡„o de Pedidos de Venda"
Local cCampo    :=""
Local cTipoPed  :=""
Local cQuery   := ""
Local oDlg
Local oGetd
Local oSAY1
Local oSAY2
Local oSAY3
Local oSAY4
Local aRecnoSE1RA := {} // Array com os titulos selecionados pelo Adiantamento
Local aHeadAGG    := {}
Local aColsAGG    := {}
Local lBenefPodT	:=.F.

#IFNDEF TOP
	Local cIndex   := ""
	Local nIndBrw  := 0		
#ENDIF	

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis utilizadas na LinhaOk                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aCols      := {}
PRIVATE aHeader    := {}
PRIVATE aHeadFor   := {}
PRIVATE aColsFor   := {}
PRIVATE N          := 1
If FindFunction("MsMatGrade") .And. IsAtNewGrd()
	PRIVATE oGrade	  := MsMatGrade():New('oGrade',,"C6_QTDVEN",,"a410GValid()",{ {VK_F4,{|| A440Saldo(.T.,oGrade:aColsAux[oGrade:nPosLinO][aScan(oGrade:aHeadAux,{|x| AllTrim(x[2])=="C6_LOCAL"})] )}} }) 
Else
	PRIVATE aColsGrade := {}
	PRIVATE aHeadgrade := {}
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta a entrada de dados do arquivo                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aTELA[0][0],aGETS[0]

PRIVATE oGetPV	:= Nil

Default lFornece := .F.
Default cFornece := SF1->F1_FORNECE
Default cLoja    := SF1->F1_LOJA
Default cDocSF1  := ''

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Carrega perguntas do MATA440 e MATA410                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Pergunte("MTA440",.F.)
lLiber := MV_PAR02 == 1
lTransf:= MV_PAR01 == 1

Pergunte("MTA410",.F.)
//Carrega as variaveis com os parametros da execauto
Ma410PerAut()

SB8->(dbSetOrder(3))

If SoftLock("SF1")

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem do aHeader                                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SX3")
	dbSetOrder(1)
	MsSeek("SC6")
	While ( !EOF() .And. (SX3->X3_ARQUIVO == "SC6") )
		If (	X3USO(SX3->X3_USADO) .And.;
				!( Trim(SX3->X3_CAMPO) == "C6_NUM" );
				.And. Trim(x3_campo) <> "C6_QTDEMP";
				.And. Trim(x3_campo) <> "C6_QTDENT";
				.And. cNivel >= SX3->X3_NIVEL )
			nUsado++
			Aadd(aHeader,{ TRIM(X3Titulo()),;
				SX3->X3_CAMPO,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;
				SX3->X3_VALID,;
				SX3->X3_USADO,;
				SX3->X3_TIPO,;
				SX3->X3_ARQUIVO,;
				SX3->X3_CONTEXT } )
		EndIf
		dbSelectArea("SX3")
		dbSkip()
	EndDo
	If ( lContinua )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Montagem dos itens da Nota Fiscal de Devolucao/Retorno          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SD1")
		dbSetOrder(1)
		#IFDEF TOP
			lQuery    := .T.
			cAliasSD1 := "QRYSD1"
			cAliasSB1 := "QRYSD1"
			aStruSD1  := SD1->(dbStruct())
			cQuery    := "SELECT SD1.*,B1_DESC,B1_UM,B1_SEGUM "
			cQuery    += "FROM "+RetSqlName("SD1")+" SD1, "
			cQuery    += RetSqlName("SB1")+" SB1 "
			cQuery    += "WHERE SD1.D1_FILIAL='"+xFilial("SD1")+"' AND "
			If !lFornece
				cQuery    += "SD1.D1_DOC = '"+SF1->F1_DOC+"' AND "
				cQuery    += "SD1.D1_SERIE = '"+SF1->F1_SERIE+"' AND "
			Else
				If !Empty(cDocSF1)
					cQuery += " ( "
					cQuery += cDocSF1 + " AND "
				EndIf
			EndIf
			cQuery    += "SD1.D1_FORNECE = '"+cFornece+"' AND "
			cQuery    += "SD1.D1_LOJA = '"+cLoja+"' AND "
			cQuery    += "SD1.D_E_L_E_T_=' ' AND "

			cQuery    += "SB1.B1_FILIAL = '"+xFilial("SB1")+"' AND "
			cquery    += "SB1.B1_COD = SD1.D1_COD AND "
			cQuery    += "SB1.D_E_L_E_T_=' ' "

			cQuery    += "ORDER BY "+SqlOrder(SD1->(IndexKey()))

			cQuery    := ChangeQuery(cQuery)

			dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSD1,.T.,.T.)

			For nX := 1 To Len(aStruSD1)
				If aStruSD1[nX][2]<>"C"
					TcSetField(cAliasSD1,aStruSD1[nX][1],aStruSD1[nX][2],aStruSD1[nX][3],aStruSD1[nX][4])
				EndIf
			Next nX
		#ELSE
			If lFornece
				cIndex := CriaTrab(NIL,.F.)
				cQuery := " SD1->D1_FILIAL == '" + xFilial("SD1") + "' "
				cQuery += " .And. SD1->D1_FORNECE == '" + cFornece + "' "
				cQuery += " .And. SD1->D1_LOJA    == '" + cLoja    + "' "
				If !Empty(cDocSF1)
					cQuery += " .And. ( "
					cQuery += cDocSF1
				EndIf
				IndRegua("SD1",cIndex,SD1->(IndexKey()),,cQuery)
				nIndBrw := RetIndex("SD1")
				#IFNDEF TOP
					dbSetIndex(cIndex+OrdBagExt())
				#ENDIF
				dbSetOrder(nIndBrw+1)				
				SD1->(DbGotop())
			Else 
				MsSeek( xFilial("SD1")+SF1->F1_DOC+SF1->F1_SERIE+SF1->F1_FORNECE+SF1->F1_LOJA)
			EndIf
		#ENDIF

		While !Eof() .And. (cAliasSD1)->D1_FILIAL == xFilial("SD1") .And.;
			(cAliasSD1)->D1_FORNECE == cFornece .And.;
			(cAliasSD1)->D1_LOJA == cLoja .And.;
			If(!lFornece,(cAliasSD1)->D1_DOC == SF1->F1_DOC .And.;
							 (cAliasSD1)->D1_SERIE == SF1->F1_SERIE,.T.)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Se existe quantidade a ser devolvida                            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If (cAliasSD1)->D1_QUANT > (cAliasSD1)->D1_QTDEDEV

				cItem := Soma1(cItem)

				If !lQuery
					SB1->(dbSetOrder(1))
					SB1->(MsSeek(xFilial("SB1")+(cAliasSD1)->D1_COD))
				Endif

				SF1->(dbSetOrder(1))
				SF1->(MsSeek(xFilial("SF1")+(cAliasSD1)->D1_DOC+(cAliasSD1)->D1_SERIE+(cAliasSD1)->D1_FORNECE+(cAliasSD1)->D1_LOJA+(cAliasSD1)->D1_TIPO))

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se existe um tes de devolucao correspondente           ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

				dbSelectArea("SF4")
				DbSetOrder(1)
				If MsSeek(xFilial("SF4")+(cAliasSD1)->D1_TES)
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Verifica o poder de terceiros                                   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If lPoder3 
						lPoder3 := ( SF4->F4_PODER3=="R" ) 
					EndIf

					If Empty(SF4->F4_TESDV) .Or. !(SF4->(MsSeek(xFilial("SF4")+SF4->F4_TESDV)))
						Help(" ",1,"DSNOTESDEV")
						lContinua := .F.
						Exit 
					Else
						If SF4->F4_MSBLQL == "1"
							Help(" ",1,"TESBLOQ")
							lContinua := .F.
						Else
							cCodTES := SF4->F4_CODIGO
					    EndIf
					EndIf
					
					If !(lPoder3 .Or. SF1->F1_TIPO=="N")
						Help(" ",1,"A410PODER3")
						lContinua := .F.
						Exit 						
					EndIf
				
				EndIf

				aValor := A410SNfOri((cAliasSD1)->D1_FORNECE,;
											(cAliasSD1)->D1_LOJA,;
											(cAliasSD1)->D1_DOC,;
											(cAliasSD1)->D1_SERIE,;
											If(lPoder3,"",(cAliasSD1)->D1_ITEM),;
											(cAliasSD1)->D1_COD,;
											If(lPoder3,(cAliasSD1)->D1_IDENTB6,),;
											If(lPoder3,(cAliasSD1)->D1_LOCAL,),;
											cAliasSD1,,IIf(lForn,.F.,.T.) )

				nSldQtd:= aValor[1]
				nSldQtd2:=ConvUm((cAliasSD1)->D1_COD,nSldQtd,0,2)
				nSldLiq:= aValor[2]
				nSldBru:= nSldLiq+A410Arred(nSldLiq*(cAliasSD1)->D1_VALDESC/((cAliasSD1)->D1_TOTAL-(cAliasSD1)->D1_VALDESC),"C6_VALOR")

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verifica se existe saldo                                        ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If nSldQtd <> 0

					nCntSD1++
					If nCntSD1 > 900  // No. maximo de Itens 
						Exit
					EndIf

					AADD(aCols,Array(Len(aHeader)+1))
					For nCntFor := 1 To Len(aHeader)
						cCampo := Alltrim(aHeader[nCntFor,2])

						If ( aHeader[nCntFor,10] # "V" .And. !cCampo$"C6_QTDLIB#C6_RESERVA" )

							Do Case

							Case Alltrim(aHeader[nCntFor][2]) == "C6_ITEM"
								aCols[Len(aCols)][nCntFor] := cItem
							Case Alltrim(aHeader[nCntFor][2]) == "C6_PRODUTO"
								aCols[Len(aCols)][nCntFor] := (cAliasSD1)->D1_COD								
								SB1->(dbSetOrder(1))
								SB1->(MsSeek(xFilial("SB1")+(cAliasSD1)->D1_COD))
								aCols[Len(aCols)][Ascan(aHeader,{|x| Alltrim(x[2])=="C6_CLASFIS"})] :=  IIf( !Empty(SB1->B1_TS), SB1->B1_TS, SF4->F4_CODIGO ) 
								//If ExistTrigger("C6_PRODUTO")
										  //		RunTrigger(2,Len(aCols))
									  //	EndIf
							Case Alltrim(aHeader[nCntFor][2]) == "C6_DESCRI"
								aCols[Len(aCols)][nCntFor] := (cAliasSB1)->B1_DESC
							Case Alltrim(aHeader[nCntFor][2]) == "C6_SEGUM"
								aCols[Len(aCols)][nCntFor] := (cAliasSB1)->B1_SEGUM
							Case Alltrim(aHeader[nCntFor][2]) == "C6_UM"
								aCols[Len(aCols)][nCntFor] := (cAliasSB1)->B1_UM
							Case Alltrim(aHeader[nCntFor][2]) == "C6_UNSVEN"
								aCols[Len(aCols)][nCntFor] := a410Arred(nSldQtd2,"C6_UNSVEN")
							Case Alltrim(aHeader[nCntFor][2]) == "C6_QTDVEN"
								aCols[Len(aCols)][nCntFor] := a410Arred(nSldQtd,"C6_QTDVEN")
							Case Alltrim(aHeader[nCntFor][2]) == "C6_PRCVEN"
								If nTamPrcVen > 2
									aCols[Len(aCols)][nCntFor] := a410Arred(((cAliasSD1)->D1_VUNIT-((cAliasSD1)->D1_VALDESC/(cAliasSD1)->D1_QUANT)),"C6_PRCVEN")
								Else
									aCols[Len(aCols)][nCntFor] := a410Arred(nSldLiq/IIf(nSldQtd==0,1,nSldQtd),"C6_PRCVEN")
								EndIf
							Case Alltrim(aHeader[nCntFor][2]) == "C6_PRUNIT"
								aCols[Len(aCols)][nCntFor] := (cAliasSD1)->D1_VUNIT
							Case Alltrim(aHeader[nCntFor][2]) == "C6_VALOR"
								If nSldQtd <> (cAliasSD1)->D1_QUANT
									If nTamPrcVen > 2
										aCols[Len(aCols)][nCntFor] := a410Arred(nSldQtd*a410Arred(((cAliasSD1)->D1_VUNIT-((cAliasSD1)->D1_VALDESC/(cAliasSD1)->D1_QUANT)),"C6_PRCVEN"),"C6_VALOR")
									Else
										aCols[Len(aCols)][nCntFor] := a410Arred(nSldQtd*a410Arred(nSldLiq/IIf(nSldQtd==0,1,nSldQtd),"C6_PRCVEN"),"C6_VALOR")
									EndIf
								Else
									aCols[Len(aCols)][nCntFor] := nSldLiq
								EndIf
							Case Alltrim(aHeader[nCntFor][2]) == "C6_VALDESC"
								If (cAliasSD1)->D1_VALDESC>0
									aCols[Len(aCols)][nCntFor] := a410Arred(((cAliasSD1)->D1_VUNIT-a410Arred(nSldLiq/IIf(nSldQtd==0,1,nSldQtd),"C6_PRCVEN"))*a410Arred(nSldQtd,"C6_QTDVEN"),"C6_VALDESC")
								Else
									aCols[Len(aCols)][nCntFor] := 0
								EndIf
							Case Alltrim(aHeader[nCntFor][2]) == "C6_DESCONT"
								If (cAliasSD1)->D1_DESC>0
									aCols[Len(aCols)][nCntFor] :=(cAliasSD1)->D1_DESC
								Else
									aCols[Len(aCols)][nCntFor] := 0
								EndIf
							Case Alltrim(aHeader[nCntFor][2]) == "C6_TES"
								aCols[Len(aCols)][nCntFor] := cCodTES
								SF4->(dbSetOrder(1))
								SF4->(MsSeek(xFilial("SF4")+cCodTES))
								If !Empty(Subs(aCols[Len(aCols)][Ascan(aHeader,{|x| Alltrim(x[2])=="C6_CLASFIS"})],1,1)) .And. !Empty(SF4->F4_SITTRIB) 
									aCols[Len(aCols)][Ascan(aHeader,{|x| Alltrim(x[2])=="C6_CLASFIS"})] :=Subs(aCols[Len(aCols)][Ascan(aHeader,{|x| Alltrim(x[2])=="C6_CLASFIS"})],1,1)+SF4->F4_SITTRIB 								
								EndIf
								//If ExistTrigger("C6_TES    ")
									//	RunTrigger(2,Len(aCols))
								//EndIf
							Case Alltrim(aHeader[nCntFor][2]) == "C6_CF"
								aCols[Len(aCols)][nCntFor] := SF4->F4_CF
							Case Alltrim(aHeader[nCntFor][2]) == "C6_NFORI"
								aCols[Len(aCols)][nCntFor] := (cAliasSD1)->D1_DOC
							Case Alltrim(aHeader[nCntFor][2]) == "C6_SERIORI"
								aCols[Len(aCols)][nCntFor] := (cAliasSD1)->D1_SERIE
							Case Alltrim(aHeader[nCntFor][2]) == "C6_ITEMORI" 
								aCols[Len(aCols)][nCntFor] := (cAliasSD1)->D1_ITEM
							Case Alltrim(aHeader[nCntFor][2]) == "C6_NUMLOTE"
								aCols[Len(aCols)][nCntFor] := IIF(SF4->F4_ESTOQUE == "S",(cAliasSD1)->D1_NUMLOTE ,"")
							Case Alltrim(aHeader[nCntFor][2]) == "C6_LOTECTL"
								aCols[Len(aCols)][nCntFor] := IIF(SF4->F4_ESTOQUE == "S",(cAliasSD1)->D1_LOTECTL ,"")
							Case Alltrim(aHeader[nCntFor][2]) == "C6_LOCAL"
								aCols[Len(aCols)][nCntFor] := (cAliasSD1)->D1_LOCAL
							Case Alltrim(aHeader[nCntFor][2]) == "C6_IDENTB6"
								aCols[Len(aCols)][nCntFor] := (cAliasSD1)->D1_IDENTB6
							Case Alltrim(aHeader[nCntFor][2]) == "C6_DTVALID"			
								If SF4->F4_ESTOQUE == "S"
									aCols[Len(aCols)][nCntFor] := (cAliasSD1)->D1_DTVALID
									If SB8->(MsSeek(xFilial("SB8")+(cAliasSD1)->D1_COD+(cAliasSD1)->D1_LOCAL+(cAliasSD1)->D1_LOTECTL+IIf(Rastro((cAliasSD1)->D1_COD,"S"),(cAliasSD1)->D1_NUMLOTE,"")))
										aCols[Len(aCols)][nCntFor] := SB8->B8_DTVALID
									Endif   
								Else
									aCols[Len(aCols)][nCntFor] := CTOD("  /  /  ")
								EndIf
							Case Alltrim(aHeader[nCntFor][2]) == "C6_CLASFIS"
								aCols[Len(aCols)][nCntFor] := SB1->B1_ORIGEM+SF4->F4_SITTRIB
							Case Alltrim(aHeader[nCntFor][2]) == "C6_CC"
								aCols[Len(aCols)][nCntFor] := (cAliasSD1)->D1_CC
							Case Alltrim(aHeader[nCntFor][2]) == "C6_CONTA"
								aCols[Len(aCols)][nCntFor] := (cAliasSD1)->D1_CONTA
							Case Alltrim(aHeader[nCntFor][2]) == "C6_ITEMCTA"
								aCols[Len(aCols)][nCntFor] := (cAliasSD1)->D1_ITEMCTA
							Case Alltrim(aHeader[nCntFor][2]) == "C6_CLVL"
								aCols[Len(aCols)][nCntFor] :=(cAliasSD1)->D1_CLVL			
							OtherWise
								aCols[Len(aCols)][nCntFor] := CriaVar(cCampo)
							EndCase
						Else
							aCols[Len(aCols)][nCntFor] := CriaVar(cCampo)
						EndIf
					Next nCntFor

					aCols[Len(aCols)][Len(aHeader)+1] := .F.

					If lM410PCDV
						ExecBlock("M410PCDV",.F.,.F.,{cAliasSD1})
					Endif

				Endif

			Endif

			dbSelectArea(cAliasSD1)
			dbSkip()
		EndDo
		If ( lQuery )
			dbSelectArea(cAliasSD1)
			dbCloseArea()
			ChkFile("SC6",.F.)
			dbSelectArea("SC6")
		Else
			If lFornece
				RetIndex( "SD1" )
				FErase( cIndex+OrdBagExt() )
			EndIf
		EndIf

		If (lContinua)

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Inicializa as variaveis de busca do acols                                 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

			nPosPrc   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN"})
			nPValDesc := aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALDESC"})
			nPPrUnit  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRUNIT"})
			nPQuant   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})


			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Inici aliza desta forma para criar uma nova instancia de variaveis private³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Cria Variaveis de Memoria da Enchoice                                 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			DbSelectArea("SX3")
			DbSetOrder(1)
			DbSeek("SC5")
			While ( !Eof() .And. (SX3->X3_ARQUIVO == "SC5") )
				cCampo := SX3->X3_CAMPO

				If	( SX3->X3_CONTEXT <> "V" )
					Do Case

					Case Alltrim(cCampo) == "C5_TIPO"

						cTipoPed := "" 

						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Verifica o tipo da nota para o retorno do pedido     ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						Do Case
						Case SF1->F1_TIPO == "N" .And. lPoder3
							cTipoPed := "B" 
						Case SF1->F1_TIPO == "B" .And. lPoder3
							cTipoPed := "N" 
							lBenefPodT := .T.
						EndCase

						If Empty(cTipoPed)
							cTipoPed := "D" 
						Endif

						_SetOwnerPrvt(Trim(SX3->X3_CAMPO),cTipoPed )

					Case Alltrim(cCampo) == "C5_CLIENTE"
						_SetOwnerPrvt(Trim(SX3->X3_CAMPO),cFornece)
					Case Alltrim(cCampo) == "C5_LOJACLI"
						_SetOwnerPrvt(Trim(SX3->X3_CAMPO),cLoja)
					Case Alltrim(cCampo) == "C5_EMISSAO"
						_SetOwnerPrvt(Trim(SX3->X3_CAMPO),dDataBase)
					Case Alltrim(cCampo) == "C5_CONDPAG"
						_SetOwnerPrvt(Trim(SX3->X3_CAMPO),SF1->F1_COND)
					Case Alltrim(cCampo) == "C5_CLIENT"
						_SetOwnerPrvt(Trim(SX3->X3_CAMPO),cFornece)						
					Case Alltrim(cCampo) == "C5_LOJAENT"
						_SetOwnerPrvt(Trim(SX3->X3_CAMPO),cLoja)
					OtherWise
						_SetOwnerPrvt(Trim(SX3->X3_CAMPO),CriaVar(SX3->X3_CAMPO))
					EndCase
				Else
					_SetOwnerPrvt(Trim(SX3->X3_CAMPO),CriaVar(SX3->X3_CAMPO))
				Endif

				DbSelectArea("SX3")
				DbSkip()
			EndDo

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Busca o tipo do cliente/fornecedor                   ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If M->C5_TIPO$"DB"
				SA2->(dbSetOrder(1))
				If SA2->(MsSeek(xFilial("SA2")+M->C5_CLIENTE+M->C5_LOJACLI))
					_SetOwnerPrvt("C5_TIPOCLI",If(SA2->A2_TIPO=="J","R",SA2->A2_TIPO))
				EndIf
			Else
				SA1->(dbSetOrder(1))
				If SA1->(MsSeek(xFilial("SA1")+M->C5_CLIENTE+M->C5_LOJACLI))
					_SetOwnerPrvt("C5_TIPOCLI",SA1->A1_TIPO)
				Endif 
			EndIf

			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Marca o cliente utilizado para verificar posterior mudanca ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			a410ChgCli(M->C5_CLIENTE+M->C5_LOJACLI)
		Endif

	EndIf
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Caso nao ache nenhum item , abandona rotina.         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lContinua )
	If ( Len(aCols) == 0 )
		lContinua := .F.
	EndIf
EndIf

aRegSC6 := {}
aRegSCV := {}

If ( lContinua )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Monta o array com as formas de pagamento do SX5³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Ma410MtFor(@aHeadFor,@aColsFor)
	A410ReCalc(.F.,lBenefPodT)	

	If ( Type("l410Auto") == "U" .OR. !l410Auto )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Faz o calculo automatico de dimensoes de objetos     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aSize := MsAdvSize()
		aObjects := {}
		AAdd( aObjects, { 100, 100, .t., .t. } )
		AAdd( aObjects, { 100, 100, .t., .t. } )
		AAdd( aObjects, { 100, 015, .t., .f. } )
		aInfo := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
		aPosObj := MsObjSize( aInfo, aObjects )
		aPosGet := MsObjGetPos(aSize[3]-aSize[1],315,{{003,033,160,200,240,263}} )
		nGetLin := aPosObj[3,1]

		DEFINE MSDIALOG oDlg TITLE cCadastro From aSize[7],0 to aSize[6],aSize[5] of oMainWnd PIXEL
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Armazenar dados do Pedido anterior.                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		IF M->C5_TIPO $ "DB"
			aTrocaF3 := {{"C5_CLIENTE","SA2"}}
		Else
			aTrocaF3 := {}
		EndIf
		oGetPV:=MSMGet():New( "SC5", nReg, 3, , , , , aPosObj[1],,3,,,"A415VldTOk",,,.T.)
		A410Limpa(.F.,M->C5_TIPO)
//		@ nGetLin,aPosGet[1,1]  SAY OemToAnsi(IIF(M->C5_TIPO$"DB",STR0008,STR0009)) SIZE 020,09 PIXEL	//"Fornec.:"###"Cliente: "
		@ nGetLin,aPosGet[1,2]  SAY oSAY1 VAR Space(40)						SIZE 120,09 PICTURE "@!"	OF oDlg PIXEL
		@ nGetLin,aPosGet[1,3]  SAY OemToAnsi(STR0011)						SIZE 020,09 OF oDlg PIXEL	//"Total :"
		@ nGetLin,aPosGet[1,4]  SAY oSAY2 VAR 0 PICTURE TM(0,16,Iif(cPaisloc=="CHI",NIL,nNumDec))	SIZE 050,09 OF oDlg PIXEL		
		@ nGetLin,aPosGet[1,5]  SAY OemToAnsi(STR0012)						SIZE 030,09 OF oDlg PIXEL 	//"Desc. :"
		@ nGetLin,aPosGet[1,6]  SAY oSAY3 VAR 0 PICTURE TM(0,16,Iif(cPaisloc=="CHI",NIL,nNumDec))		SIZE 050,09 OF oDlg PIXEL RIGHT
		@ nGetLin+10,aPosGet[1,5]  SAY OemToAnsi("=")							SIZE 020,09 OF oDlg PIXEL
		If cPaisLoc == "BRA"				
			@ nGetLin+10,aPosGet[1,6]  SAY oSAY4 VAR 0								SIZE 050,09 PICTURE TM(0,16,2) OF oDlg PIXEL RIGHT
		Else
			@ nGetLin+10,aPosGet[1,6]  SAY oSAY4 VAR 0								SIZE 050,09 PICTURE TM(0,16,Iif(cPaisloc=="CHI",NIL,nNumDec)) OF oDlg PIXEL RIGHT
		EndIf
		oDlg:Cargo	:= {|c1,n2,n3,n4| oSay1:SetText(c1),;
			oSay2:SetText(n2),;
			oSay3:SetText(n3),;
			oSay4:SetText(n4) }
		Set Key VK_F4 to A440Stok(NIL,"A410")
		oGetd:=MsGetDados():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],3,"A410LinOk","A410TudOk","+C6_ITEM/C6_Local/C6_TES/C6_CF/C6_PEDCLI",.T.,,1,,ITENSSC6*IIF(MaGrade(),1,3.33),"A410Blq()")
		Private oGetDad:=oGetd
		A410Bonus(2)
		Ma410Rodap(oGetD,nTotalPed,nTotalDes)
		ACTIVATE MSDIALOG oDlg ON INIT Ma410Bar(oDlg,{||nOpcA:=1,if(A410VldTOk(nOpc).And.oGetd:TudoOk(),If(!obrigatorio(aGets,aTela),nOpcA := 0,oDlg:End()),nOpcA := 0)},{||oDlg:End()},nOpc,oGetD,nTotalPed,@aRecnoSE1RA,@aHeadAGG,@aColsAGG)
		SetKey(VK_F4,)
	EndIf
	If ( nOpcA == 1 )
		A410Bonus(1)
		If a410Trava()
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Inicializa a gravacao dos lancamentos do SIGAPCO          ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PcoIniLan("000100")
			If !A410Grava(lLiber,lTransf,2,aHeadFor,aColsFor,aRegSC6,aRegSCV,,,aRecnoSE1RA,aHeadAGG,aColsAGG)
				Help(" ",1,"A410NAOREG")
			EndIf
			
			
			If ( (ExistBlock("M410STTS") ) )
				ExecBlock("M410STTS",.f.,.f.)
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Finaliza a gravacao dos lancamentos do SIGAPCO            ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			PcoFinLan("000100")
		EndIf
	Else
		While GetSX8Len() > nStack
			RollBackSX8()
		EndDo
		If ( (ExistBlock("M410ABN")) )
			ExecBlock("M410ABN",.f.,.f.)
		EndIf
	EndIf
Else
	While GetSX8Len() > nStack
		RollBackSX8()
	EndDo
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Limpa cliente anterior para proximo pedido                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
a410ChgCli("")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Destrava Todos os Registros                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
MsUnLockAll()

RestArea(aAreaSX3)
RestArea(aAreaSF1)
RestArea(aAreaSD1)
RestArea(aAreaSB8)
RestArea(aArea)

Return( nOpcA )


/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma410Forma³Autor  ³Henry Fila             ³ Data ³07.09.2001³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Mostra planilha de formacao de precos                       ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a interface com o usua³±±
±±³          ³rio e o pedido de vendas                                    ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma410Forma()

Local aArea    := GetArea()
Local aAreaSB1 := SB1->(GetArea())
Local aHeaderBk:= aClone(aHeader)

Local nPosProd := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPosQtde := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})

Private cArqMemo   := ""
Private lDirecao   := .T.
Private nQualCusto := 1
Private cProg      := "C010"

If VerSenha(107)
	If !Empty(aCols[n][nPosProd])
		If Ma410Plan()
			SB1->(dbSetOrder(1))
			If SB1->(MsSeek(xFilial("SB1")+aCols[n][nPosProd]) )
				If FindFunction("MTC010SX1")
					MTC010SX1()
				EndIf
				If Pergunte("MTC010",.T.)
					MC010Forma("SB1",SB1->(Recno()),98,aCols[n][nPosQtde],2)
					aHeader := aClone(aHeaderBk)
					Pergunte("MTA410",.F.)
					//Carrega as variaveis com os parametros da execauto
					Ma410PerAut()
				Endif
			Endif
		Endif
	Else
		Aviso(OemToAnsi(STR0054),OemtoAnsi(STR0055),{OemtoAnsi(STR0040)})
	Endif
Else
	Help(" ",1,"SEMPERM")
Endif

RestArea(aAreaSB1)
RestArea(aArea)

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Ma410Plan ³ Autor ³ Henry Fila            ³ Data ³          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Le planilha de formacao gravadas no disco                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ SIGAEST                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Ma410Plan()
Local aDiretorio := {}
Local nX         := 0
Local oPlan
Local oDlg
Local oBtnA
Local lRet:=.F.

aDiretorio := Directory("*.PDV")

For nX := 1 To Len(aDiretorio)
	aDiretorio[nX] := SubStr(aDiretorio[nX][1],1,AT(".",aDiretorio[nX][1])-1)
	If aDiretorio[nX] == "STANDARD"
		aDiretorio[nX] := Space(14)
	Else
		aDiretorio[nX] := "   "+aDiretorio[nX]+Space(11-Len(aDiretorio[nX]))
	EndIf
Next nX
If Len(aDiretorio)>0
	Asort(aDiretorio)
	If Empty(aDiretorio[1])
		aDiretorio[1] := "   STANDARD   "
	EndIf

	nX :=1

	DEFINE MSDIALOG oDlg FROM 15,6 TO 222,309 TITLE STR0069 PIXEL	//"Selecione Planilha"
	@ 11,12 LISTBOX oPlan FIELDS HEADER  ""  SIZE 131, 69 OF oDlg PIXEL;
		ON CHANGE (nX := oPlan:nAt) ON DBLCLICK (Eval(oBtnA:bAction))
	oPlan:SetArray(aDiretorio)
	oPlan:bLine := { || {aDiretorio[oPlan:nAT]} }
	DEFINE SBUTTON oBtnA FROM 83, 088 TYPE 1 ENABLE OF oDlg Action(lRet := .T.,oDlg:End())
	DEFINE SBUTTON FROM 83, 115 TYPE 2 ENABLE OF oDlg Action (lRet:= .F.,ODlg:End())
	ACTIVATE MSDIALOG oDlg CENTER

	cArqMemo := AllTrim(aDiretorio[nX])
EndIf
RETURN lRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma410GrXml³Autor  ³Eduardo Riera          ³ Data ³08.02.2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Gravacao do Pedido de Venda no Formato XML.                 ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar a gravacao do pedido  ³±±
±±³          ³de Venda no Formato XML para ser utilizada pelo Job de      ³±±
±±³          ³Gravacao do Pedido de Venda                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Observacao³Nenhuma                                                     ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais/Distribuicao/Logistica                           ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma410GrXml()

Local aArea    := GetArea()
Local aXml     := {}
Local aFile    := {}
Local bCampo   := {|nCPO| Field(nCPO) }
Local cString  := ""
Local cName    := ""
Local lRetorno := .T.
Local nX       := 0
Local nY       := 0
Local nItem    := 0
Local nErro    := 0
Local nHandle  := 0
Local nPItem   := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_ITEM"})
Local nUsado   := Len(aHeader)


If File(DIRMASC+"MSPV.XML")
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Verifica se existe a mascara do Pedido de Venda                         ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	FT_FUse(DIRMASC+"MSPV.XML")
	FT_FGotop()
	While !FT_FEof()
		aadd(aXml,FT_FREADLN())
		FT_FSkip()
	EndDo
	FT_FUSE()
	aadd(aFile,aXml[1])
	aadd(aFile,aXml[2])
	aadd(aFile,StrTran(aXml[3],"><",">MS_MATA410<"))
	aadd(aFile,StrTran(aXml[4],"><",">6.09<"))
	aadd(aFile,StrTran(aXml[5],"><",">"+Dtos(Date())+" "+Time()+"<"))
	aadd(aFile,StrTran(aXml[6],"><",">"+"MSPV"+"<"))
	aadd(aFile,StrTran(aXml[7],"><",">"+cEmpAnt+"<"))
	aadd(aFile,StrTran(aXml[8],"><",">"+cFilAnt+"<"))
	aadd(aFile,aXml[09])
	aadd(aFile,aXml[10])
	aadd(aFile,StrTran(aXml[11],"><",">"+cEmpAnt+cFilAnt+M->C5_NUM+"<"))
	aadd(aFile,StrTran(aXml[12],"><",">"+"DIRECTUPDATE"+"<"))
	aadd(aFile,aXml[13])
	nItem := 1
	dbSelectArea("SC5")
	For nX := 1 To FCount()
		If !Empty(M->&(EVAL(bCampo,nX)))
			aadd(aFile,aXml[14])
			aadd(aFile,StrTran(aXml[15],"><",">"+SC5->(FieldName(nX))+"<"))
			Do Case
				Case ValType(M->&(EVAL(bCampo,nX)))=="D"
					aadd(aFile,StrTran(aXml[16],"><",">"+DTOC(M->&(EVAL(bCampo,nX)))+"<"))
				Case ValType(M->&(EVAL(bCampo,nX)))=="N"
					aadd(aFile,StrTran(aXml[16],"><",">"+Str(M->&(EVAL(bCampo,nX)),TamSx3(SC5->(FieldName(nX)))[1],TamSx3(SC5->(FieldName(nX)))[2])+"<"))
				OtherWise
					aadd(aFile,StrTran(aXml[16],"><",">"+M->&(EVAL(bCampo,nX))+"<"))
			EndCase
			aadd(aFile,aXml[17])
		EndIf
	Next nX
	aadd(aFile,aXml[18])
	aadd(aFile,aXml[19])
	For nX := 1 To Len(aCols)
		If !aCols[nX][nUsado+1]	
			aadd(aFile,aXml[20])
			aadd(aFile,StrTran(aXml[21],"><",">"+aCols[nX][nPItem]+"<"))
			nItem := 1
			For nY := 1 To Len(aHeader)
				If nY <= Len(aCols[nX]) .And. !Empty(aCols[nX][nY])
					aadd(aFile,aXml[22])
					aadd(aFile,StrTran(aXml[23],"><",">"+aHeader[nY][2]+"<"))
					Do Case
						Case ValType(aCols[nX][nY])=="D"
							aadd(aFile,StrTran(aXml[24],"><",">"+Dtoc(aCols[nX][nY])+"<"))
						Case ValType(aCols[nX][nY])=="N"
							If !Empty(TamSx3(aHeader[nY][2]))
								aadd(aFile,StrTran(aXml[24],"><",">"+Str(aCols[nX][nY],TamSx3(aHeader[nY][2])[1],TamSx3(aHeader[nY][2])[2])+"<"))
							EndIf
						OtherWise
							aadd(aFile,StrTran(aXml[24],"><",">"+aCols[nX][nY]+"<"))
						EndCase
						aadd(aFile,aXml[25])
				EndIf
			Next nY
			aadd(aFile,aXml[26])
		EndIf
	Next nX
	For nX := 27 To Len(aXml)
		aadd(aFile,aXml[nX])
	Next nX
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Efetua a gravacao no diretorio de destino                               ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !File(DIRXMLTMP+"*.*")
		nErro := MakeDir(DIRXMLTMP)
		If nErro <> 0
			ConOut(Repl("-",80))
			ConOut("")
			ConOut("MATA410XML - DIRECTORY ERROR: "+Str(nErro))
			ConOut("")
			ConOut(Repl("-",80))
			lRetorno := .F.
		EndIf
	EndIf
	If lRetorno
		cName   := AllTrim(DIRXMLTMP+CriaTrab(,.F.)+".XML")
		nHandle := FCreate(cName,0)
		nErro   := FError()
		If nErro <> 0
			ConOut(Repl("-",80))
			ConOut("")
			ConOut("MATA410XML - CREATE XML ERROR: "+Str(nErro))
			ConOut("")
			ConOut(Repl("-",80))
			lRetorno := .F.
		Else
			If lRetorno
				While ( __lSX8 )
					ConfirmSX8()
				EndDo
			EndIf
			cString := ""
			For nX := 1 To Len(aFile)
				cString += aFile[nX]+Chr(13)+Chr(10)
				If Mod(nX,100)==0
					FWrite(nHandle,cString)
					cString := ""
					nErro   := FError()
					If nErro <> 0
						FClose(nHandle)
						ConOut(Repl("-",80))
						ConOut("")
						ConOut("MATA410XML - WRITE XML ERROR: "+Str(nErro))
						ConOut("")
						ConOut(Repl("-",80))
						lRetorno := .F.
						nX := Len(aFile)+1
					EndIf
				EndIf
			Next nX
			FWrite(nHandle,cString)
			nErro   := FError()
			If nErro <> 0
				ConOut(Repl("-",80))
				ConOut("")
				ConOut("MATA410XML - WRITE XML ERROR: "+Str(nErro))
				ConOut("")
				ConOut(Repl("-",80))
				lRetorno := .F.
			EndIf
			FClose(nHandle)
			nErro   := FError()
			If nErro <> 0
				ConOut(Repl("-",80))
				ConOut("")
				ConOut("MATA410XML - CLOSE XML ERROR: "+Str(nErro))
				ConOut("")
				ConOut(Repl("-",80))
				lRetorno := .F.
			EndIf
		EndIf
	EndIf
Else
	lRetorno := .F.
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Restaura a integridade da rotina                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
RestArea(aArea)
Return(lRetorno)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma410VldUs³ Autor ³ Henry Fila            ³ Data ³17/03/2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Tratamento da confirmacao / nao confirmacao da inclusao    ³±±
±±³          ³ ou alteracao                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpL1 := Ma410VldUs( ExpN1 )                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 -> Opcao : 1 -> Confirma / 0 -> Nao Confirma         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1 -> Validacao                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function Ma410VldUs( nOpca )

Local lRet := .T.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Faz a chamada do ponto passando nOpca como parametro ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

If ExistBlock( "MA410VLD" )
	lRet := ExecBlock( "MA410VLD", .F., .F., { nOpca } )
EndIf

Return( lRet )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MyMata410 ³ Autor ³ Eduardo Riera         ³ Data ³17.04.2003 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de teste da rotina automatica do programa MATA410     ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo efetuar testes na rotina de    ³±±
±±³          ³pedido de venda                                              ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function MyMata410()

Local aCabec := {}
Local aItens := {}
Local aLinha := {}
Local nX     := 0
Local nY     := 0
Local cDoc   := ""
Local lOk    := .T.
PRIVATE lMsErroAuto := .F.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Abertura do ambiente                                         |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
ConOut(Repl("-",80))
ConOut(PadC("Teste de Inclusao de 10 pedidos de venda  com 30 itens cada",80))
PREPARE ENVIRONMENT EMPRESA "99" FILIAL "01" MODULO "FAT" TABLES "SC5","SC6","SA1","SA2","SB1","SB2","SF4"
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//| Verificacao do ambiente para teste                           |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SB1")
dbSetOrder(1)
If !SB1->(MsSeek(xFilial("SB1")+"PA001"))
	lOk := .F.
	ConOut("Cadastrar produto: PA001")
EndIf
dbSelectArea("SF4")
dbSetOrder(1)
If !SF4->(MsSeek(xFilial("SF4")+"501"))
	lOk := .F.
	ConOut("Cadastrar TES: 501")
EndIf
dbSelectArea("SE4")
dbSetOrder(1)
If !SE4->(MsSeek(xFilial("SE4")+"001"))
	lOk := .F.
	ConOut("Cadastrar condicao de pagamento: 001")
EndIf
If !SB1->(MsSeek(xFilial("SB1")+"PA002"))
	lOk := .F.
	ConOut("Cadastrar produto: PA002")
EndIf
dbSelectArea("SA1")
dbSetOrder(1)
If !SA1->(MsSeek(xFilial("SA1")+"CL000101"))
	lOk := .F.
	ConOut("Cadastrar cliente: CL000101")
EndIf
If lOk
	ConOut("Inicio: "+Time())
	For nY := 1 To 10
		cDoc := GetSxeNum("SC5","C5_NUM")
		RollBAckSx8()
		aCabec := {}
		aItens := {}
		aadd(aCabec,{"C5_NUM"   ,cDoc,Nil})
		aadd(aCabec,{"C5_TIPO" ,"N",Nil})
		aadd(aCabec,{"C5_CLIENTE",SA1->A1_COD,Nil})
		aadd(aCabec,{"C5_LOJACLI",SA1->A1_LOJA,Nil})
		aadd(aCabec,{"C5_LOJAENT",SA1->A1_LOJA,Nil})
		aadd(aCabec,{"C5_CONDPAG",SE4->E4_CODIGO,Nil})
		If cPaisLoc == "PTG"
			aadd(aCabec,{"C5_DECLEXP","TESTE",Nil})
		Endif
		For nX := 1 To 30
			aLinha := {}
			aadd(aLinha,{"C6_ITEM",StrZero(nX,2),Nil})
			aadd(aLinha,{"C6_PRODUTO",SB1->B1_COD,Nil})
			aadd(aLinha,{"C6_QTDVEN",1,Nil})
			aadd(aLinha,{"C6_PRCVEN",100,Nil})
			aadd(aLinha,{"C6_PRUNIT",100,Nil})
			aadd(aLinha,{"C6_VALOR",100,Nil})
			aadd(aLinha,{"C6_TES","501",Nil})
			aadd(aItens,aLinha)
		Next nX
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//| Teste de Inclusao                                            |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		MATA410(aCabec,aItens,3)
		If !lMsErroAuto
			ConOut("Incluido com sucesso! "+cDoc)
		Else
			ConOut("Erro na inclusao!")
		EndIf
	Next nY
	ConOut("Fim  : "+Time())
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Teste de alteracao                                           |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aCabec := {}
	aItens := {}
	aadd(aCabec,{"C5_NUM",cDoc,Nil})
	aadd(aCabec,{"C5_TIPO","N",Nil})
	aadd(aCabec,{"C5_CLIENTE",SA1->A1_COD,Nil})
	aadd(aCabec,{"C5_LOJACLI",SA1->A1_LOJA,Nil})
	aadd(aCabec,{"C5_LOJAENT",SA1->A1_LOJA,Nil})
	aadd(aCabec,{"C5_CONDPAG",SE4->E4_CODIGO,Nil})
	If cPaisLoc == "PTG"
		aadd(aCabec,{"C5_DECLEXP","TESTE",Nil})
	Endif
	For nX := 1 To 30
		aLinha := {}
		aadd(aLinha,{"LINPOS","C6_ITEM",StrZero(nX,2)})
		aadd(aLinha,{"AUTDELETA","N",Nil})
		aadd(aLinha,{"C6_PRODUTO",SB1->B1_COD,Nil})
		aadd(aLinha,{"C6_QTDVEN",2,Nil})
		aadd(aLinha,{"C6_PRCVEN",100,Nil})
		aadd(aLinha,{"C6_PRUNIT",100,Nil})
		aadd(aLinha,{"C6_VALOR",200,Nil})
		aadd(aLinha,{"C6_TES","501",Nil})
		aadd(aItens,aLinha)
	Next nX	
	ConOut(PadC("Teste de alteracao",80))
	ConOut("Inicio: "+Time())
	MATA410(aCabec,aItens,4)
	ConOut("Fim  : "+Time())
	ConOut(Repl("-",80))	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Teste de Exclusao                                            |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ConOut(PadC("Teste de exclusao",80))
	ConOut("Inicio: "+Time())
	MATA410(aCabec,aItens,5)
	If !lMsErroAuto
		ConOut("Exclusao com sucesso! "+cDoc)
	Else
		ConOut("Erro na exclusao!")
	EndIf
	ConOut("Fim  : "+Time())
	ConOut(Repl("-",80))
EndIf
RESET ENVIRONMENT
Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma410VldQEK³ Autor ³ Cleber Souza         ³ Data ³19/09/2003³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Verifica se na devolucao a Nota Original ainda naum foi    ³±±
±±³          ³ liberada do CQ.                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ ExpL1 := Ma410VldUs( ExpC1,ExpC2,ExpC3,ExpC4,ExpC5,ExpC6 ) ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ ExpL1 -> Validacao                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function Ma410VldQEK( cForn,cLoja,cNfOri,cSerOri,cItemOri,cProdOri)

Local lRetorna   := .t.
Local aSaldoQEK  := {}
Local aArea      := GetArea()
Local lLibDev    := GetMV("MV_QLIBDEV",.T.,.F.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ verifica se esta liberado pelo Quality.              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ

//Pesquisa NF Original
SD1->(dbSetOrder(1))
SD1->(dbSeek(xFilial("SD1")+cNfOri+cSerOri+cForn+cLoja+cProdOri+cItemOri))
	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ verifica se tipo de Nota mais TES saum usados no QIE.³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !QIETipoNf(SD1->D1_TIPO,SD1->D1_TES)
	
	//Posiciona na Entrada do QEK
	dbSelectArea("QEK")
	dbSetOrder(10)
	If dbSeek(xFilial("QEK")+SD1->D1_FORNECE+SD1->D1_LOJA+SD1->D1_DOC+SD1->D1_SERIE+SD1->D1_ITEM+SD1->D1_TIPO+SD1->D1_NUMSEQ)
		If QEK->QEK_SITENT $ ("1,0")
			Help(" ",1,"A410SIQEK") //"Ainda nao foi digitado o laudo para esta entrada na Inspecao de Entrada."
			lRetorna := .f.
		Else
			If !lLibDev
				aSaldoQEK := A175CalcQt(SD1->D1_NUMcq, SD1->D1_COD, SD1->D1_LOCAL)
				If aSaldoQEK[6] > 0
					Help(" ",1,"A410SLQEK") //"Ainda existe saldo dessa entrada na Qualidade para ser liberada."
					lRetorna := .f.
				EndIF
			EndIF
		EndIF
	EndIF
EndIF

RestArea(aArea)

Return lRetorna


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Ma410Custo³ Autor ³ Eduardo Riera         ³ Data ³23.02.2005 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Rotina de calculo do CMV de um item do pedido de venda       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpN1: Item da funcao fiscal                                 ³±±
±±³          ³ExpA2: Array de vencimentos na seguinte estrutura            ³±±
±±³          ³       [D] Data de vencto                                    ³±±
±±³          ³       [C] Valor da Parcela                                  ³±±
±±³          ³ExpC3: Codigo da TES                                         ³±±
±±³          ³ExpC4: Codigo do Produto                                     ³±±
±±³          ³ExpC5: Local padrão                                          ³±±
±±³          ³ExpN6: Quantidade vendida                                    ³±±
±±³ 	    	    ³ExpD7: Data de emissao do lancamento 					  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpN1: CMV convertido para o valor presente                  ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta funcao calcula o CMV do pedido de venda considerando o  ³±±
±±³          ³valor presente caso haja parcelamento de pagamentos.         ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Mata410/mata415                                             ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma410Custo(nItem,aVencto,cTES,cProduto,cLocal,nQtdVen, dDtEmissao)

Local nX        := 0
Local nVlrPed   := MaFisRet(,"NF_BASEDUP")
Local nVlrParc  := 0
Local nVlrItem  := 0
Local nVlrPres  := 0
Local nTaxa     := SuperGetMv("MV_JUROS")
Local aRet      := {}
Local aDupl     := {}
Local aCusto    := {}
Local nTotal	:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona registros                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SF4")
dbSetOrder(1)
MsSeek(xFilial()+cTES)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Proporcionaliza o valor do item com o valor do pedido³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nX := 1 to Len(aVencto)
	nVlrParc := aVencto[nX,2]
	nVlrItem := MaFisRet(nItem,"IT_BASEDUP")
	nVlrItem := nVlrParc*nVlrItem/nVlrPed
	
	nVlrPres := MaValPres(nVlrItem,aVencto[nX][1],nTaxa, ,dDtEmissao)
	If nX == Len(aVencto) .And. ((nTotal+nVlrPres) <> nVlrPed .And. !(nTaxa > 0))
		nVlrPres += (nVlrPed - (nTotal+nVlrPres) )
	EndIf
	nTotal += nVlrPres
	aadd(aRet,{'MT410  ','   ',' ',aVencto[nX][1],nVlrPres})
Next nX
For nX := 1 to Len(aRet)
	aAdd(aDupl,aRet[nX][2]+"³"+aRet[nX][1]+"³ "+aRet[nX][3]+" ³"+DTOC(aRet[nX][4])+"³ "+Transform(aRet[nX][5],PesqPict("SE2","E2_VALOR",14,1)))
Next nX

dbSelectArea("SF4")
dbSetOrder(1)
MsSeek(xFilial("SF4")+cTes)
If  cPaisLoc <> "BRA"
	aadd(aCusto,{nTotal,;
		0,;
		0,;
		"N",;
		"N",;
		"0",;
		"0",;
		cProduto,;
		cLocal,;
		nQtdVen,;
		0})
Else
	aadd(aCusto,{nTotal-IIf(SF4->F4_IPI=="R",0,MaFisRet(nItem,"IT_VALIPI"))+MaFisRet(nItem,"IT_VALCMP"),;
		MaFisRet(nItem,"IT_VALIPI"),;
		MaFisRet(nItem,"IT_VALICM"),;
		SF4->F4_CREDIPI,;
		SF4->F4_CREDICM,;
		MaFisRet(nItem,"IT_NFORI"),;
		MaFisRet(nItem,"IT_SERORI"),;
		cProduto,;
		cLocal,;
		nQtdVen,;
		If(SF4->F4_IPI=="R",MaFisRet(nItem,"IT_VALIPI"),0) })
EndIf
Return(RetCusEnt(aDupl,aCusto,'N')[1][1])

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MA410BOM  ³ Autor ³ Eduardo Riera         ³ Data ³06.12.2001 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Ma410Impos()                                                 ³±±
±±³          ³Funcao de calculo dos impostos contidos no pedido de venda   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta funcao efetua os calculos de impostos (ICMS,IPI,ISS,etc)³±±
±±³          ³com base nas funcoes fiscais, a fim de possibilitar ao usua- ³±±
±±³          ³rio o valor de desembolso financeiro.                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function Ma410Bom(aHeader,aCols,nX)

Local aArea     := GetArea()
Local aBOM      := {}
Local aHeadBom  := {"",RetTitle("C6_PRODUTO"),RetTitle("C6_QTDVEN"),RetTitle("C6_DESCRI")}
Local nPProduto := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_PRODUTO"})
Local nPTES     := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_TES"})
Local nPQtdVen  := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_QTDVEN"})
Local nPPrcVen  := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_PRCVEN"})
Local nPItem    := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_ITEM"})
Local nPTotal   := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_VALOR"})
Local nY        := 0
Local nZ        := 0
Local cItem     := ""
Local lMA410BOM := ExistBlock("MA410BOM")
PRIVATE N := nX
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona registros                                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SB1")
dbSetOrder(1)
MsSeek(xFilial("SB1")+aCols[nX][nPProduto])
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica os produtos do primeiro nível da estrutura  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SG1")
dbSetOrder(1)
MsSeek(xFilial("SG1")+aCols[nX][nPProduto])
While !Eof() .And. xFilial("SG1") == SG1->G1_FILIAL .And.;
	aCols[nX][nPProduto] == SG1->G1_COD

	dbSelectArea("SB1")
	dbSetOrder(1)
	MsSeek(xFilial("SB1")+aCols[nX][nPProduto])
	If RetFldProd(SB1->B1_COD,"B1_FANTASM") <> "S" // Projeto Implementeacao de campos MRP e FANTASM no SBZ
		aadd(aBOM,{SG1->G1_COMP,ExplEstr(aCols[nX][nPQtdVen],dDataBase,"",SB1->B1_REVATU),SB1->B1_DESC})
	EndIf
	dbSelectArea("SG1")
	dbSkip()
EndDo

If lMA410BOM
	ExecBlock("MA410BOM",.F.,.F.,{aBOM})
Else
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Adiciona os produtos no aCols                        ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nX := 1 To Len(aBOM)
		cItem := aCols[Len(aCols)][nPItem]
		aadd(aCOLS,Array(Len(aHeader)+1))
		For nY	:= 1 To Len(aHeader)
			If ( AllTrim(aHeader[nY][2]) == "C6_ITEM" )
				aCols[Len(aCols)][nY] := Soma1(cItem)
			Else
				If (aHeader[nY,2] <> "C6_REC_WT") .And. (aHeader[nY,2] <> "C6_ALI_WT")				
					aCols[Len(aCols)][nY] := CriaVar(aHeader[nY][2])
				EndIf	
			EndIf
		Next nY
		N := Len(aCols)
		aCOLS[N][Len(aHeader)+1] := .F.
		A410Produto(aBom[nX][1],.F.)
		aCols[N][nPProduto]      := aBom[nX][1]
		A410MultT("M->C6_PRODUTO",aBom[nX][1])
		If ExistTrigger("C6_PRODUTO")
			RunTrigger(2,N,Nil,,"C6_PRODUTO")
		Endif

		A410SegUm(.T.)
		A410MultT("M->C6_QTDVEN",aBom[nX][2])
		If ExistTrigger("C6_QTDVEN ")
			RunTrigger(2,N,Nil,,"C6_QTDVEN ")
		Endif
		If Empty(aCols[N][nPTotal]) .Or. Empty(aCols[N][nPTES])
			aCOLS[N][Len(aHeader)+1] := .T.
		EndIf
	Next nX
Endif	

RestArea(aArea)
Return(.T.)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma410NFVP3³ Autor ³ Eduardo Riera         ³ Data ³           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma410NFVP3()

Local aArea := GetArea("SC5")
Local lQuery:= .F.
Local cAliasSB6 := "SB6"
Local nX    := 0

dbSelectArea("SC6")
dbSetOrder(1)
MsSeek(xFilial("SC6")+SC5->C5_NUM)

While !Eof() .And. SC6->C6_FILIAL == xFilial("SC6") .And. SC6->C6_NUM == SC5->C5_NUM
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Verifica os produto que possuem poder de terceiro neste cliente ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	dbSelectArea("SB6")
	dbSetOrder(2)
	#IFDEF TOP
	If TcSrvType()<>"AS/400"
		lQuery    := .T.
		cAliasSB6 := "F4PODER3_SQL"
		cQuery := "SELECT DISTINCT(SD1.R_E_C_N_O_) SD1RECNO,D1_TOTAL,D1_VALDESC,0 SD2RECNO,0 D2_TOTAL,0 D2_DESCON,D1_LOTECTL,D1_NUMLOTE,"
		cQuery += "B6_FILIAL,B6_PRODUTO,B6_CLIFOR,B6_LOJA,B6_PODER3,B6_IDENTB6,B6_TPCF,B6_QUANT,B6_QULIB "
		cQuery += "FROM "+RetSqlName("SB6")+" SB6 ,"
		cQuery += RetSqlName("SD2")+" SD2 "
		cQuery += "WHERE SB6.B6_FILIAL='"+xFilial("SB6")+"' AND "
		cQuery += "SB6.B6_PRODUTO='"+SC6->C6_PRODUTO+"' AND "
		cQuery += "SB6.B6_CLIFOR='"+SC5->C5_CLIENTE+"' AND "
		cQuery += "SB6.B6_LOJA='"+SC5->C5_LOJACLI+"' AND "
		cQuery += "SB6.B6_PODER3='R' AND "
		cQuery += "SB6.B6_TPCF = 'C' AND "
		cQuery += "SB6.D_E_L_E_T_=' ' AND "
		cQuery += "SB6.B6_TIPO='E' AND "
		cQuery += "SD2.D2_FILIAL='"+xFilial("SD2")+"' AND "
		cQuery += "SD2.D2_NUMSEQ=SB6.B6_IDENT AND "
		cQuery += "SD2.D_E_L_E_T_=' ' "
		cQuery += "UNION ALL "
		cQuery += "SELECT DISTINCT(0) SD1RECNO,0 D1_TOTAL,0 D1_VALDESC,SD2.R_E_C_N_O_ SD2RECNO,D2_TOTAL,D2_DESCON, '' D1_LOTECTL, '' D1_NUMLOTE,"
		cQuery += "B6_FILIAL,B6_PRODUTO,B6_CLIFOR,B6_LOJA,B6_PODER3,B6_IDENTB6,B6_TPCF,B6_QUANT,B6_QULIB "
		cQuery += "FROM "+RetSqlName("SB6")+" SB6 ,"
		cQuery += RetSqlName("SD1")+" SD1 "
		cQuery += "WHERE SB6.B6_FILIAL='"+xFilial("SB6")+"' AND "
		cQuery += "SB6.B6_PRODUTO='"+SC6->C6_PRODUTO+"' AND "
		cQuery += "SB6.B6_CLIFOR='"+SC5->C5_CLIENTE+"' AND "
		cQuery += "SB6.B6_LOJA='"+SC5->C5_LOJACLI+"' AND "
		cQuery += "SB6.B6_PODER3='D' AND "
		cQuery += "SB6.B6_TPCF = 'C' AND "
		cQuery += "SB6.D_E_L_E_T_=' ' AND "
		cQuery += "SB6.B6_TIPO='E' AND "
		cQuery += "SD1.D1_FILIAL='"+xFilial("SD1")+"' AND "
		cQuery += "SD1.D1_DOC=SB6.B6_DOC AND "
		cQuery += "SD1.D1_SERIE=SB6.B6_SERIE AND "
		cQuery += "SD1.D1_FORNECE=SB6.B6_CLIFOR AND "
		cQuery += "SD1.D1_LOJA=SB6.B6_LOJA AND "
		cQuery += "SD1.D1_LOCAL=SB6.B6_LOCAL AND "
		cQuery += "SD1.D1_COD=SB6.B6_PRODUTO AND "
		cQuery += "SD1.D1_IDENTB6=SB6.B6_IDENT AND "
		cQuery += "SD1.D1_QUANT=SB6.B6_QUANT AND "
		cQuery += "SD1.D_E_L_E_T_=' ' "

		cQuery := ChangeQuery(cQuery)

		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSB6,.T.,.T.)

		TcSetField(cAliasSD1,"D1_TOTAL","N",TamSx3("D1_TOTAL")[1], TamSx3("D1_TOTAL")[2] )
		TcSetField(cAliasSD1,"D1_VALDESC","N",TamSx3("D1_VALDESC")[1], TamSx3("D1_TOTAL")[2] )
		TcSetField(cAliasSD1,"D2_TOTAL","N",TamSx3("D2_TOTAL")[1], TamSx3("D2_TOTAL")[2] )
		TcSetField(cAliasSD1,"D2_DESCON","N",TamSx3("D2_DESCON")[1], TamSx3("D2_DESCON")[2] )
		TcSetField(cAliasSD1,"SD1RECNO","N",12, 0 )
		TcSetField(cAliasSD1,"SD2RECNO","N",12, 0 )
	Else
	#ENDIF
		If IsTriangular()
			MsSeek(xFilial("SB6")+cProduto)
		Else
			MsSeek(xFilial("SB6")+cProduto+cCliFor+cLoja,.F.)
		EndIf
	#IFDEF TOP
	EndIf
	#ENDIF
	While !Eof() .And. (cAliasSB6)->B6_FILIAL = xFilial("SB6") .And.;
		(cAliasSB6)->B6_PRODUTO == cProduto .And.;
		IIF(IsTriangular(),.T.,(cAliasSB6)->B6_CLIFOR == cCliFor .And.;
		(cAliasSB6)->B6_LOJA == cLoja )

		If lMtProcP3
			lProcessa := ExecBlock("MTPROCP3",.F.,.F.,{cAliasSB6,lQuery})
		Endif

		If lProcessa
			If ((cES == "E" .And. (cAliasSB6)->B6_TIPO == "E") .Or. (cES == "S" .And. (cAliasSB6)->B6_TIPO == "D") ) .And.;
				(cAliasSB6)->B6_TPCF==cTpCliFor
				If !lQuery
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Verificar qual eh a tabela de origem do poder de terceiros          ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If ((cAliasSB6)->B6_TIPO=="D" .And. (cAliasSB6)->B6_PODER3 == "R" ) .Or. ((cAliasSB6)->B6_TIPO=="E" .And. (cAliasSB6)->B6_PODER3 == "D")
						If (cAliasSB6)->B6_PODER3 == "R"
							dbSelectArea("SD1")
							dbSetOrder(4)
							MsSeek(xFilial("SD1")+(cAliasSB6)->B6_IDENT)
						Else
							dbSelectArea("SD1")
							dbSetOrder(1)
							MsSeek(xFilial("SD1")+(cAliasSB6)->B6_DOC+(cAliasSB6)->B6_SERIE+(cAliasSB6)->B6_CLIFOR+(cAliasSB6)->B6_LOJA+(cAliasSB6)->B6_PRODUTO)
							While !Eof() .And. xFilial("SD1") == SD1->D1_FILIAL .And.;
								(cAliasSB6)->B6_DOC == SD1->D1_DOC .And.;
								(cAliasSB6)->B6_SERIE == SD1->D1_SERIE .And.;
								(cAliasSB6)->B6_CLIFOR == SD1->D1_FORNECE .And.;
								(cAliasSB6)->B6_LOJA == SD1->D1_LOJA .And.;
								(cAliasSB6)->B6_PRODUTO == SD1->D1_COD
								If (cAliasSB6)->B6_IDENT==SD1->D1_IDENTB6 .And. (cAliasSB6)->B6_QUANT=SD1->D1_QUANT
									Exit
								EndIf
								dbSelectArea("SD1")
								dbSkip()
							EndDo
						EndIf
					Else
						If (cAliasSB6)->B6_PODER3=="R"
							dbSelectArea("SD2")
							dbSetOrder(4)
							MsSeek(xFilial("SD2")+(cAliasSB6)->B6_IDENT)
						Else
							dbSelectArea("SD2")
							dbSetOrder(3)
							MsSeek(xFilial("SD2")+(cAliasSB6)->B6_DOC+(cAliasSB6)->B6_SERIE+(cAliasSB6)->B6_CLIFOR+(cAliasSB6)->B6_LOJA+(cAliasSB6)->B6_PRODUTO)
							While !Eof() .And. xFilial("SD2") == SD2->D2_FILIAL .And.;
								(cAliasSB6)->B6_DOC == SD2->D2_DOC .And.;
								(cAliasSB6)->B6_SERIE == SD2->D2_SERIE .And.;
								(cAliasSB6)->B6_CLIFOR == SD2->D2_CLIENTE .And.;
								(cAliasSB6)->B6_LOJA == SD2->D2_LOJA .And.;
								(cAliasSB6)->B6_PRODUTO == SD2->D2_COD
								If (cAliasSB6)->B6_IDENT==SD2->D2_IDENTB6 .And. (cAliasSB6)->B6_QUANT=SD2->D2_QUANT
									Exit
								EndIf
								dbSelectArea("SD2")
								dbSkip()
							EndDo
						EndIf
					EndIf
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Calculo do saldo em valor e quantidade para devolucao de terceiros  ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nSldQtd := 0
				nSldBru := 0
				nSldLiq := 0
				If (cAliasSB6)->B6_PODER3 == "R" .And. (SB6->(FieldPos("B6_IDENTB6"))==0 .Or. Empty((cAliasSB6)->B6_IDENTB6))
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Na primeira remessa deve-se tirar os valores contidos na interface  ³
					//³ para evitar baixa de saldo maior que o disponivel                   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If cES == "E"
						For nX := 1 To Len(aCols)
							If nX <> N .And. !aCols[nX][Len(aHeader)+1] .And. aCols[nX][nPIdentB6]==(cAliasSB6)->B6_IDENT
								nSldQtd -= aCols[nX][nPQuant]
								nSldBru -= aCols[nX][nPValor]
							EndIf
						Next nX
					Else
						For nX := 1 To Len(aCols)
							If nX <> N .And. !aCols[nX][Len(aHeader)+1] .And. aCols[nX][nPIdentB6]==(cAliasSB6)->B6_IDENT
								nSldQtd -= aCols[nX][nPQuant]
								nSldLiq -= aCols[nX][nPValor]
								
								//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
								//³ Desconsidera a quantidade ja faturada                               ³
								//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
								If !Empty( cNumPV )
									SC6->( dbSetOrder( 1 ) )
									If SC6->( MsSeek( xFilial( "SC6" ) + cNumPv + aCols[nX, nPItem ] ) )
										nSldQtd += SC6->C6_QTDENT
										nSldLiq += aCols[nX,nPUnit] * SC6->C6_QTDENT
										nSldLiq := A410Arred( nSldLiq, "C6_VALOR" )
									EndIf
								EndIf
								
							EndIf
						Next nX
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Calculo do saldo do poder de terceiros                              ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nSldQtd  += (cAliasSB6)->B6_QUANT-(cAliasSB6)->B6_QULIB
				Else
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Calculo do saldo do poder de terceiros                              ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nSldQtd  -= (cAliasSB6)->B6_QUANT-(cAliasSB6)->B6_QULIB
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verificar qual eh a tabela de origem do poder de terceiros e calcula³
				//³ o valor total do saldo de poder de/em terceiros                     ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ((cAliasSB6)->B6_TIPO=="D" .And. (cAliasSB6)->B6_PODER3 == "R" ) .Or. ((cAliasSB6)->B6_TIPO=="E" .And. (cAliasSB6)->B6_PODER3 == "D")
					If (cAliasSB6)->B6_PODER3 == "R"
						nSldLiq += (cAliasSD1)->D1_TOTAL-(cAliasSD1)->D1_VALDESC
						nSldBru += nSldLiq+A410Arred(nSldLiq*(cAliasSD1)->D1_VALDESC/((cAliasSD1)->D1_TOTAL-(cAliasSD1)->D1_VALDESC),"C6_VALOR")
					Else
						nSldLiq -= (cAliasSD1)->D1_TOTAL-(cAliasSD1)->D1_VALDESC
						nSldBru -= Abs(nSldLiq)+A410Arred(Abs(nSldLiq)*(cAliasSD1)->D1_VALDESC/((cAliasSD1)->D1_TOTAL-(cAliasSD1)->D1_VALDESC),"C6_VALOR")
					EndIf
				Else
					If (cAliasSB6)->B6_PODER3 == "R"
						nSldBru += (cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_DESCON
						nSldLiq += nSldBru-A410Arred(nSldBru*(cAliasSD2)->D2_DESCON/((cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_DESCON),"C6_VALOR")
					Else
						nSldBru -= (cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_DESCON
						nSldLiq -= Abs(nSldBru)-A410Arred(Abs(nSldBru)*(cAliasSD2)->D2_DESCON/((cAliasSD2)->D2_TOTAL+(cAliasSD2)->D2_DESCON),"C6_VALOR")
					EndIf
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Atualiza o arquivo temporario com os dados do poder de terceiro     ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea(cAliasTRB)
				dbSetOrder(3)
				If nSldQtd <> 0 .Or. nSldLiq <> 0
					If !Empty((cAliasSB6)->B6_IDENTB6)
						(cAliasTRB)->(MsSeek((cAliasSB6)->B6_IDENTB6))
					Else
						(cAliasTRB)->(MsSeek((cAliasSB6)->B6_IDENT))
					EndIf
					If (cAliasTRB)->(!Found())
						RecLock(cAliasTRB,.T.)
						For nX := 1 To Len(aStruTRB)
							If !AllTrim(aStruTRB[nX][1])$"B6_SALDO#B6_TOTALL#B6_TOTALB#B6_QULIB"
								If (cAliasSB6)->(FieldPos(aStruTRB[nX][1]))<>0 .And. (cAliasTrb)->(FieldPos(aStruTRB[nX][1]))<>0
									(cAliasTRB)->(FieldPut(nX,(cAliasSB6)->(FieldGet(FieldPos(aStruTRB[nX][1])))))
								EndIf
							EndIf
						Next nX
					Else
						RecLock(cAliasTRB)
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Verifica o documento original para obter alguns dados posteriores   ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If (cAliasSB6)->B6_PODER3 == "R" .And. (SB6->(FieldPos("B6_IDENTB6"))==0 .Or. Empty((cAliasSB6)->B6_IDENTB6))
						For nX := 1 To Len(aStruTRB)
							If !AllTrim(aStruTRB[nX][1])$"B6_SALDO#B6_TOTALL#B6_TOTALB#B6_QULIB"
								If (cAliasSB6)->(FieldPos(aStruTRB[nX][1]))<>0 .And. (cAliasTrb)->(FieldPos(aStruTRB[nX][1]))<>0
									(cAliasTRB)->(FieldPut(nX,(cAliasSB6)->(FieldGet(FieldPos(aStruTRB[nX][1])))))
								EndIf
							EndIf
						Next nX
						If (cAliasSB6)->B6_TIPO=="D"
							(cAliasTRB)->SD1RECNO := IIf(lQuery,(cAliasSD1)->SD1RECNO,SD1->(RecNo()))
						Else
							(cAliasTRB)->SD2RECNO := IIf(lQuery,(cAliasSD2)->SD2RECNO,SD2->(RecNo()))
						EndIf
					EndIf
					(cAliasTRB)->B6_SALDO += a410Arred(nSldQtd,"C6_QTDVEN")
					(cAliasTRB)->B6_QULIB += a410Arred((cAliasSB6)->B6_QULIB,"C6_QTDVEN")
					(cAliasTRB)->B6_TOTALL+= nSldLiq
					(cAliasTRB)->B6_TOTALB+= nSldBru
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Calcula o valor unitario do poder de terceiros                      ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					(cAliasTRB)->B6_PRCVEN:= a410Arred((cAliasTRB)->B6_TOTALL/((cAliasTRB)->B6_SALDO+(cAliasTRB)->B6_QULIB),"D2_PRCVEN")
					(cAliasTRB)->B6_PRUNIT:= a410Arred((cAliasTRB)->B6_TOTALB/((cAliasTRB)->B6_SALDO+(cAliasTRB)->B6_QULIB),"D2_PRCVEN")
					If cES == "E"
						(cAliasTRB)->D2_LOTECTL:= (cAliasSD2)->D2_LOTECTL
						(cAliasTRB)->D2_NUMLOTE:= (cAliasSD2)->D2_NUMLOTE
					Else
						(cAliasTRB)->D1_LOTECTL:= (cAliasSD1)->D1_LOTECTL
						(cAliasTRB)->D1_NUMLOTE:= (cAliasSD1)->D1_NUMLOTE
					EndIf
					MsUnLock()
				EndIf
			EndIf
		EndIf
		dbSelectArea(cAliasSB6)
		dbSkip()
	EndDo
EndDo
If lQuery
	dbSelectArea(cAliasSB6)
	dbCloseArea()
	dbSelectArea("SB6")
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Retira os documentos totalmente devolvidos                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cAliasTRB)
dbClearIndex()
dbGotop()
While !Eof()
	If (cAliasTRB)->B6_SALDO<=0
		dbDelete()
	EndIf
	dbSkip()
EndDo
Pack
aNomInd := {}
For nX := 1 To Len(aChave)
	aadd(aNomInd,SubStr(cNomeTrb,1,7)+chr(64+nX))
	IndRegua(cAliasTRB,aNomInd[nX],aChave[nX])
Next nX
dbClearIndex()
For nX := 1 To Len(aNomInd)
	dbSetIndex(aNomInd[nX])
Next nX
dbSetOrder(1)
dbGotop()
PRIVATE aHeader := aHeadTRB
xPesq := aPesq[(cAliasTRB)->(IndexOrd())][1]
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Posiciona registros                                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If cTpCliFor == "C"
	dbSelectArea("SA1")
	dbSetOrder(1)
	MsSeek(xFilial("SA1")+cCliFor+cLoja)
Else
	dbSelectArea("SA2")
	dbSetOrder(1)
	MsSeek(xFilial("SA2")+cCliFor+cLoja)
EndIf
dbSelectArea("SB1")
dbSetOrder(1)
MsSeek(xFilial("SB1")+cProduto)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Calcula as coordenadas da interface                                 ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aSize[1] /= 1.5
aSize[2] /= 1.5
aSize[3] /= 1.5
aSize[4] /= 1.3
aSize[5] /= 1.5
aSize[6] /= 1.3
aSize[7] /= 1.5

AAdd( aObjects, { 100, 020,.T.,.F.,.T.} )
AAdd( aObjects, { 100, 060,.T.,.T.} )
AAdd( aObjects, { 100, 020,.T.,.F.} )
aInfo   := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
aPosObj := MsObjSize( aInfo, aObjects,.T.)

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Interface com o usuario                                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !(cAliasTRB)->(Eof())
	DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0075) FROM aSize[7],000 TO aSize[6],aSize[5] OF oMainWnd PIXEL //"Documentos de Origem"
	@ aPosObj[1,1],aPosObj[1,2] MSPANEL oPanel PROMPT "" SIZE aPosObj[1,3],aPosObj[1,4] OF oDlg CENTERED LOWERED
	If !IsTriangular()
		If cTpCliFor == "C"
			cTexto1 := AllTrim(RetTitle("F2_CLIENTE"))+"/"+AllTrim(RetTitle("F2_LOJA"))+": "+SA1->A1_COD+"/"+SA1->A1_LOJA+"  -  "+RetTitle("A1_NOME")+": "+SA1->A1_NOME
		Else
			cTexto1 := AllTrim(RetTitle("F1_FORNECE"))+"/"+AllTrim(RetTitle("F1_LOJA"))+": "+SA2->A2_COD+"/"+SA2->A2_LOJA+"  -  "+RetTitle("A2_NOME")+": "+SA2->A2_NOME
		EndIf
	Else
		cTexto1 := STR0076 //"Operacao Triangular"
	EndIf
	@ 002,005 SAY cTexto1 SIZE aPosObj[1,3],008 OF oPanel PIXEL
	cTexto2 := AllTrim(RetTitle("B1_COD"))+": "+SB1->B1_COD+"/"+SB1->B1_DESC
	@ 012,005 SAY cTexto2 SIZE aPosObj[1,3],008 OF oPanel PIXEL
	oGetDb := MsGetDB():New(aPosObj[2,1],aPosObj[2,2],aPosObj[2,3],aPosObj[2,4],1,"Allwaystrue","allwaystrue","",.F., , ,.F., ,cAliasTRB)

	DEFINE SBUTTON FROM aPosObj[3,1]+000,aPosObj[3,4]-030 TYPE 1 ACTION (nOpcA := 1,oDlg:End()) ENABLE OF oDlg
	DEFINE SBUTTON FROM aPosObj[3,1]+012,aPosObj[3,4]-030 TYPE 2 ACTION (nOpcA := 0,oDlg:End()) ENABLE OF oDlg

	@ aPosObj[3,1]+00,aPosObj[3,2]+00 SAY OemToAnsi(STR0077) PIXEL //"Pesquisar por:"
	@ aPosObj[3,1]+12,aPosObj[3,2]+00 SAY OemToAnsi(STR0078) PIXEL //"Localizar"
	@ aPosObj[3,1]+00,aPosObj[3,2]+40 MSCOMBOBOX oCombo VAR cCombo ITEMS aOrdem SIZE 100,044 OF oDlg PIXEL ;
	VALID ((cAliasTRB)->(dbSetOrder(oCombo:nAt)),(cAliasTRB)->(dbGotop()),xPesq := aPesq[(cAliasTRB)->(IndexOrd())][1],.T.)
	@ aPosObj[3,1]+12,aPosObj[3,2]+40 MSGET oGet VAR xPesq Of oDlg PICTURE aPesq[(cAliasTRB)->(IndexOrd())][2] PIXEL ;
	VALID ((cAliasTRB)->(MsSeek(Iif(ValType(xPesq)=="C",AllTrim(xPesq),xPesq),.T.)),.T.).And.IIf(oGetDb:oBrowse:Refresh()==Nil,.T.,.T.)
	ACTIVATE MSDIALOG oDlg CENTERED
Else
	Help(" ",1,"F4NAONOTA")
	lRetorno := .F.
EndIf
If nOpcA == 1
	lRetorno := .T.
	aHeader   := aClone(aSavHead)
	If cES == "S"
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica os campos a serem atualizados                              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nPNfOri   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NFORI"})
		nPSerOri  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_SERIORI"})
		nPItemOri := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEMORI"})
		nPLocal   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCAL"})
		nPPrUnit  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRUNIT"})
		nPPrcVen  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN"})
		nPQuant   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
		nPQuant2UM:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_UNSVEN"})
		nPLoteCtl := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOTECTL"})
		nPNumLote := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMLOTE"})
		nPDtValid := aScan(aHeader,{|x| AllTrim(x[2])=="C6_DTVALID"})
		nPPotenc  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_POTENCI"})
		nPValor   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALOR"})
		nPValDesc := aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALDESC"})
		nPIdentB6 := aScan(aHeader,{|x| AllTrim(x[2])=="C6_IDENTB6"})
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Posiciona registros                                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SD1->(MsGoto((cAliasTRB)->SD1RECNO))
		SF4->(dbSetOrder(1))
		SF4->(MsSeek(xFilial("SF4")+aCols[n][nPTES]))
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Preenche acols                                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPIdentB6 <> 0
			aCols[N][nPIdentB6] := (cAliasTRB)->B6_IDENT
		EndIf
		If nPNfOri <> 0
			aCols[N][nPNfOri] := SD1->D1_DOC
		EndIf
		If nPSerOri <> 0
			aCols[N][nPSerOri] := SD1->D1_SERIE
		EndIf
		If nPItemOri <> 0
			aCols[N][nPItemOri] := SD1->D1_ITEM
		EndIf
		If nPPrUnit <> 0
			If (cAliasTRB)->B6_PRUNIT == (cAliasTRB)->B6_PRCVEN .And. Abs((cAliasTRB)->B6_PRCVEN-SD1->D1_VUNIT)<=.01
				aCols[N][nPPrUnit] := 0
			Else
				aCols[N][nPPrUnit] := A410Arred((cAliasTRB)->B6_PRUNIT,"C6_PRUNIT")
			EndIf
		EndIf
		If nPPrcVen <> 0
			If (cAliasTRB)->B6_PRUNIT == (cAliasTRB)->B6_PRCVEN .And. Abs((cAliasTRB)->B6_PRCVEN-SD1->D1_VUNIT)<=.01
				aCols[N][nPPrcVen] := A410Arred(SD1->D1_VUNIT,"C6_PRCVEN")
			Else
				aCols[N][nPPrcVen] := A410Arred((cAliasTRB)->B6_PRCVEN,"C6_PRCVEN")
			EndIf
		EndIf
		If nPQuant <> 0 .And. (aCols[N][nPQuant] > (cAliasTRB)->B6_SALDO .Or. aCols[N][nPQuant] == 0 )
			aCols[N][nPQuant] := Min((cAliasTRB)->B6_SALDO,A410SNfOri(cCliFor,cLoja,SD1->D1_DOC,SD1->D1_SERIE,"",SD1->D1_COD,(cAliasTRB)->B6_IDENT,aCols[n][nPosLocal])[1])
			If nPQuant2UM <> 0
				aCols[N][nPQuant2UM] := ConvUm(cProduto,aCols[N][nPQuant],0,2)
			EndIf
		EndIf
		If Rastro(cProduto) .And. SF4->F4_ESTOQUE=="S"
			If nPLoteCtl <> 0
				aCols[N][nPLoteCtl] := SD1->D1_LOTECTL
			EndIf
			If nPNumLote <> 0
				aCols[N][nPNumLote] := SD1->D1_NUMLOTE
			EndIf
			If nPDtValid <> 0 .Or. nPPotenc <> 0
				dbSelectArea("SB8")
				dbSetOrder(3)
				If MsSeek(xFilial("SB8")+cProduto+aCols[N][nPLocal]+aCols[n][nPLoteCtl]+IIf(Rastro(cProduto,"S"),aCols[N][nPNumLote],""))
					If nPDtValid <> 0
						aCols[n][nPDtValid] := SB8->B8_DTVALID
					EndIf
					If nPPotenc <> 0
						aCols[n][nPPotenc] := SB8->B8_POTENCI
					EndIf
				EndIf
			EndIf
		EndIf
		A410MultT("C6_QTDVEN",aCols[N,nPQuant])
		A410MultT("C6_PRCVEN",aCols[N,nPPrcVen])
		If nPValDesc <> 0 .And. nPPrUnit > 0
			If aCols[n][nPPrUnit]<>0
				aCols[n][nPValDesc] := a410Arred((aCols[n][nPPrUnit]-aCols[n][nPPrcVen])*IIf(aCols[n][nPQuant]==0,1,aCols[n][nPQuant]),"C6_VALDESC")
				A410MultT("C6_VALDESC",aCols[n][nPValDesc])
			EndIf
		EndIf
		If nPLocal <> 0
			aCols[N][nPLocal] := SD1->D1_LOCAL
			// Pesquisa os armazens dos movimentos do controle de qualidade
			If SD1->D1_LOCAL == cLocalCQ
				// Monta array com os armazens tratados na movimentacao do CQ
				cSeekSD7   := xFilial('SD7')+SD1->D1_NUMCQ+SD1->D1_COD+SD1->D1_LOCAL
				SD7->(dbSetOrder(1))
				SD7->(dbSeek(cSeekSD7))
				Do While !SD7->(Eof()) .And. cSeekSD7 == SD7->D7_FILIAL+SD7->D7_NUMERO+SD7->D7_PRODUTO+SD7->D7_LOCAL
					If SD7->D7_TIPO >= 1 .And. SD7->D7_TIPO <= 2 .And. SD7->D7_ESTORNO # 'S'
						If aScan(aArmazensCQ,SD7->D7_LOCDEST) == 0
							AADD(aArmazensCQ,SD7->D7_LOCDEST)
						EndIf
					EndIf
					SD7->(dbSkip())
				EndDo
				// Monta texto para apresentacao no combobox
				If Len(aArmazensCQ) > 1
					nOpca:=0
					For nx:=1 to Len(aArmazensCQ)
						AADD(aTextoCQ,OemToAnsi(STR0046)+" "+aArmazensCQ[nx])
					Next nx
					DEFINE MSDIALOG oDlg TITLE OemToAnsi(STR0084) From 130,70 To 270,360 OF oMainWnd PIXEL
					@ 05,13 SAY OemToAnsi(STR0085) OF oDlg PIXEL SIZE 110,9
					@ 17,13 TO 42,122 LABEL "" OF oDlg  PIXEL
					@ 23,17 MSCOMBOBOX oCombo VAR cCombo ITEMS aTextoCQ SIZE 100,044 OF oDlg PIXEL ON CHANGE (cLocalCQ:=aArmazensCQ[oCombo:nAt])
					DEFINE SBUTTON FROM 50,072 TYPE 1 Action (nOpca:=1,oDlg:End()) ENABLE OF oDlg PIXEL
					DEFINE SBUTTON FROM 50,099 TYPE 2 ACTION oDlg:End() ENABLE OF oDlg PIXEL
					ACTIVATE MSDIALOG oDlg
					// Utiliza armazem relacionado ao movimento do CQ
					If nOpca == 1
						aCols[N][nPLocal] := cLocalCQ
					EndIf
				ElseIf Len(aArmazensCQ) > 0
					aCols[N][nPLocal] := aArmazensCQ[1]
				EndIf
			EndIf
		EndIf
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Verifica os campos a serem atualizados                              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nPNfOri   := aScan(aHeader,{|x| AllTrim(x[2])=="D1_NFORI"})
		nPSerOri  := aScan(aHeader,{|x| AllTrim(x[2])=="D1_SERIORI"})
		nPItemOri := aScan(aHeader,{|x| AllTrim(x[2])=="D1_ITEMORI"})
		nPLocal   := aScan(aHeader,{|x| AllTrim(x[2])=="D1_LOCAL"})
		nPPrcVen  := aScan(aHeader,{|x| AllTrim(x[2])=="D1_VUNIT"})
		nPQuant   := aScan(aHeader,{|x| AllTrim(x[2])=="D1_QUANT"})
		nPQuant2UM:= aScan(aHeader,{|x| AllTrim(x[2])=="D1_QTSEGUM"})
		nPLoteCtl := aScan(aHeader,{|x| AllTrim(x[2])=="D1_LOTECTL"})
		nPNumLote := aScan(aHeader,{|x| AllTrim(x[2])=="D1_NUMLOTE"})
		nPDtValid := aScan(aHeader,{|x| AllTrim(x[2])=="D1_DTVALID"})
		nPPotenc  := aScan(aHeader,{|x| AllTrim(x[2])=="D1_POTENCI"})
		nPValor   := aScan(aHeader,{|x| AllTrim(x[2])=="D1_TOTAL"})
		nPValDesc := aScan(aHeader,{|x| AllTrim(x[2])=="D1_VALDESC"})
		nPDesc    := aScan(aHeader,{|x| AllTrim(x[2])=="D1_DESC"})
		nPIdentB6 := aScan(aHeader,{|x| AllTrim(x[2])=="D1_IDENTB6"})
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Posiciona registros                                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		SD2->(MsGoto((cAliasTRB)->SD2RECNO))
		SF4->(dbSetOrder(1))
		SF4->(MsSeek(xFilial("SF4")+aCols[n][nPTES]))
		nRegistro := (cAliasTRB)->SD2RECNO
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Preenche acols                                                      ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If nPIdentB6 <> 0
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³ Libera a trava obtida                                               ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If FindFunction( "LEAVE1CODE" )
				cAntB6Ident := aCols[ n, nPIdentB6 ]
				If !Empty( cAntB6Ident ) .And. cAntB6Ident <> (cAliasTRB)->B6_IDENT
					Leave1Code( "SD1_D1_IDENTB6" + cAntB6Ident )
				EndIf
			EndIf

			aCols[N][nPIdentB6] := (cAliasTRB)->B6_IDENT
		EndIf
		If nPNfOri <> 0
			aCols[N][nPNfOri] := SD2->D2_DOC
		EndIf
		If nPSerOri <> 0
			aCols[N][nPSerOri] := SD2->D2_SERIE
		EndIf
		If nPItemOri <> 0
			aCols[N][nPItemOri] := SD2->D2_ITEM
		EndIf
		If nPLocal <> 0
			aCols[N][nPLocal] := SD2->D2_LOCAL
		EndIf
		If nPPrcVen <> 0
			If (cAliasTRB)->B6_PRUNIT == (cAliasTRB)->B6_PRCVEN .And. Abs((cAliasTRB)->B6_PRCVEN-SD2->D2_PRCVEN)<=.01
				aCols[N][nPPrcVen] := A410Arred(SD2->D2_PRCVEN,"D1_VUNIT")
			Else
				aCols[N][nPPrcVen] := A410Arred((cAliasTRB)->B6_PRUNIT,"D1_VUNIT")
			EndIf
		EndIf
		If nPQuant <> 0 .And. ( aCols[N][nPQuant] > (cAliasTRB)->B6_SALDO .Or. aCols[N][nPQuant]==0 )
			aCols[N][nPQuant] := (cAliasTRB)->B6_SALDO
			If nPQuant2UM <> 0
				aCols[N][nPQuant2UM] := ConvUm(cProduto,aCols[N][nPQuant],0,2)
			EndIf
		EndIf
		If Rastro(cProduto) .And. SF4->F4_ESTOQUE=="S"
			If nPLoteCtl <> 0
				aCols[N][nPLoteCtl] := SD2->D2_LOTECTL
			EndIf
			If nPNumLote <> 0
				aCols[N][nPNumLote] := SD2->D2_NUMLOTE
			EndIf
			If nPDtValid <> 0 .Or. nPPotenc <> 0
				dbSelectArea("SB8")
				dbSetOrder(3)
				If MsSeek(xFilial("SB8")+cProduto+aCols[N][nPLocal]+aCols[n][nPLoteCtl]+IIf(Rastro(cProduto,"S"),aCols[N][nPNumLote],""))
					If nPDtValid <> 0
						aCols[n][nPDtValid] := SB8->B8_DTVALID
					EndIf
					If nPPotenc <> 0
						aCols[n][nPPotenc] := SB8->B8_POTENCI
					EndIf
				EndIf
			EndIf
		EndIf
		If nPValDesc <> 0 .And. nPQuant <> 0 .And. nPDesc <> 0
			aCols[n][nPValDesc] := a410Arred(((cAliasTRB)->B6_PRUNIT-(cAliasTRB)->B6_PRCVEN)*IIf(aCols[n][nPQuant]==0,1,aCols[n][nPQuant]),"D1_VALDESC")
		EndIf
		aCols[n][nPValor] := a410Arred(IIf(aCols[n][nPQuant]==0,1,aCols[n][nPQuant])*aCols[n][nPPrcVen],"D1_TOTAL")
	EndIf
	If !Empty(cReadVar)
		
		Do Case
			Case cReadVar $ "M->C6_QTDVEN"
				&(cReadVar) := aCols[n][nPQuant]
			Case cReadVar $ "M->C6_UNSVEN"
				&(cReadVar) := aCols[n][nPQuant2UM]
			OtherWise
				&(cReadVar) := aCols[n][nPQuant]
		EndCase
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura a integridade da rotina                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea(cAliasTRB)
dbCloseArea()
RestArea(aArea)
SetFocus(nHandle)
Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³MA410Fluxo³ Autor ³ Eduardo Riera         ³ Data ³12.07.2005 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Funcao de calculo do fluxo de caixa para o pedido de venda   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Numero do Pedido                                      ³±±
±±³          ³ExpL2: Indica se deve tratar a condicao de pagamento    (OPC)³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpA1:[1] Data de vencimento                                 ³±±
±±³          ³      [2] Valor para o fluxo                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta funcao efetua o calculo do valor do pedido de venda para³±±
±±³          ³o fluxo de caixa.                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function Ma410Fluxo(cNumPv,lSoma)

Local aArea		:= GetArea()
Local aAreaSA1	:= SA1->(GetArea())
Local aAreaSD1  := SD1->(GetArea())
Local aImpostos := {}
Local aFluxo    := {}
Local aFluxoTmp := {}
Local aFisGet	:= {}
Local aFisGetSC5:= {}
Local aEntr     := {}
Local nX        := 0
Local nY        := 0
Local nZ        := 0
Local nAcerto   := 0
Local nPrcLista := 0
Local nPSuframa := 0
Local nValMerc  := 0
Local nDesconto := 0
Local nAcresFin := 0
Local nQtdPeso  := 0
Local nRecOri   := 0
Local nPosEntr  := 0
Local nItem     := 0
Local cAliasSC6 := "SC6"
Local lQuery    := .F.
Local nTotDesc  := 0
Local lM410Ipi	:= ExistBlock("M410IPI")  
Local lReprocAID:= .T.
Local dData		:= dDataBase     
Local aTransp	:= {"",""}
#IFDEF TOP
	Local cQuery   := ""
	Local aStruSC6 := {}
#ENDIF
Local nAcresUnit:= 0	// Valor do acrescimo financeiro do valor unitario
Local nAcresTot := 0	// Somatoria dos Valores dos acrescimos financeiros dos itens
Local nlValor	:= 0
Local cImpRet 	 := ""
Local nValRetImp := 0 
Local cFilSC6	:= xFilial("SC6")
Local cFilAID	:= ""

DEFAULT lSoma   := .F.  
DEFAULT __lM410REC	:= ExistBlock("M410REC") 

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se foi calculado                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If AliasInDic("AID")
	 cFilAID	:= xFilial("AID")
	dbSelectArea("AID")
	dbSetOrder(1)
	If MsSeek(cFilAID+cNumPv)
		While !Eof() .And. cFilAID == AID->AID_FILIAL .And. cNumPv == AID->AID_NUMPV
			aadd(aFluxo,{AID->AID_DATA,AID->AID_VALOR})
			dbSelectArea("AID")
			dbSkip()
		 EndDo
	EndIf
EndIf       

If __lM410REC
	lReprocAID	:= ExecBlock("M410REC",.F.,.F., {cNumPv, aFluxo} )
EndIf

If lReprocAID     

	If !Empty(aFluxo)
		#IFDEF TOP
				lQuery    := .T.
				cAliasSC6 := "Ma410Fl"
				aStruSC6  := SC6->(dbStruct())
				cQuery    := "SELECT * "
				cQuery    += "FROM "+RetSqlName("SC6")+" SC6 "
					cQuery    += "WHERE SC6.C6_FILIAL='"+cFilSC6+"' AND "
				cQuery    += "SC6.C6_NUM='"+cNumPV+"' AND "
				cQuery    += "SC6.C6_BLQ NOT IN('R ','S ') AND "
				cQuery 	  += " SC6.C6_ENTREG < '" + DtoS(dDataBase) +"' AND "
				cQuery    += "SC6.D_E_L_E_T_=' ' "
	
				cQuery := ChangeQuery(cQuery)
				dbUseArea(.T.,"TOPCONN",cAliasSC6,TcGenQry(,,cQuery))
	
				For nX := 1 To Len(aStruSC6)
					If aStruSC6[nX][2] <> "C" .And. aStruSC6[nX][2] <> "M"
						TcSetField(cAliasSC6,aStruSC6[nX][1],aStruSC6[nX][2],aStruSC6[nX][3],aStruSC6[nX][4])
					EndIf
				Next nX
		#ELSE
				MsSeek(cFilSC6+cNumPV)
		#ENDIF
	
		While !Eof() .And. cFilSC6 == (cAliasSC6)->C6_FILIAL .And. cNumPV == (cAliasSC6)->C6_NUM
			//Se tiver C6 atrasado, zera o aFluxo e seta
			If (cAliasSC6)->C6_ENTREG < dDataBase
						aFluxo	:= {}
				EndIf
			(cAliasSC6)->( DbSkip() )
		EndDo
		If lQuery
			dbSelectArea(cAliasSC6)
			dbCloseArea()
			dbSelectArea("SC6")
			lQuery:=.F.
		EndIf 
	Endif	
Endif
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Posiciona o Pedido de Venda                  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
SA4->(dbSetOrder(1))
dbSelectArea("SC5")
dbSetOrder(1)  
If Empty(aFluxo) .And. MsSeek(xFilial("SC5")+cNumPV)  .And. !SC5->C5_TIPO$"DB"
	//If SoftLock("SC5")
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Busca as referencias fiscais                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aFisGet	:= MaFisRelImp("MATA461",{"SC6"})
		aSort(aFisGet,,,{|x,y| x[3]<y[3]})
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Busca referencias no SC5                     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aFisGetSC5	:= MaFisRelImp("MATA461",{"SC5"})
		aSort(aFisGetSC5,,,{|x,y| x[3]<y[3]})

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Posiciona a trasnportadora³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If SA4->(dbSeek(xFilial("SA4")+SC5->C5_TRANSP))
			aTransp[01] := SA4->A4_EST
			aTransp[02] := Iif(SA4->(FieldPos("A4_TPTRANS")) > 0,SA4->A4_TPTRANS,"")
		Endif
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Inicializa a funcao fiscal                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		MaFisSave()
		MaFisEnd()
		MaFisIni(Iif(Empty(SC5->C5_CLIENT),SC5->C5_CLIENTE,SC5->C5_CLIENT),;
			SC5->C5_LOJAENT,;
			IIf(SC5->C5_TIPO$'DB',"F","C"),;
			SC5->C5_TIPO,;
			SC5->C5_TIPOCLI,;
			Nil,;
			Nil,;
			Nil,;
			Nil,;
			"MATA461",; 
			Nil,;
			Nil,;
			Nil,;
			Nil,;
			Nil,;
			Nil,;
			Nil,;
			aTransp,,,,SC5->C5_CLIENTE,SC5->C5_LOJACLI,,,SC5->C5_TPFRETE)

		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Realiza alteracoes de referencias do SC5         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If Len(aFisGetSC5) > 0
			dbSelectArea("SC5")
			For nX := 1 to Len(aFisGetSC5)
				If !Empty(&(aFisGetSC5[nX][2]))
					MaFisAlt(aFisGetSC5[nX][1],&(aFisGetSC5[nX][2]),nItem,.T.)
				EndIf
			Next nX
		EndIf

		If cPaisLoc == 'ARG'
			SA1->(DbSetOrder(1))
			SA1->(MsSeek(xFilial()+IIf(!Empty(SC5->C5_CLIENT),SC5->C5_CLIENT,SC5->C5_CLIENTE)+SC5->C5_LOJAENT))
			MaFisAlt('NF_SERIENF',LocXTipSer('SA1',MVNOTAFIS))
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Agrega os itens para a funcao fiscal         ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SC6")
		dbSetOrder(1)
		#IFDEF TOP
			lQuery    := .T.
			cAliasSC6 := "Ma410Fluxo"
			aStruSC6  := SC6->(dbStruct())
			cQuery    := "SELECT * "
			cQuery    += "FROM "+RetSqlName("SC6")+" SC6 "
				cQuery    += "WHERE SC6.C6_FILIAL='"+cFilSC6+"' AND "
			cQuery    += "SC6.C6_NUM='"+cNumPV+"' AND "
			cQuery    += "SC6.C6_BLQ NOT IN('R ','S ') AND "
			cQuery    += "SC6.D_E_L_E_T_=' ' "

			cQuery := ChangeQuery(cQuery)
			dbUseArea(.T.,"TOPCONN",cAliasSC6,TcGenQry(,,cQuery))

			For nX := 1 To Len(aStruSC6)
				If aStruSC6[nX][2] <> "C" .And. aStruSC6[nX][2] <> "M"
					TcSetField(cAliasSC6,aStruSC6[nX][1],aStruSC6[nX][2],aStruSC6[nX][3],aStruSC6[nX][4])
				EndIf
			Next nX
		#ELSE
			MsSeek(cFilSC6+cNumPV)
		#ENDIF
			While !Eof() .And. cFilSC6 == (cAliasSC6)->C6_FILIAL .And. cNumPV == (cAliasSC6)->C6_NUM
			If !Substr((cAliasSc6)->C6_BLQ,1,1) $"RS" .And. Empty((cAliasSc6)->C6_BLOQUEI)
				nItem++
				If !Empty((cAliasSC6)->C6_NFORI) .And. !Empty((cAliasSC6)->C6_ITEMORI)
					SD1->(dbSetOrder(1))
					If SD1->(MSSeek(xFilial("SD1")+(cAliasSC6)->C6_NFORI+(cAliasSC6)->C6_SERIORI+SC5->C5_CLIENTE+SC5->C5_LOJACLI+(cAliasSC6)->C6_PRODUTO+(cAliasSC6)->C6_ITEMORI))
						nRecOri := SD1->(Recno())
					Endif
				Endif

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Calcula o preco de lista                     ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				nValMerc  := IIf((cAliasSC6)->C6_QTDVEN==0,(cAliasSC6)->C6_VALOR,((cAliasSC6)->C6_QTDVEN-(cAliasSC6)->C6_QTDENT)*(cAliasSC6)->C6_PRCVEN)
				nPrcLista := (cAliasSC6)->C6_PRUNIT
				If ( nPrcLista == 0 )
					nPrcLista := NoRound(nValMerc/IIf((cAliasSC6)->C6_QTDVEN==0,(cAliasSC6)->C6_VALOR,((cAliasSC6)->C6_QTDVEN-(cAliasSC6)->C6_QTDENT)),TamSX3("C6_PRCVEN")[2])
				EndIf
				
				nAcresUnit:= A410Arred((cAliasSC6)->C6_PRCVEN*SC5->C5_ACRSFIN/100,"D2_PRCVEN")
				nAcresFin := A410Arred(((cAliasSC6)->C6_QTDVEN-(cAliasSC6)->C6_QTDENT)*nAcresUnit,"D2_TOTAL")
				nAcresTot += nAcresFin
				nValMerc  += nAcresFin
				nDesconto := a410Arred(nPrcLista*((cAliasSC6)->C6_QTDVEN-(cAliasSC6)->C6_QTDENT),"D2_DESCON")-nValMerc
				nDesconto := IIf(nDesconto==0,(cAliasSC6)->C6_VALDESC,nDesconto)				
				nDesconto := Max(0,nDesconto)
				nPrcLista += nAcresUnit
					
				If cPaisLoc=="BRA"
					nValMerc  += nDesconto
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Agrega os itens para a funcao fiscal         ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				MaFisAdd((cAliasSC6)->C6_PRODUTO,;   	// 1-Codigo do Produto ( Obrigatorio )
							(cAliasSC6)->C6_TES,;	   	// 2-Codigo do TES ( Opcional )
							(cAliasSC6)->C6_QTDENT,;  	// 3-Quantidade ( Obrigatorio )
							(cAliasSC6)->C6_PRUNIT,;	// 4-Preco Unitario ( Obrigatorio )
							nDesconto,; 				// 5-Valor do Desconto ( Opcional )
							"",;	   					// 6-Numero da NF Original ( Devolucao/Benef )
							"",;						// 7-Serie da NF Original ( Devolucao/Benef )
							nRecOri,;					// 8-RecNo da NF Original no arq SD1/SD2
							0,;							// 9-Valor do Frete do Item ( Opcional )
							0,;							// 10-Valor da Despesa do item ( Opcional )
							0,;							// 11-Valor do Seguro do item ( Opcional )
							0,;							// 12-Valor do Frete Autonomo ( Opcional )
							nValMerc,;					// 13-Valor da Mercadoria ( Obrigatorio )
							0,;							// 14-Valor da Embalagem ( Opiconal )
								,,,,,,,,,;                	// 15,16,17,18,19,20,21,22 e 23
							(cAliasSC6)->C6_LOTECTL,;	// 24-Lote Produto
							(cAliasSC6)->C6_NUMLOTE)	// 25-Sub-Lote Produto

				SB1->(dbSetOrder(1))
				If SB1->(MsSeek(xFilial("SB1")+(cAliasSC6)->C6_PRODUTO))
					nQtdPeso := ((cAliasSC6)->C6_QTDVEN-(cAliasSC6)->C6_QTDENT)*SB1->B1_PESO
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Calculo do ISS                               ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ				
				SF4->(dbSetOrder(1))
				SF4->(MsSeek(xFilial("SF4")+(cAliasSC6)->C6_TES))
				If ( SC5->C5_INCISS == "N" .And. SC5->C5_TIPO == "N")
					If ( SF4->F4_ISS=="S" )
						nPAliqIss := (cAliasSC6)->(FieldPos("C6_ALIQISS"))
						If nPAliqIss > 0
							nAliqISS := IIf((cAliasSC6)->C6_ALIQISS == 0, MaAliqISS(nItem), (cAliasSC6)->C6_ALIQISS)
						Else
							nAliqISS := MaAliqISS(nItem)
						Endif
						nPrcLista := a410Arred(nPrcLista/(1-(nAliqISS/100)),"D2_PRCVEN")
						nValMerc  := a410Arred(nValMerc/(1-(nAliqISS/100)),"D2_PRCVEN")
					EndIf
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Altera peso para calcular frete              ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				MaFisAlt("IT_PESO",nQtdPeso,nItem)
				MaFisAlt("IT_PRCUNI",nPrcLista,nItem)
				MaFisAlt("IT_VALMERC",nValMerc,nItem)
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Forca os valores de impostos que foram informados no SC6.              ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("SC6")
				For nX := 1 to Len(aFisGet)
					If !Empty(&(aFisGet[nX][2]))
						MaFisAlt(aFisGet[nX][1],&(aFisGet[nX][2]),nItem,.T.)
					EndIf
				Next nX
				If nItem == 1
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³Realiza alteracoes de referencias do SC5 Suframa ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					nPSuframa:=aScan(aFisGetSC5,{|x| x[1] == "NF_SUFRAMA"})
					If !Empty(nPSuframa)
						dbSelectArea("SC5")
						If !Empty(&(aFisGetSC5[nPSuframa][2]))
							MaFisAlt(aFisGetSC5[nPSuframa][1],Iif(&(aFisGetSC5[nPSuframa][2]) == "1",.T.,.F.),nItem,.T.)
						EndIf
					Endif
				EndIf
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³Verifica a data de entrega para as duplicatas³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dData   := Iif( (cAliasSc6)->C6_ENTREG < dDataBase, dDataBase, (DataValida((cAliasSc6)->C6_ENTREG)))
				aadd(aFluxoTmp,{dData,nItem})
				If SF4->F4_DUPLIC=="S"
					nTotDesc += MaFisRet(nItem,"IT_DESCONTO")
				Else
					If GetNewPar("MV_TPDPIND","1")=="1"
						nTotDesc += MaFisRet(nItem,"IT_DESCONTO")
					EndIf
				EndIf
			EndIf
			dbSelectArea(cAliasSC6)
			dbSkip()
		EndDo
		If lQuery
			dbSelectArea(cAliasSC6)
			dbCloseArea()
			dbSelectArea("SC6")
		EndIf
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Indica os valores do cabecalho               ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		MaFisAlt("NF_FRETE",SC5->C5_FRETE)
		MaFisAlt("NF_VLR_FRT",SC5->C5_VLR_FRT)
		MaFisAlt("NF_SEGURO",SC5->C5_SEGURO)
		MaFisAlt("NF_AUTONOMO",SC5->C5_FRETAUT)
		MaFisAlt("NF_DESPESA",SC5->C5_DESPESA)  
		If cPaisLoc == "PTG"                    
			MaFisAlt("NF_DESNTRB",SC5->C5_DESNTRB)  
			MaFisAlt("NF_TARA",SC5->C5_TARA)  
		Endif
		If SC5->C5_DESCONT > 0
			MaFisAlt("NF_DESCONTO",Min(MaFisRet(,"NF_VALMERC")-0.01,nTotDesc+SC5->C5_DESCONT),/*nItem*/,/*lNoCabec*/,/*nItemNao*/,GetNewPar("MV_TPDPIND","1")=="2" )
		EndIf
		If SC5->C5_PDESCAB > 0
			MaFisAlt("NF_DESCONTO",A410Arred(MaFisRet(,"NF_TOTAL")*SC5->C5_PDESCAB/100,"C6_VALOR")+MaFisRet(,"NF_DESCONTO"))
		EndIf
		MaFisWrite(1)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Obtem os valores da funcao fiscal                ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nX := 1 To Len(aFluxoTmp)
			nPosEntr := Ascan(aEntr,{|x| x[1]==aFluxoTmp[nX][1]})
			If nPosEntr == 0
				Aadd(aEntr,{aFluxoTmp[nX][1],MaFisRet(aFluxoTmp[nX][2],"IT_BASEDUP"),MaFisRet(aFluxoTmp[nX][2],"IT_VALIPI"),MaFisRet(aFluxoTmp[nX][2],"IT_VALSOL")})
			Else
				aEntr[nPosEntr][2]+= MaFisRet(aFluxoTmp[nX][2],"IT_BASEDUP")
				aEntr[nPosEntr][3]+= MaFisRet(aFluxoTmp[nX][2],"IT_VALIPI")
				aEntr[nPosEntr][4]+= MaFisRet(aFluxoTmp[nX][2],"IT_VALSOL")
			EndIf
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Ponto de Entrada M410IPI para alterar os valores do IPI referente a palnilha financeira           ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If lM410Ipi 
				VALORIPI    := MaFisRet(nItem,"IT_VALIPI")
				BASEIPI     := MaFisRet(nItem,"IT_BASEIPI")
				QUANTIDADE  := MaFisRet(nItem,"IT_QUANT")
				ALIQIPI     := MaFisRet(nItem,"IT_ALIQIPI")
				BASEIPIFRETE:= MaFisRet(nItem,"IT_FRETE")
				MaFisAlt("IT_VALIPI",ExecBlock("M410IPI",.F.,.F.,),nItem,.T.)
				MaFisLoad("IT_BASEIPI",BASEIPI ,nItem)
				MaFisLoad("IT_ALIQIPI",ALIQIPI ,nItem)
				MaFisLoad("IT_FRETE"  ,BASEIPIFRETE,nItem,"11")
				MaFisEndLoad(nItem,1)
			EndIf
		Next nX
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Calcula os venctos conforme a condicao de pagto  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectarea("SE4")
		dbSetOrder(1)
		If MsSeek(xFilial("SE4")+SC5->C5_CONDPAG)
			For nY := 1 to Len(aEntr)
				nAcerto  := 0
				
				If SFB->FB_JNS == 'J' .And. cPaisLoc == 'COL'
					dbSelectArea("SFC")
					dbSetOrder(2)
					If dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RV0" )
						nValRetImp 	:= MaFisRet(,"NF_VALIV2")
						Do Case
							Case FC_INCDUPL == '1'
								nlValor := aEntr[nY][2] - nValRetImp
							Case FC_INCDUPL == '2'
								nlValor :=aEntr[nY][2] + nValRetImp
							Otherwise
								nlValor :=aEntr[nY][2]
						EndCase
					Elseif dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RF0" )
						nValRetImp 	:= MaFisRet(,"NF_VALIV4")
						Do Case
							Case FC_INCDUPL == '1'
								nlValor := aEntr[nY][2] - nValRetImp
							Case FC_INCDUPL == '2'
								nlValor :=aEntr[nY][2] + nValRetImp
							Otherwise
								nlValor :=aEntr[nY][2]
						EndCase
					Elseif dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RC0" )
						nValRetImp 	:= MaFisRet(,"NF_VALIV7")
						Do Case
							Case FC_INCDUPL == '1'
								nlValor := aEntr[nY][2] - nValRetImp
							Case FC_INCDUPL == '2'
								nlValor :=aEntr[nY][2] + nValRetImp
							Otherwise
								nlValor :=aEntr[nY][2]
						EndCase
					Endif
				ElseIf cPaisLoc=="EQU" 
					nlValor := aEntr[nY][2]
					SA1->(DbSetOrder(1))
					SA1->(MsSeek(xFilial()+IIf(!Empty(SC5->C5_CLIENT),SC5->C5_CLIENT,SC5->C5_CLIENTE)+SC5->C5_LOJAENT))
					cNatureza:=SA1->A1_NATUREZ
					lPParc:=Posicione("SED",1,xFilial("SED")+cNatureza,"ED_RATRET")=="1"	
					If lPParc
						DbSelectArea("SFC")
						SFC->(dbSetOrder(2))
						If DbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RIR") //Retenção IVA
							cImpRet		:= SFC->FC_IMPOSTO
							DbSelectArea("SFB")
							SFB->(dbSetOrder(1))
							If SFB->(DbSeek(xFilial("SFB")+AvKey(cImpRet,"FB_CODIGO")))
								nValRetImp 	:= MaFisRet(,"NF_VALIV"+SFB->FB_CPOLVRO)
							 Endif       
							 DbSelectArea("SFC")
							If SFC->FC_INCDUPL == '1'
								nlValor	:=aEntr[nY][2] - nValRetImp				
							ElseIf SFC->FC_INCDUPL == '2'
								nlValor :=aEntr[nY][2] + nValRetImp
							EndIf   
						EndIf	
					 Endif
				Else
					nlValor := aEntr[nY][2]
				EndIf
				
				aFluxoTmp := Condicao(nlValor,SC5->C5_CONDPAG,aEntr[nY][3],aEntr[nY][1],aEntr[nY][4],,,nAcresTot)
				If !Empty(aFluxoTmp)             
					If cPaisLoc=="EQU"
						For nX := 1 To Len(aFluxoTmp)
							If nX==1                            
								If SFC->FC_INCDUPL == '1'
									aFluxoTmp[nX][2]+= nValRetImp
								ElseIf SFC->FC_INCDUPL == '2'
									aFluxoTmp[nX][2]-= nValRetImp
								Endif										
							Endif	
						Next nX
					Else
						For nX := 1 To Len(aFluxoTmp)
							nAcerto += aFluxoTmp[nX][2]
						Next nX	
						aFluxoTmp[Len(aFluxoTmp)][2] += aEntr[nY][2] - nAcerto	
					Endif
					For nX := 1 To Len(aFluxoTmp)
						nZ := aScan(aFluxo,{|x| x[1] == aFluxoTmp[nX][1]})
						If nZ == 0
							aadd(aFluxo,{aFluxoTmp[nX][1],0})
							nZ := Len(aFluxo)
						EndIf
						aFluxo[nZ][2] += aFluxoTmp[nX][2]
					Next nX
				EndIf
			Next nY
		EndIf
		If Len(aFluxo) == 0
			aDupl := {{dDataBase,MaFisRet(,"NF_BASEDUP"),PesqPict("SE1","E1_VALOR")}}
		Endif
		MaFisEnd()
		MaFisRestore()
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Atualiza a tabela de fluxo de caixa do PV        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If AliasInDic("AID")
			Begin Transaction
				dbSelectArea("AID")
				#IFDEF TOP
					cQuery := "DELETE FROM "+RetSqlName("AID")+" WHERE AID_FILIAL='"+cFilAID+"' AND AID_NUMPV='"+cNumPV+"' "
					TcSqlExec(cQuery)
				#ELSE
					dbSelectArea("AID")
					dbSetOrder(1)
					If MsSeek(cFilAID+cNumPv)
							While !Eof() .And. cFilAID == AID->AID_FILIAL .And. cNumPv == AID->AID_NUMPV
							RecLock("AID")
							dbDelete()
							AID->(dbSkip())
						EndDo
					EndIf
				#ENDIF
		
					For nX := 1 To Len(aFluxo)
						If aFluxo[nX,2] <> 0
							RecLock("AID",.T.)
							AID->AID_FILIAL := xFilial("AID")
							AID->AID_NUMPV  := cNumPV
							AID->AID_DATA   := aFluxo[nX,1]
							AID->AID_VALOR  := aFluxo[nX,2]
							MsUnLock()
						EndIf
					Next nX
			
			End Transaction
		EndIf
		SC5->(MsUnLockAll())
//	EndIf
EndIf
If lSoma
	aFluxoTmp := aClone(aFluxo)
	aFluxo := {{dDataBase,0}}
	For nX := 1 To Len(aFluxoTMP)
		aFluxo[1][2] += aFluxoTMP[nX][2]
	Next nX
EndIf
RestArea(aAreaSA1)
RestArea(aArea)
Return(aFluxo)

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ A410Line  ³ Autor ³ Patricia A. Salomao  ³ Data ³ 26/07/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Atualizacao da bLine do documento.                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A410Line(ExpN1)                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpN1 - Posicao da linha no listbox                        ³±±
±±³          ³ ExpA1 - Array com as notas de entrada                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function A410Line(nAT,aSF1)

Local abLine     := {}
Local nCnt       := 0

For nCnt := 1 To Len(aSF1[nAT])
	If nCnt == 1
		Aadd( abLine, Iif(aSF1[ nAT, nCnt ] , oMarked, oNoMarked ) )
	Else
		Aadd( abLine, aSF1[ nAT, nCnt ] )
	EndIf
Next nCnt

Return abLine

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ A410RetNF ³ Autor ³ Patricia A. Salomao  ³ Data ³ 26/07/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Retorna as notas                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A410RetNF(ExpA1)                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 - Campos que deverao ser apresentados                ³±±
±±³          ³ ExpD1 - Data Inicio                                        ³±±
±±³          ³ ExpD2 - Data Final                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function A410RetNF(aCpoSF1,dDataDe,dDataAte,lForn, lFornece)
Local aSF1      := {}
Local aAux      := {}
Local aAreaSF1  := SF1->(GetArea())
Local nCnt      := 0
Local cAliasSF1 := 'SF1'
Local cQuery    := ''
Local cIndex    := ''
Local nIndexSF1 := 0

#IFDEF TOP
	cAliasSF1 := GetNextAlias()
	cQuery := " SELECT * "
	cQuery += "   FROM " + RetSqlName("SF1")
	cQuery += "   WHERE F1_FILIAL  = '" + xFilial("SF1") + "' "
	cQuery += "     AND F1_FORNECE = '" + cFornece + "' "
	cQuery += "     AND F1_LOJA    = '" + cLoja    + "' "
	cQuery += "     AND F1_DTDIGIT BETWEEN '" + DtoS(dDataDe) + "' AND '" + DtoS(dDataAte) + "' "
	cQuery += "     AND F1_STATUS  <> '" + Space(Len(SF1->F1_STATUS)) + "' "
	If lForn
		cQuery += " AND F1_TIPO NOT IN ('D','B')
	Else
		cQuery += " AND F1_TIPO IN ('D','B')
	EndIf
	cQuery += "     AND D_E_L_E_T_ = ' ' "
	
	If Existblock("A410RNF")
				cQuery := ExecBlock("A410RNF",.F.,.F.,{dDataDe,dDataAte,lForn,lFornece})
	EndIf
	
	cQuery := ChangeQuery( cQuery )
	dbUseArea( .T., "TOPCONN", TcGenQry( , , cQuery ), cAliasSF1, .F., .T. )
#ELSE
	DbSelectArea("SF1")
	cIndex := CriaTrab(NIL,.F.)
	cQuery := " SF1->F1_FILIAL == '" + xFilial("SF1") + "' "
	cQuery += " .And. SF1->F1_FORNECE == '" + cFornece + "' "
	cQuery += " .And. SF1->F1_LOJA    == '" + cLoja    + "' "
	cQuery += " .And. DtoS(SF1->F1_DTDIGIT) >= '" + DtoS(dDataDe)  + "'"
	cQuery += " .And. DtoS(SF1->F1_DTDIGIT) <= '" + DtoS(dDataAte) + "' "
	cQuery += " .And. SF1->F1_STATUS  <> '" + Space(Len(SF1->F1_STATUS)) + "' "
	If lForn
		cQuery += " .And. !(SF1->F1_TIPO $ 'DB') "
	Else
		cQuery += " .And. SF1->F1_TIPO $ 'DB'
	EndIf
	
	If Existblock("A410RNF")
				cQuery := ExecBlock("A410RNF",.F.,.F.,{dDataDe,dDataAte,lForn,lFornece})
	EndIf
	
	IndRegua("SF1",cIndex,"F1_DOC+F1_SERIE",,cQuery)
	SF1->(DbGotop())
#ENDIF

While (cAliasSF1)->(!Eof())
	aAux := {}
	Aadd( aAux, oNoMarked )
	For nCnt := 1 To Len(aCpoSF1)
		Aadd( aAux, &(aCpoSF1[nCnt]) )
	Next nCnt
	aAdd( aSF1, aClone(aAux) )
	(cAliasSF1)->(DbSkip())
EndDo

#IFDEF TOP
	(cAliasSF1)->(DbCloseArea())
#ELSE
	RetIndex( "SF1" )
	FErase( cIndex+OrdBagExt() )
#ENDIF

RestArea(aAreaSF1)

Return aSF1

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ A410FRet ³ Autor ³ Patricia A. Salomao   ³ Data ³ 26/07/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Filtro para retornar de doctos fiscais.                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ A410FRet()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametro ³ ExpL1 - Fornecedor ?                                       ³±±
±±³          ³ ExpD1 - Data Inicio                                        ³±±
±±³          ³ ExpD2 - Data Fim                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function A410FRet(lFornece,dDataDe,dDataAte,lForn)
Local cTDataDe  := OemToAnsi(STR0096) //-- Dt. Entrada De
Local cTDataAte := OemToAnsi(STR0097) //-- Dt. Entrada Ate
Local cTFornece := RetTitle("F1_FORNECE")
Local cTLoja    := RetTitle("F1_LOJA")
Local nOpcao    := 0
Local lCliente  := .F.
Local lDocto    := .F.
Local oDlgEsp
Local oCliente
Local oForn
Local oDocto 
Local oFornece
Local oPanelCli
Local oPanelFor

DEFINE MSDIALOG oDlgEsp FROM 00,00 TO 190,490 PIXEL TITLE OemToAnsi(STR0098) //-- Retorno de Doctos. de Entrada

	//-- Fornecedor'
	@ 02,10 CHECKBOX oForn VAR lForn PROMPT OemToAnsi(STR0099) SIZE 50,010 ;
		ON CLICK( lCliente := .F., oCliente:Refresh(), A410CliFor(lForn,@lFornece,@lDocto,oDocto,oFornece,oDlgEsp,oPanelCli,oPanelFor)) OF oDlgEsp PIXEL  //-- Fornecedor

	//-- 'Cliente'
	@ 02,120 CHECKBOX oCliente VAR lCliente PROMPT OemToAnsi(STR0105) SIZE 50,010 ;
		ON CLICK( lForn := .F., oForn:Refresh(), A410CliFor(lForn,@lFornece,@lDocto,oDocto,oFornece,oDlgEsp,oPanelCli,oPanelFor)) OF oDlgEsp PIXEL //-- Cliente


	@ 018,000 MSPANEL oPanelCli OF oDlgEsp SIZE 245,020               

	@ 018,000 MSPANEL oPanelFor OF oDlgEsp SIZE 245,020

	cTFornece := RetTitle("F1_FORNECE")
	 cTLoja    := RetTitle("F2_LOJA")
	@ 001,05 SAY cTFornece PIXEL SIZE 47 ,9 OF oPanelFor
	@ 001,40 MSGET cFornece F3 'FOR' SIZE 65, 10 OF oPanelFor PIXEL

	@ 001,120 SAY cTLoja PIXEL OF oPanelFor
	@ 001,160 MSGET cLoja SIZE 20, 10 OF oPanelFor PIXEL ;
			VALID Vazio() .Or. ExistCpo('SA2',cFornece+cLoja,1)

	 cTLoja    := RetTitle("F2_LOJA")
	@ 001,05 SAY RetTitle("F2_CLIENTE") PIXEL SIZE 50 ,10 OF oPanelCli
	@ 001,40 MSGET cFornece F3 'SA1' SIZE 65, 10 OF oPanelCli PIXEL

	@ 001,120 SAY cTLoja PIXEL OF oPanelCli
	@ 001,160 MSGET cLoja SIZE 20, 10 OF oPanelCli PIXEL ;
			VALID Vazio() .Or. ExistCpo('SA1',cFornece+cLoja,1)
	oPanelCli:Hide()


	@ 39,05 SAY cTDataDe PIXEL //-- Data De
	@ 38,40 MSGET dDataDe PICTURE "@D" SIZE 45, 10 OF oDlgEsp PIXEL

	@ 39,120 SAY cTDataAte PIXEL //-- Data Ate
	@ 38,160 MSGET dDataAte PICTURE "@D" SIZE 45, 10 OF oDlgEsp PIXEL

	@ 60,003 TO 085,195 LABEL OemToAnsi(STR0100) OF oDlgEsp PIXEL  //-- Tipo de Selecao

	//-- 'Fornecedor'
	@ 70,10 CHECKBOX oFornece VAR lFornece PROMPT PadR(IIf(lForn,OemToAnsi(STR0099),RetTitle("F2_CLIENTE")),20) SIZE 50,010 ;
		ON CLICK( lDocto := .F., oDocto:Refresh() ) OF oDlgEsp PIXEL  //-- Fornecedor

	//-- 'Documento'
	@ 70,120 CHECKBOX oDocto VAR lDocto PROMPT OemToAnsi(STR0102) SIZE 50,010 ;
		ON CLICK( lFornece := .F., oFornece:Refresh() ) OF oDlgEsp PIXEL //-- Documento

	DEFINE SBUTTON FROM 05,215 TYPE 1 OF oDlgEsp ENABLE ;
		ACTION If(!Empty(cFornece) .And. !Empty(cLoja) .And. ;
					 !Empty(dDataDe) .And. !Empty(dDataAte) .And. ;
					 (lFornece .Or. lDocto)  .And. IIF(lForn,ExistCpo('SA2',cFornece+cLoja,1),ExistCpo('SA1',cFornece+cLoja,1)),(nOpcao := 1,oDlgEsp:End()),.F.)

DEFINE SBUTTON FROM 20,215 TYPE 2 OF oDlgEsp ENABLE ACTION (nOpcao := 0,oDlgEsp:End())

ACTIVATE MSDIALOG oDlgEsp CENTERED

Return ( nOpcao == 1 )

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A410rentPV³ Autor ³ Eduardo Riera         ³ Data ³16.11.2005 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Funcao de calculo da rentabilidade do pedido de venda        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ nOpc                                                        ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta funcao efetua o calculo da rentabilidade de um pedido de³±±
±±³          ³venda.                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Generico                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function a410RentPV( aCols ,nUsado ,aRenTab ,aVencto ,nPTES,nPProduto,nPLocal,nPQtdVen, dDtEmissao )
Local nItem    := 0
Local nX       := 0
Local nY       := 0
Local nPos     := 0

If len(aRenTab) > 0 .AND. (aRentab[Len(aRentab)][1] == "")
	aSize( aRentab ,Len(aRentab)-1)
	For nX := 1 To Len(aRentab)
		aRentab[nX][2] := val(StrTran(StrTran(aRentab[nX][2],".",""),",","."))
		aRentab[nX][3] := val(StrTran(StrTran(aRentab[nX][3],".",""),",","."))
		aRentab[nX][4] := 0
		aRentab[nX][5] := 0
		aRentab[nX][6] := 0
	Next nX
EndIf

For nX := 1 To Len(aCols)
	If Len(aCols[nX])==nUsado .Or. !aCols[nX][nUsado+1]
		nItem++
		nY := aScan(aRentab,{|x| x[1] == aCols[nX][nPProduto]})
		If nY <> 0
			If cPaisLoc <> 'MEX'
				aRentab[nY][4] += Max(Ma410Custo(nItem,aVencto,aCols[nX][nPTES],aCols[nX][nPProduto],aCols[nX][nPLocal],aCols[nX][nPQtdVen],dDtEmissao),0)
				aRentab[nY][5] := aRentab[nY][4]-aRentab[nY][3] //Max(aRentab[nY][4]-aRentab[nY][3],0)
			Else
				aRentab[nY][4] += MaFisRet(nX,'IT_VALMERC')
				aRentab[nY][5] := MaFisRet(nX,'IT_VALMERC')-aRentab[nY][3]
			EndIf			
			aRentab[nY][6] := aRentab[nY][5]/aRentab[nY][4]*100
		EndIf
	EndIf
Next nX
aadd(aRentab,{"",0,0,0,0,0})
For nX := 1 To Len(aRentab)
	If nX <> Len(aRentab)
		aRentab[Len(aRentab)][2] += aRentab[nX][2]
		aRentab[Len(aRentab)][3] += aRentab[nX][3]
		aRentab[Len(aRentab)][4] += aRentab[nX][4]
		aRentab[Len(aRentab)][5] += aRentab[nX][5]
		aRentab[Len(aRentab)][6] := aRentab[Len(aRentab)][5]/aRentab[Len(aRentab)][4]*100
	EndIf
	If !(AllTrim(FunName()) $ "MATA851|MATA852|MATA853")	//Rotinas de Análise de Rentabiliddae
		aRentab[nX][2] := TransForm(aRentab[nX][2],"@e 999,999,999.999999")
		aRentab[nX][3] := TransForm(aRentab[nX][3],"@e 999,999,999.999999")
		aRentab[nX][4] := TransForm(aRentab[nX][4],"@e 999,999,999.999999")
		aRentab[nX][5] := TransForm(aRentab[nX][5],"@e 999,999,999.999999")
		aRentab[nX][6] := TransForm(aRentab[nX][6],"@e 999,999,999.999999")
	EndIf
Next nX
If Existblock("MA410RPV")
	aRentab := ExecBlock("MA410RPV",.F.,.F.,aRentab)
EndIf
Return( aRentab )

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³A410CliFor³ Autor ³ Patricia A. Salomao   ³ Data ³ 26/07/05 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Desenha Tela conforme selecao: Fornecedor ou Cliente        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³A410CliFor()                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametro ³ ExpL1 - Fornecedor ? (1o.CheckBox)                         ³±±
±±³          ³ ExpL2 - Fornecedor ? (2o.CheckBox)                         ³±±
±±³          ³ ExpL3 - Documento  ? (2o.CheckBox)                         ³±±
±±³          ³ ExpO1 - Objeto Documento                                   ³±±
±±³          ³ ExpO2 - Objeto Fornecedor                                  ³±±
±±³          ³ ExpO3 - Objeto Dialog                                      ³±±
±±³          ³ ExpO4 - Objeto Panel Cliente                               ³±±
±±³          ³ ExpO5 - Objeto Panel Fornecedor                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410CliFor(lForn,lFornece,lDocto,oDocto,oFornece,oDlgEsp,oPanelCli,oPanelFor)

//-- Se Clicou em Fornecedor
If lForn
	oPanelCli:Hide()
	oPanelFor:Show()
Else //-- Se Clicou em Cliente
	oPanelFor:Hide()
	oPanelCli:Show()
EndIf

oFornece:cCaption := IIf(lForn,OemToAnsi(STR0099),RetTitle("F2_CLIENTE"))
oFornece:cTitle   := IIf(lForn,OemToAnsi(STR0099),RetTitle("F2_CLIENTE"))
If lFornece
	lDocto := .F.
	oDocto:Refresh()
ElseIf lDocto
	 lFornece := .F.
	 oFornece:Refresh() 
EndIf

oDlgEsp:SetFocus()
oDlgEsp:Refresh()

Return .T.


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³a410FreteP³ Autor ³ Kleber Dias Gomes     ³ Data ³25/07/2006 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Funcao de Calculo da Frete Pauta.                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta funcao efetua o calculo do frete pauta.                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³SIGAFAT                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a410FreteP()
Local aArea    := GetArea()
Local cAliasDV9:= "DV9"
Local lRetorno := .T.
Local lQuery   := .F.
Local nScan    := 0
#IFDEF TOP
Local aStruDV9 := {}
Local cQuery   := ""
Local nY       := 0
#ENDIF

If ValType(aFreteP) == "A"
	M->C5_VLR_FRT := 0 //-- Var.mem. valor base icms pauta de frete
	If M->C5_KM > 0
		If Empty(aFreteP)
			dbSelectArea("DV9")
			DV9->(dbSetOrder(1)) //DV9_FILIAL+DV9_TARIFA
			#IFDEF TOP
				lQuery  := .T.
				aStruDV9:= DV9->(dbStruct())
				cAliasDV9:= GetNextAlias()
				cQuery := "SELECT DV9.*,DV9.R_E_C_N_O_ DV9RECNO "
				cQuery += "FROM "+RetSqlName("DV9")+" DV9 "
				cQuery += "WHERE DV9.DV9_FILIAL='"+xFilial("DV9")+"' AND "
				cQuery += "DV9.D_E_L_E_T_=' ' "
				cQuery += "ORDER BY "+SqlOrder(DV9->(IndexKey()))
				cQuery := ChangeQuery(cQuery)
				dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasDV9,.T.,.T.)
				For nY := 1 To Len(aStruDV9)
					If aStruDV9[nY][2] <> "C"
						TcSetField(cAliasDV9,aStruDV9[nY][1],aStruDV9[nY][2],aStruDV9[nY][3],aStruDV9[nY][4])
					EndIf
				Next nY
			#ELSE
				DV9->(dbGoTop())
			#ENDIF
			While !Eof() .And. (cAliasDV9)->DV9_FILIAL == xFilial("DV9")
				aAdd(aFreteP,{	(cAliasDV9)->DV9_KM		, ;
								If(lQuery,(cAliasDV9)->DV9RECNO,(cAliasDV9)->(Recno())), ;
								(cAliasDV9)->DV9_VALOR	, ;
								(cAliasDV9)->DV9_TIPVAL	, ;
								IIF(FieldPos("DV9_ICBASE") > 0,(cAliasDV9)->DV9_ICBASE,""), ;
								IIF(FieldPos("DV9_PERCEN") > 0,(cAliasDV9)->DV9_PERCEN,0), ;
								IIF(FieldPos("DV9_CARGAE") > 0,(cAliasDV9)->DV9_CARGAE,"")})
				(cAliasDV9)->(dbSkip())
			EndDo
			aSort(aFreteP,,,{|x,y| x[1] < y[1] })
			If lQuery
				dbSelectArea(cAliasDV9)
					dbCloseArea()
					dbSelectArea("DV9")
				EndIf
		EndIf
		nScan := Ascan(aFreteP,{|x| x[1] >= M->C5_KM .And. x[5] == "2"})
		If nScan > 0
			Do Case
				Case aFreteP[nScan][4] == "1"
					M->C5_VLR_FRT := NoRound((M->C5_PBRUTO/1000)*	aFreteP[nScan][3] ,TamSX3("C5_VLR_FRT")[2])
				Case aFreteP[nScan][4] == "2"
					M->C5_VLR_FRT := NoRound((M->C5_PBRUTO      *	aFreteP[nScan][3]),TamSX3("C5_VLR_FRT")[2])
				Case aFreteP[nScan][4] == "3"
					M->C5_VLR_FRT := NoRound(					  	aFreteP[nScan][3] ,TamSX3("C5_VLR_FRT")[2])
			EndCase
		EndIf
	EndIf
EndIf

RestArea(aArea)
Return lRetorno
																					


//------------------------- FUNCOES ANTIGAS PARA MANTER LEGADO DA GRADE DE PRODUTOS ANTIGA ------------------- 


//----------------------------------------------------------------------
// FUNCAO UTILIZADA SOMENTE PARA MANTER LEGADO DA UTILIZACAO DE GRADE
// DE PRODUTOS SEM OBJETO ATE LANCAMENTO DO R4.   
//
// ATENCAO: Foi incluido um "_" no inicio do nome da funcao
//----------------------------------------------------------------------
Function _a410GValid(nLinAcols,lQtdVen)

Local lRetorno	:=.T.
Local nColuna	:= aScan(aHeader,{|x| AllTrim(x[2]) == AllTrim(Substr(Readvar(),4))})
Local cProdGrd	:= ""
Local cMascara	:= SuperGetMv("MV_MASCGRD")
Local nTamRef	:= Val(Substr(cMascara,1,2))


Local nQuant	:= &(ReadVar())

cProdGrd := Substr(SB4->B4_COD,1,nTamRef)+aCols[n][1]+aHeader[nColuna][1]

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica se o Produto Existe                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SB1")
dbSetOrder(1)
If ( !MsSeek(xFilial("SB1")+cProdGrd,.F.) )
	HELP(" ",1,"NAOEXISTE")
	lRetorno := .F.
EndIf
If lRetorno .And. lQtdVen
	lRetorno := RegistroOk("SB1")
EndIf
If ( lRetorno )
	If ( ExistBlock("A410GVLD") )
		ExecBlock("A410GVLD",.F.,.F.,{nLinAcols,n,nColuna})
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica a quantidade Liberada                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( !lQtdVen )
	If ( SuperGetMv("MV_LIBACIM") )
		If  ( nQuant > aColsGrade[nLinAcols][n][nColuna][1] )
			Help(" ",1,"A410LIB")
			lRetorno := .F.
		EndIf
		If ( lRetorno .And. nQuant > (aColsGrade[nLinAcols][n][nColuna][1] - aColsGrade[nLinAcols][n][nColuna][3]) )
			HELP(" ",1,"A440QTDL")
			lRetorno := .F.
		EndIf
	EndIf
EndIf
Return(lRetorno)
												  

//----------------------------------------------------------------------
// FUNCAO UTILIZADA SOMENTE PARA MANTER LEGADO DA UTILIZACAO DE GRADE
// DE PRODUTOS SEM OBJETO ATE LANCAMENTO DO R4.   
//
// ATENCAO: Foi incluido um "_" no inicio do nome da funcao
//----------------------------------------------------------------------
Function _A410QtdGra()

Local nPProduto:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPQtdVen := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPQtdLib := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDLIB"})
Local nPLocal  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCAL"})
Local nPQtdVen2 := aScan(aHeader,{|x| AllTrim(x[2])=="C6_UNSVEN"})
Local nQtdInf	:= &(ReadVar())
Local nOpcA 	:= 0
Local nCntFor	:= 0
Local nColuna 	:= 0
Local nLinha	:= 0
Local nColQtd  := 0
Local nColQtd2 := 0
Local cProdRef	:= aCols[n][nPProduto]
Local lQtdVen	:= If("C6_QTDVEN"$ReadVar(),.T.,.F.)
Local lQtdVen2  := If("C6_UNSVEN"$ReadVar(),.T.,.F.)
Local lGrade	:= MaGrade()
Local lPergunte := INCLUI .Or. ALTERA
Local lShowGrd  := .T.

Local aHeadAux	:= {}
Local aColsAux	:= {}
Local aAltGr	:= {}
Local aBackRot	:= aClone(aRotina)
Local bSetKey
Local cLocal	:= aCols[n][nPLocal]
Local   oDlg,oGet
nColQtd := If(lQtdVen,1,If(lQtdVen2,5,2))
nColQtd2:= If(nColQtd==1,5,If(nColQtd==2,0,1))
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Muda o valor do aRotina para nao incluir linha na GetDados   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
PRIVATE aRotina := {{"","",0,1},{"","",0,1},{"","",0,6}}
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se a grade esta ativa                       ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If ( lGrade )
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Arrays auxiliares para armazenar a getdados principal³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aHeadAux:=Aclone(aHeader)
	aColsAux:=Aclone(aCols)
	nAux    :=n
	If ( MatGrdPrRf(@cProdRef) )
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Posiciona  no SB4 para validacao da funcao a410GValid                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SB4")
		dbSetOrder(1)
		MsSeek(xFilial("SB4")+cProdRef)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Monta aHeader e aCols                                                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aHeader		:= Aclone(aHeadGrade[n])
		aHeader[1] 	:=  {" ","R","@!",4,0,"","","C","","V"}
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Montagem do Array dos campos  que podem ser alterados                   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		For nCntFor := 2 To Len(aHeader)
			aadd(aAltGr,aHeader[nCntFor][2])
			aHeader[nCntFor][6] :=  "A410GValid("+Str(nAux)+","+If(lQtdVen.Or.lQtdVen2,".T.",".F.")+")"
		Next nCntFor
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Montagem do ACols                                                       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aCols		:= {}
		For nLinha :=  1 To Len(aColsGrade[nAux])
			aadd(aCols,Array(Len(aHeader)+1))
			aCols[nLinha][Len(aHeader)+1] := .F.
			For nColuna := 1 To Len(aHeader)
				If  ( nColuna ==  1 )
					aCols[nLinha][nColuna] := aColsGrade[nAux][nLinha][nColuna]
				Else
					aCols[nLinha][nColuna] := aColsGrade[nAux][nLinha][nColuna][nColQtd]
				EndIf
			Next nColuna
		Next nLinha
		N := 1
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Ponto de entrada antes da exibicao da janela de grade                  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ExistBlock( "A410GRDW" )
			ExecBlock( "A410GRDW", .F., .F. , { aHeadAux,aColsAux,nAux })
			lShowGrd := (SuperGetMv("MV_SHOWGRD",.F.,"1") == "1")
		EndIf

		If lShowGrd
			DEFINE MSDIALOG oDlg TITLE cCadastro FROM 10,10 TO 25,68   OF oMainWnd
			bSetKey := SetKey(VK_F4,{|| A440Saldo(.T.,cLocal)})
			oGet:=MSGetDados():New(20,8,107,222,3,"AllwaysTrue","AllwaysTrue",,.T.,aAltGr,1)
			ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||nOpcA := If(lPergunte,1,0),oDlg:End()},{||oDlg:End()})
		Endif

		SetKey(VK_F4,bSetKey)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Efetua a Atualizacao no aColsGrade  Corrente                            ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( nOpcA == 1 )
			For nLinha :=  1 To Len(aColsGrade[nAux])
				For nColuna := 2 To Len(aHeader)
					aColsGrade[nAux][nLinha][nColuna][nColQtd ] := aCols[nLinha][nColuna]
					If aCols[nLinha][nColuna] <> 0
						Do Case
						Case ( nColQtd2 == 1 )
							aColsGrade[nAux][nLinha][nColuna][nColQtd2] := ConvUm(AllTrim(cProdRef),0,aCols[nLinha][nColuna],1)
						Case ( nColQtd2 == 5 )
							aColsGrade[nAux][nLinha][nColuna][nColQtd2] := ConvUm(AllTrim(cProdRef),aCols[nLinha][nColuna],0,2)
						EndCase
					EndIf
				Next nColuna
			Next nLinha
		EndIf
		aHeader  :=aClone(aHeadAux)
		aCols    :=aClone(aColsAux)
		n        :=nAux
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³  Soma as quantidades digitadas na getdados da grade  ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nQtdInf := MatGrdSoma(nAux,nQtdInf,nColQtd)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Atualiza a quantidade do acols original                                 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If ( lQtdVen )
			A410MultT("C6_QTDVEN",nQtdInf,.F.)
			aCols[n][nPQtdVen]  := nQtdInf
			M->C6_QTDVEN		  := nQtdInf
			If ( nPQtdVen2 > 0 )
				nQtdInf := 0
				nQtdInf := MatGrdSoma(nAux,nQtdInf,5)
				A410MultT("C6_UNSVEN",nQtdInf)
				aCols[n][nPQtdVen2] := nQtdInf
				M->C6_UNSVEN        := nQtdInf
			EndIf
		Else
			If ( lQtdVen2 )
				A410MultT("C6_UNSVEN",nQtdInf)
				aCols[n][nPQtdVen2] := nQtdInf
				M->C6_UNSVEN        := nQtdInf
				nQtdInf := 0
				nQtdInf := MatGrdSoma(nAux,nQtdInf,1)
				A410MultT("C6_QTDVEN",nQtdInf,.F.)
				aCols[n][nPQtdVen]  := nQtdInf
				M->C6_QTDVEN		  := nQtdInf
			Else
				aCols[n][nPQtdLib]  := nQtdInf
				M->C6_QTDLIB		  := nQtdInf
			EndIf
		EndIf
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura aRotina Original                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aRotina:=aClone(aBackRot)
Return( .T. )
																									  

//----------------------------------------------------------------------
// FUNCAO UTILIZADA SOMENTE PARA MANTER LEGADO DA UTILIZACAO DE GRADE
// DE PRODUTOS SEM OBJETO ATE LANCAMENTO DO R4.   
//
// ATENCAO: Foi incluido um "_" no inicio do nome da funcao
//----------------------------------------------------------------------
Function _Ma410GraGr()

Local aColsOrig:= aClone(aCols)  //aCols Original
Local nMaxFor  := Len(aColsOrig)
Local nCntFor  := 0     // Contador
Local nPProduto:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPItem   := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEM"})
Local nPItGrade:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEMGRD"})
Local nPPrcVen := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN"})
Local nPQtdVen := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPQtdVen2:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_UNSVEN"})
Local nPQtdLib := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDLIB"})
Local nPValor  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALOR"})
Local nPGrade  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_GRADE"})
Local nPValDesc := aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALDESC"})
Local nLinha   := 0     // Contador de Linhas
Local nColuna  := 0     // Contador de Colunas
Local nAcols   := 0     // Numero de Elementos do Acols
Local cProdRef := ""    // Codigo do Produto Grade
Local cItem    := "00"  // Controle de Itens do Pedido de Venda

Local lTestaDel:= If(Len(aColsOrig[1])==Len(aHeader),.F.,.T.)

If MaGrade() .And. Type("aHeadGrade")<>"U" .And. Len(aColsGrade)>0
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Inicializa o Acols para posterior atualizacao                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aCols := {}
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Varre o acols original para atualizar a variavel aCols                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	For nCntFor := 1 To nMaxFor
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Atualiza o Controle de Itens do Pedido de Venda e da Grade              ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		cItem    := aColsOrig[nCntFor][nPitem] //Soma1(cItem,Len(SC6->C6_ITEM))
		cItemGrd := StrZero(0,TamSX3("C6_ITEMGRD")[1])
		cProdRef := aColsOrig[nCntFor][nPProduto]
		If ( !Empty(cProdRef) )
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
			//³Verifica se foi digitado uma referencia                                 ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If ( Len(aHeadGrade)>0 .And. aHeadGrade[nCntFor][1] == "R" )
				For nLinha := 1 To Len(aColsGrade[nCntFor])
					For nColuna := 2 To Len(aHeadGrade[nCntFor])
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³Verifica se a valor a ser gravado                                       ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						If ( aColsGrade[nCntFor][nLinha][nColuna][1] <> 0 .And.;
								If(lTestaDel,!aColsOrig[nCntFor][Len(aHeader)+1],.T.) )
							cItemGrd := Soma1(cItemGrd,Len(SC6->C6_ITEMGRD))
							cProdRef := aColsOrig[nCntFor][nPProduto]
							MatGrdPrRf(@cProdRef)
							cProdRef += aColsGrade[nCntFor][nLinha][1]+;
								aHeadGrade[nCntFor][nColuna][1]
							aadd(aCols,aClone(aColsOrig[nCntFor]))
							nAcols := Len(aCols)
							aCols[nAcols][nPProduto ]  := PadR(cProdRef,Len(SB1->B1_COD))
							aCols[nAcols][nPItem    ]  := cItem
							If ( nPItGrade <> 0 )
								aCols[nAcols][nPItGrade ]  := cItemGrd
							EndIf
							If ( nPQtdVen <> 0 )
								aCols[nAcols][nPQtdVen  ]  := aColsGrade[nCntFor][nLinha][nColuna][1]
							EndIf
							If ( nPQtdVen2 <> 0 )
								aCols[nAcols][nPQtdVen2 ]  := aColsGrade[nCntFor][nLinha][nColuna][5]
							EndIf
							If ( nPQtdLib <> 0 )
								aCols[nAcols][nPQtdLib  ]  := aColsGrade[nCntFor][nLinha][nColuna][2]
							EndIf
							If ( nPValor <> 0 )
								aCols[nAcols][nPValor   ]  := a410Arred(aColsGrade[nCntFor][nLinha][nColuna][1]*aColsOrig[nCntFor][nPPrcVen],"C6_VALOR")
							EndIf
							If  ( nPGrade <>  0 )
								aCols[nAcols][nPGrade   ]  := "S"
							Endif
							If  ( nPValDesc !=  0 )
								aCols[nAcols][nPValDesc]	:= (aColsOrig[nCntFor][nPValDesc]/aColsOrig[nCntFor][nPQtdVen])*aCols[nAcols][nPQtdVen	]
							EndIf
						Else
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Verifica se o item ja foi gravado para deleta-lo                        ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If ( !Empty(aColsGrade[nCntFor][nLinha][nColuna][4]) )
								cProdRef := aColsOrig[nCntFor][nPProduto]
								cItemGrd := Soma1(cItemGrd,Len(SC6->C6_ITEMGRD))
								MatGrdPrRf(@cProdRef)
								cProdRef += aColsGrade[nCntFor][nLinha][1]+;
									aHeadGrade[nCntFor][nColuna][1]
								aadd(aCols,aClone(aColsOrig[nCntFor]))
								nAcols := Len(aCols)
								aCols[nAcols][nPProduto ]  := PadR(cProdRef,Len(SB1->B1_COD))
								aCols[nAcols][nPItem    ]  := cItem
								If ( nPItGrade <> 0 )
									aCols[nAcols][nPItGrade ]  := cItemGrd
								EndIf
								If ( nPQtdVen <> 0 )
									aCols[nAcols][nPQtdVen  ]  := aColsGrade[nCntFor][nLinha][nColuna][1]
								EndIf
								If ( nPQtdLib <> 0 )
									aCols[nAcols][nPQtdLib  ]  := aColsGrade[nCntFor][nLinha][nColuna][2]
								EndIf
								If ( nPValor <> 0 )
									aCols[nAcols][nPValor   ]  := a410Arred(aColsGrade[nCntFor][nLinha][nColuna][1]*aColsOrig[nCntFor][nPPrcVen],"C6_VALOR")
								EndIf
								If  ( nPGrade <>  0 )
									aCols[nAcols][nPGrade   ]  := "S"
								EndIf
								If  ( nPValDesc !=  0 )
									aCols[nAcols][nPValDesc]	:= (aColsOrig[nCntFor][nPValDesc]/aColsOrig[nCntFor][nPQtdVen])*aCols[nAcols][nPQtdVen	]
								EndIf
								aCols[nAcols][Len(aHeader)+1] := .T.
							EndIf
						EndIf
					Next nColuna
				Next nLinha
			Else
				aadd(aCols,aClone(aColsOrig[nCntFor]))
				nAcols := Len(aCols)
				aCols[nAcols][nPItem    ]  := cItem
			EndIf
		EndIf
	Next nCntFor
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Ordena o aCols                                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aCols       := aSort(aCols,,,{|x,y| x[nPItem]+x[nPItGrade] < y[nPItem]+y[nPItGrade] })
	aColsGrade  := {}
	aHeadGrade  := {}
EndIf
Return(Nil)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³MenuDef   ³ Autor ³ Marco Bianchi         ³ Data ³01/09/2006³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Utilizacao de menu Funcional                               ³±±
±±³          ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Array com opcoes da rotina.                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³Parametros do array a Rotina:                               ³±±
±±³          ³1. Nome a aparecer no cabecalho                             ³±±
±±³          ³2. Nome da Rotina associada                                 ³±±
±±³          ³3. Reservado                                                ³±±
±±³          ³4. Tipo de Transa‡„o a ser efetuada:                        ³±±
±±³          ³	  1 - Pesquisa e Posiciona em um Banco de Dados           ³±±
±±³          ³    2 - Simplesmente Mostra os Campos                       ³±±
±±³          ³    3 - Inclui registros no Bancos de Dados                 ³±±
±±³          ³    4 - Altera o registro corrente                          ³±±
±±³          ³    5 - Remove o registro corrente do Banco de Dados        ³±±
±±³          ³5. Nivel de acesso                                          ³±±
±±³          ³6. Habilita Menu Funcional                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/

Static Function MenuDef()
	  
Local aRotina2  := {{STR0003,"A410Barra",0,3},;							// "Incluir"
					{STR0004,"A410Barra",0,4}}								// "Alterar"
Local aRotina3  := {{ OemToAnsi(STR0005),"A410Deleta"	,0,5,21,NIL},;
					{ OemToAnsi(STR0109),"Ma410Resid",0,2,0,NIL}}			//"Residuo"

Private aRotina := {	{	OemToAnsi(STR0001),"AxPesqui"		,0,1,0 ,.F.},;		//"Pesquisar"
							{ OemToAnsi(STR0002),"A410Visual"	,0,2,0 ,NIL},;		//"Visual"
							{ OemToAnsi(STR0003),"A410Inclui"	,0,3,0 ,NIL},;		//"Incluir"
							{ OemToAnsi(STR0004),"A410Altera"	,0,4,20,NIL},;		//"Alterar"
							{ OemToAnsi(STR0005),IIf((Type("l410Auto") <> "U" .And. l410Auto),"A410Deleta",aRotina3),0,5,0,NIL},; // Excluir
							{ OemToAnsi(STR0006),aRotina2 		,0,3,0 ,NIL},;		//"Cod.barra"
							{ OemToAnsi(STR0042),"A410PCopia"	,0,6,0 ,NIL},;		//"Copia"
							{ OemToAnsi(STR0052),"A410Devol"	,0,3,0 ,NIL},;		//"Dev. Compras"
							{ OemToAnsi(STR0095),"Ma410PvNfs"	,0,2,0 ,NIL},;		//"Prep.Doc.Saída"
							{ OemToAnsi(STR0032),"A410Legend"	,0,1,0 ,.F.},;		//"Legenda"
							{ STR0103           ,"MsDocument"	,0,4,0 ,NIL} }		//"Conhecimento"
	
							
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Verifica motivo de bloqueio por regra/verba                             ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If	SuperGetMv("MV_VEBLQRG", .F., .F.)	
	Aadd(aRotina,{ OemToAnsi(STR0192) ,"BlqRegBrw",0,0,0 ,NIL} )		//"Blq. Regra"
EndIf

					
If ExistBlock("MA410MNU")
	ExecBlock("MA410MNU",.F.,.F.)
EndIf

Return(aRotina)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma410Opc  ³ Autor ³ Kleber Dias Gomes     ³ Data ³09/01/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao de retorno do codigo do opcional.                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpL1 = Se repete o mesmo grupo de opcional                ³±±
±±³          ³ ExpN1 = Posicao do campo opcional do produto               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Ma410Opc(lOpcPadrao,nPOpcional)

Local cOpcional:= ""
Local aROpc    := {}
Local nI       := 0

Default lOpcPadrao:= GetNewPar("MV_REPGOPC","N") == "N"
Default nPOpcional:= If(lOpcPadrao,aScan(aHeader,{|x| AllTrim(x[2])=="C6_OPC"}),aScan(aHeader,{|x| AllTrim(x[2])=="C6_MOPC"}))

If lOpcPadrao
	cOpcional := aCols[n][nPOpcional]
Else
	aROpc:=STR2Array(aCols[n][nPOpcional],.F.)
	If !Empty(aRopc)
		For nI := 1 To Len(aROpc)
			cOpcional += aROpc[nI,2]
		Next
	Endif
Endif

Return cOpcional
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³Ma410Resid³ Autor ³ Eduardo Riera         ³ Data ³18/01/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Rotina e eliminacao de residuo                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Alias do cabecalho do pedido de venda                ³±±
±±³          ³ExpN2: Recno do cabecalho do pedido de venda                ³±±
±±³          ³ExpN3: Opcao do arotina                                     ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Nenhum                                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao Efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Ma410Resid(cAlias,nReg,nOpc)

Local aArea    := GetArea()
Local lValido  := .F.
Local lContinua:= .T.
Local lIntTMK  := .T.
Local lMt410Ace:= Existblock("MT410ACE")

If SoftLock(cAlias)

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Ponto de entrada para validar acesso do usuario na funcao ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lMt410Ace
		lContinua := Execblock("MT410ACE",.F.,.F.,{nOpc})
	Endif		
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//| Se o Pedido foi originado no SIGALOJA E-COMMERCE Nao elimina resíduo    |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lContinua .AND. SC5->(FieldPos("C5_PEDECOM")) > 0 .AND. !Empty(SC5->C5_PEDECOM) .AND.;
		 (Type("l410Auto") == "U" .OR. !l410Auto)		
			
		MsgAlert(STR0320)//"Este Pedido foi gerado através do módulo de Controle de Lojas  - e-commerce, e  não poderá ter eliminação de resíduo."
		lContinua := .F.
	EndIf
	
	If a410Visual(cAlias,nReg,nOpc)==1
		If ExistBlock("M410VRES")
			lContinua := ExecBlock("M410VRES",.F.,.F.)
		EndIf
		If lContinua
			Begin Transaction
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Eliminacao de residuo                                ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				dbSelectArea("SC6")
				dbSetOrder(1)
				MsSeek(xFilial("SC6")+SC5->C5_NUM)
				
				While ( !Eof() .And. SC6->C6_FILIAL == xFilial("SC6") .And. SC6->C6_NUM 	== SC5->C5_NUM )
					lValido  := .T.
					If lValido .And. !Empty(SC5->C5_PEDEXP) .And. SuperGetMv("MV_EECFAT") // Integracao SIGAEEC
						If FindFunction("EECZERASALDO")
							lValido := EECZeraSaldo(,SC5->C5_PEDEXP,,.T.,SC5->C5_NUM)
						Else
							lValido := EECCancelPed(,SC5->C5_PEDEXP,,.T.,SC5->C5_NUM)
						EndIf
					EndIf
					If lValido .And. (SC6->C6_QTDVEN - SC6->C6_QTDENT) > 0
						 MaResDoFat(,.T.,.F.)
					EndIf
					//Verifica se o pedido foi gerado pelo Televendas.	
					lIntTMK := IIF(lIntTMK,!Empty(SC6->C6_PEDCLI) .And. "TMK" $ upper(SC6->C6_PEDCLI),lIntTMK)
					dbSelectArea("SC6")
					dbSkip()
				EndDo
				SC6->(MaLiberOk({SC5->C5_NUM},.T.))
				//Se o pedido for eliminado por completo, será feito o cancelamento do atendimento do Televendas.
				If lIntTMK .And. SC5->C5_LIBEROK == "S" .And. "X" $ SC5->C5_NOTA
					TkAtuTlv(SC5->C5_NUM,4)
				EndIf
			End Transaction
		EndIf
	EndIf
EndIf
RestArea(aArea)
Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Mta410Vis ³ Autor ³ Marco Bianchi         ³ Data ³ 01/12/06 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Funcao executada a partir da FillGetdados para validar cada ³±±
±±³          ³registro da tabela. Se retornar .T. FILLGETDADOS considera  ³±±
±±³          ³o registro, se .F. despreza o registro.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³MColsVis()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametro ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/


Static Function Mta410Vis(cArqQry,nTotPed,nTotDes,lGrade)

Local lRet      := .T.
Local nTamaCols := Len(aCols)
Local nPosItem  := GDFieldPos("C6_ITEM")
Local nPosQtd   := GDFieldPos("C6_QTDVEN")
Local nPosQtd2  := GDFieldPos("C6_UNSVEN")
Local nPosVlr   := GDFieldPos("C6_VALOR")
Local nPosSld   := GDFieldPos("C6_SLDALIB")
Local nPosDesc  := GDFieldPos("C6_VALDESC")
Local lCriaCols := .F.		// Nao permitir que a funcao A410Grade crie o aCols
Local lGrdMult  := FindFunction("MATGRADE_V") .And. MATGRADE_V() >= 20110425 .And. "MATA410" $ SuperGetMV("MV_GRDMULT",.F.,"")
		
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se este item foi digitada atraves de uma    ³
//³ grade, se for junta todos os itens da grade em uma   ³
//³ referencia , abrindo os itens so quando teclar enter ³
//³ na quantidade                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lGrdMult .And. (cArqQry)->C6_GRADE == "S" .And. lGrade
	a410Grade(.F.,,cArqQry,.T.,lCriaCols)   
	If ( nTamAcols==0 .Or. aCols[nTamAcols][nPosItem] <> (cArqQry)->C6_ITEM )
		lRet := .T.	
	Else
		lRet := .F.	
		aCols[nTamAcols][nPosQtd]  += (cArqQry)->C6_QTDVEN
		aCols[nTamAcols][nPosQtd2] += (cArqQry)->C6_UNSVEN
		If ( nPosDesc > 0 )
			aCols[nTamAcols][nPosDesc] += (cArqQry)->C6_VALDESC
		Endif
		If ( nPosSld > 0 )
			aCols[nTamAcols][nPosSld] += Ma440SaLib()
		EndIf
		aCols[nTamAcols][nPosVlr] += (cArqQry)->C6_VALOR
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Efetua a Somatoria do Rodape                                            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
nTotPed	+= (cArqQry)->C6_VALOR
If ( (cArqQry)->C6_PRUNIT = 0 )
	nTotDes	+= (cArqQry)->C6_VALDESC
Else
	nTotDes += A410Arred(((cArqQry)->C6_PRUNIT*(cArqQry)->C6_QTDVEN),"C6_VALOR")-A410Arred(((cArqQry)->C6_PRCVEN*(cArqQry)->C6_QTDVEN),"C6_VALOR")
EndIf


Return(lRet)


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Mta410Alt ³ Autor ³ Marco Bianchi         ³ Data ³ 29/01/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Funcao executada a partir da FillGetdados para validar cada ³±±
±±³          ³registro da tabela. Se retornar .T. FILLGETDADOS considera  ³±±
±±³          ³o registro, se .F. despreza o registro.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³MColsAlt()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametro ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function Mta410Alt(cArqQry,nTotalPed,nTotalDes,lGrade,lBloqueio,lNaoFatur,lContrat,aRegSC6)

Local lRet      := .T.           
Local lCriaCols := .F.		// Nao permitir que a funcao A410Grade crie o aCols
Local nTamaCols := Len(aCols)
Local nPosItem  := GDFieldPos("C6_ITEM")
Local nPosQtd   := GDFieldPos("C6_QTDVEN")
Local nPosQtd2  := GDFieldPos("C6_UNSVEN")
Local nPosVlr   := GDFieldPos("C6_VALOR")
Local nPosSld   := GDFieldPos("C6_SLDALIB")
Local nPosDesc  := GDFieldPos("C6_VALDESC")
Local lGrdMult  := FindFunction("MATGRADE_V") .And. MATGRADE_V() >= 20110425 .And. "MATA410" $ SuperGetMV("MV_GRDMULT",.F.,"")
			  
If !(("R"$Alltrim((cArqQry)->C6_BLQ)).And.(SuperGetMv("MV_RSDOFAT")=="N"))
	lBloqueio := .F.
EndIf
If !"R"$Alltrim((cArqQry)->C6_BLQ) .Or. SuperGetMv("MV_RSDOFAT")=="S"
	If SC5->C5_TIPO$"CIP"
		If Empty((cArqQry)->C6_NOTA)
			lNaoFatur := .T.
		EndIf
	Else
		 dbSelectArea("SF4")
		dbSetOrder(1)
		dbSeek(xFilial("SF4")+(cArqQry)->C6_TES)
		If ( (cArqQry)->C6_QTDENT < (cArqQry)->C6_QTDVEN .AND. SF4->F4_QTDZERO <> "1" ) .OR. ;
				((cArqQry)->C6_QTDENT == (cArqQry)->C6_QTDVEN .AND. SF4->F4_QTDZERO == "1" .AND. Empty((cArqQry)->C6_NOTA))
			lNaoFatur := .T.
		EndIf
	EndIf
EndIf
If !Empty((cArqQry)->C6_CONTRAT) .And. !lContrat
	dbSelectArea("ADB")
	dbSetOrder(1)
	If MsSeek(xFilial("ADB")+(cArqQry)->C6_CONTRAT+SC6->C6_ITEMCON)
		If ADB->ADB_QTDEMP > 0 .And. ADB->ADB_PEDCOB == (cArqQry)->C6_NUM
			lContrat := .T.
		EndIf
	EndIf
	dbSelectArea(cArqQry)
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se este item foi digitada atraves de uma    ³
//³ grade, se for junta todos os itens da grade em uma   ³
//³ referencia , abrindo os itens so quando teclar enter ³
//³ na quantidade                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lGrdMult .And. (cArqQry)->C6_GRADE == "S" .And. lGrade
	a410Grade(.T.,,cArqQry,.T.,lCriaCols)
	If ( nTamAcols==0 .Or. aCols[nTamAcols][nPosItem] <> (cArqQry)->C6_ITEM )
		lRet := .T.	
	Else
		lRet := .F.	
		aCols[nTamAcols][nPosQtd]  += (cArqQry)->C6_QTDVEN
		aCols[nTamAcols][nPosQtd2] += (cArqQry)->C6_UNSVEN
		If ( nPosDesc > 0 )
			aCols[nTamAcols][nPosDesc] += (cArqQry)->C6_VALDESC
		Endif
		If ( nPosSld > 0 )
			aCols[nTamAcols][nPosSld] += Ma440SaLib()
		EndIf
		aCols[nTamAcols][nPosVlr] += (cArqQry)->C6_VALOR
	EndIf
EndIf


nTotalPed += (cArqQry)->C6_VALOR
If ( (cArqQry)->C6_PRUNIT = 0 )
	nTotalDes += (cArqQry)->C6_VALDESC
Else
	nTotalDes += A410Arred(((cArqQry)->C6_PRUNIT*(cArqQry)->C6_QTDVEN),"C6_VALOR")-A410Arred(((cArqQry)->C6_PRCVEN*(cArqQry)->C6_QTDVEN),"C6_VALOR")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Guarda os registros do SC6 para posterior gravacao                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aadd(aRegSC6,If((cArqQry)->(FieldPos("SC6RECNO")) > 0,(cArqQry)->SC6RECNO,(cArqQry)->(RecNo())))


Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Mta410Del ³ Autor ³ Marco Bianchi         ³ Data ³ 30/01/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Funcao executada a partir da FillGetdados para validar cada ³±±
±±³          ³registro da tabela. Se retornar .T. FILLGETDADOS considera  ³±±
±±³          ³o registro, se .F. despreza o registro.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³MColsDel()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametro ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function Mta410Del(cArqQry,nTotalPed,nTotalDes,lGrade,aRegSC6,lPedTLMK,lLiber,lFaturado,lContrat)

Local lRet      := .T.
Local lCriaCols := .F.		// Nao permitir que a funcao A410Grade crie o aCols
Local nTamaCols :=Len(aCols)
Local nPosItem  := GDFieldPos("C6_ITEM")
Local nPosQtd   := GDFieldPos("C6_QTDVEN")
Local nPosQtd2  := GDFieldPos("C6_UNSVEN")
Local nPosVlr   := GDFieldPos("C6_VALOR")
Local nPosSld   := GDFieldPos("C6_SLDALIB")
Local nPosDesc  := GDFieldPos("C6_VALDESC")
Local lGrdMult  := FindFunction("MATGRADE_V") .And. MATGRADE_V() >= 20110425 .And. "MATA410" $ SuperGetMV("MV_GRDMULT",.F.,"")

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se algum item foi criado no TLMK                              ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Left( ( cArqQry )->C6_PEDCLI, 3 ) == "TMK"
	lPedTLMK := .T.
EndIf

If ( (cArqQry)->C6_QTDEMP > 0 )
	lLiber := .T.
EndIf

If SC5->(FieldPos("C5_ORIGEM")) > 0 .And. (AllTrim(SC5->C5_ORIGEM) == "MSGEAI" .Or. Alltrim(SC5->C5_ORIGEM) == "LOGIX")
	If !Empty(SC5->C5_NOTA)
		lFaturado := .T.
	Endif
Endif

If ( (cArqQry)->C6_QTDENT > 0 ) .Or. ( SC5->C5_TIPO $ "CIP" .And. !Empty((cArqQry)->C6_NOTA) )
	lFaturado  :=  .T.
EndIf
If !Empty((cArqQry)->C6_CONTRAT) .And. !lContrat
	dbSelectArea("ADB")
	dbSetOrder(1)
	If MsSeek(xFilial("ADB")+(cArqQry)->C6_CONTRAT+SC6->C6_ITEMCON)
		If ADB->ADB_QTDEMP > 0 .And. ADB->ADB_PEDCOB == (cArqQry)->C6_NUM
			lContrat := .T.
		EndIf
	EndIf
	dbSelectArea(cArqQry)
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se este item gerou OP/SC, caso tenha gerado ³
//³ inclui no array aOPs para perguntar se exclui ou nao ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (cArqQry)->C6_OP $ "01/03"
	AADD(aOPs,{(cArqQry)->C6_ITEM,Alltrim((cArqQry)->C6_PRODUTO),(cArqQry)->C6_NUMOP,(cArqQry)->C6_ITEMOP, '',''})
	If SC6->(FieldPos("C6_NUMSC")) > 0 .And. SC6->(FieldPos("C6_ITEMSC")) > 0 .And.  !Empty((cArqQry)->C6_NUMSC)
		aOPs[Len(aOPs)][5] := (cArqQry)->C6_NUMSC
		aOPs[Len(aOPs)][6] := (cArqQry)->C6_ITEMSC
	EndIf
EndIf
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se este item foi digitada atraves de uma    ³
//³ grade, se for junta todos os itens da grade em uma   ³
//³ referencia , abrindo os itens so quando teclar enter ³
//³ na quantidade                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lGrdMult .And. (cArqQry)->C6_GRADE == "S" .And. lGrade
	a410Grade(.T.,,cArqQry,.T.,lCriaCols)
	If ( nTamAcols==0 .Or. aCols[nTamAcols][nPosItem] <> (cArqQry)->C6_ITEM )
		lRet := .T.	
	Else
		lRet := .F.	
		aCols[nTamAcols][nPosQtd]  += (cArqQry)->C6_QTDVEN
		aCols[nTamAcols][nPosQtd2] += (cArqQry)->C6_UNSVEN
		If ( nPosDesc > 0 )
			aCols[nTamAcols][nPosDesc] += (cArqQry)->C6_VALDESC
		Endif
		If ( nPosSld > 0 )
			aCols[nTamAcols][nPosSld] += Ma440SaLib()
		EndIf
		aCols[nTamAcols][nPosVlr] += (cArqQry)->C6_VALOR
	EndIf
EndIf

nTotalPed += (cArqQry)->C6_VALOR
If ( (cArqQry)->C6_PRUNIT = 0 )
	nTotalDes += (cArqQry)->C6_VALDESC
Else
	nTotalDes += A410Arred(((cArqQry)->C6_PRUNIT*(cArqQry)->C6_QTDVEN),"C6_VALOR")-A410Arred(((cArqQry)->C6_PRCVEN*(cArqQry)->C6_QTDVEN),"C6_VALOR")
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Guarda os registros do SC6 para posterior gravacao                      ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aadd(aRegSC6,If((cArqQry)->(FieldPos("SC6RECNO")) > 0,(cArqQry)->SC6RECNO,(cArqQry)->(RecNo())))

Return lRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³Mta410Cop ³ Autor ³ Marco Bianchi         ³ Data ³ 30/01/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Funcao executada a partir da FillGetdados para validar cada ³±±
±±³          ³registro da tabela. Se retornar .T. FILLGETDADOS considera  ³±±
±±³          ³o registro, se .F. despreza o registro.                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³MColsCop()                                                  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametro ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Static Function Mta410Cop(cArqQry,nTotalPed,nTotalDes,lGrade, lCopia)

Local lRet      := .T.
Local lCriaCols := .F.		// Nao permitir que a funcao A410Grade crie o aCols
Local nTamaCols :=Len(aCols)
Local nPosItem  := GDFieldPos("C6_ITEM")
Local nPosQtd   := GDFieldPos("C6_QTDVEN")
Local nPosQtd2  := GDFieldPos("C6_UNSVEN")
Local nPosVlr   := GDFieldPos("C6_VALOR")
Local nPosSld   := GDFieldPos("C6_SLDALIB")
Local nPosDesc  := GDFieldPos("C6_VALDESC")
Local lGrdMult  := FindFunction("MATGRADE_V") .And. MATGRADE_V() >= 20110425 .And. "MATA410" $ SuperGetMV("MV_GRDMULT",.F.,"")
								 
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Verifica se este item foi digitada atraves de uma    ³
//³ grade, se for junta todos os itens da grade em uma   ³
//³ referencia , abrindo os itens so quando teclar enter ³
//³ na quantidade                                        ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If !lGrdMult .And. (cArqQry)->C6_GRADE == "S" .And. lGrade
	a410Grade(.T.,,cArqQry,.F.,lCriaCols)
	If ( nTamAcols==0 .Or. aCols[nTamAcols][nPosItem] <> (cArqQry)->C6_ITEM )
		lRet := .T.	
	Else
		lRet := .F.	
		aCols[nTamAcols][nPosQtd]  += (cArqQry)->C6_QTDVEN
		aCols[nTamAcols][nPosQtd2] += (cArqQry)->C6_UNSVEN
		If ( nPosDesc > 0 )
			aCols[nTamAcols][nPosDesc] += (cArqQry)->C6_VALDESC
		Endif
		If ( nPosSld > 0 )
			aCols[nTamAcols][nPosSld] += Ma440SaLib()
		EndIf
		aCols[nTamAcols][nPosVlr] += (cArqQry)->C6_VALOR
	EndIf
EndIf
	
nTotalPed += (cArqQry)->C6_VALOR
If ( (cArqQry)->C6_PRUNIT = 0 )
	nTotalDes += (cArqQry)->C6_VALDESC
Else
	nTotalDes += A410Arred(((cArqQry)->C6_PRUNIT*(cArqQry)->C6_QTDVEN),"C6_VALOR")-A410Arred(((cArqQry)->C6_PRCVEN*(cArqQry)->C6_QTDVEN),"C6_VALOR")
EndIf

//se for copia e o produto esta bloqueado ignora
If (lCopia)
	dbSelectArea("SB1")
	dbSetOrder(1)
	If ( dbSeek(xFilial("SB1")+(cArqQry)->C6_PRODUTO) )
		If (SB1->B1_MSBLQL == "1")
			lRet := .F.
			MsgAlert(STR0212 + AllTrim((cArqQry)->C6_PRODUTO) + STR0213)
		EndIf
	EndIf
EndIf


	
Return lRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³AfterCols ³ Autor ³ Marco Bianchi         ³ Data ³ 24/01/07 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Funcao executada apos inclusao de nova linha no aCols pela  ³±±
±±³          ³FillgetDados.                                               ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³AfterCols()                                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametro ³                                                            ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function AfterCols(cArqQry,cTipoDat,dCopia,dOrig,lCopia)
			  
Local nPosProd  := GDFieldPos("C6_PRODUTO")
Local nPosGrade := GDFieldPos("C6_GRADE")
Local nPIdentB6 := GDFieldPos("C6_IDENTB6")
Local nPEntreg  := GDFieldPos("C6_ENTREG")
Local nPPedCli  := GDFieldPos("C6_PEDCLI")
Local nQtdLib   := GDFieldPos("C6_QTDLIB")
Local nItem	  	:= GDFieldPos("C6_ITEM")	
Local nAux      := 0
Local aLiberado := {}
Local cCampo    := ""
Local lGrdMult  := FindFunction("MATGRADE_V") .And. MATGRADE_V() >= 20110425 .And. "MATA410" $ SuperGetMV("MV_GRDMULT",.F.,"")

DEFAULT lCopia  := .F.
											
If !lGrdMUlt
	If nPosGrade > 0 .And. aCols[Len(aCols)][nPosGrade] == "S"
		cProdRef := (cArqQry)->C6_PRODUTO
		MatGrdPrRf(@cProdRef,.T.)
		aCols[Len(aCols)][nPosProd] := cProdRef
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Mesmo nao sendo um item digitado atraves de grade e' necessa-³
		//³ rio criar o Array referente a este item para controle da     ³
		//³ grade                                                        ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If FindFunction("MsMatGrade") .And. IsAtNewGrd()
			oGrade:MontaGrade(Len(aCols))
		Else
			MatGrdMont(Len(aCols))
		EndIf 
	EndIf	
EndIf

If Altera
	If ( SC5->C5_TIPO <> "D" )
		nAux := aScan(aLiberado,{|x| x[2] == aCols[Len(aCols)][nPIdentB6]})
		If ( nAux == 0 )
			aadd(aLiberado,{ (cArqQry)->C6_ITEM , aCols[Len(aCols)][nPIdentB6] , (cArqQry)->C6_QTDEMP, (cArqQry)->C6_QTDENT })
		Else
			aLiberado[nAux][3] += (cArqQry)->C6_QTDEMP
			aLiberado[nAux][4] += (cArqQry)->C6_QTDENT
		EndIf
	Else
		nAux := aScan(aLiberado,{|x| x[1] == (cArqQry)->C6_SERIORI .And.;
		x[2] == (cArqQry)->C6_NFORI   .And.;
		x[3] == (cArqQry)->C6_ITEMORI })
		If ( nAux == 0 )
			aadd(aLiberado,{ (cArqQry)->C6_SERIORI , (cArqQry)->C6_NFORI , (cArqQry)->C6_ITEMORI , (cArqQry)->C6_QTDEMP })
		Else
			aLiberado[nAux][4] += (cArqQry)->C6_QTDEMP
		EndIf
	EndIf
	// Necessario para disparar inicializador padrao
	aCols[Len(aCols)][nQtdLib] := CriaVar("C6_QTDLIB")
EndIf

If lCopia
	cCampo := Alltrim(aHeader[nPEntreg,2])           
	Do Case
		Case cTipoDat == "1"
			aCols[Len(aCols)][nPEntreg] := FieldGet(FieldPos(cCampo))
		Case cTipoDat == "2"
			aCols[Len(aCols)][nPEntreg] := If(FieldGet(FieldPos(cCampo)) < dCopia,dCopia,FieldGet(FieldPos(cCampo)) )
		Case cTipoDat == "3"
			aCols[Len(aCols)][nPEntreg] := dCopia + (FieldGet(FieldPos(cCampo)) - dOrig )
	EndCase

	If SubStr(aCols[Len(aCols)][nPPedCli],1,3)=="TMK"
		cCampo := Alltrim(aHeader[nPPedCli,2])           
		aCols[Len(aCols)][nPPedCli] := CriaVar(cCampo)
	EndIf	
	
	If Empty( aCols[Len(aCols)][nItem] )
		aCols[Len(aCols)][nItem] := Soma1(aCols[Len(aCols)][nItem])
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Estes campos nao podem ser copiados                  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	GDFieldPut("C6_QTDLIB"  ,CriaVar("C6_QTDLIB"  ),Len(aCols))
	GDFieldPut("C6_RESERVA" ,CriaVar("C6_RESERVA" ),Len(aCols))
	GDFieldPut("C6_CONTRAT" ,CriaVar("C6_CONTRAT" ),Len(aCols))
	GDFieldPut("C6_ITEMCON" ,CriaVar("C6_ITEMCON" ),Len(aCols))
	GDFieldPut("C6_PROJPMS" ,CriaVar("C6_PROJPMS" ),Len(aCols))
	GDFieldPut("C6_EDTPMS"  ,CriaVar("C6_EDTPMS"  ),Len(aCols))
	GDFieldPut("C6_TASKPMS" ,CriaVar("C6_TASKPMS" ),Len(aCols))
	GDFieldPut("C6_LICITA"  ,CriaVar("C6_LICITA"  ),Len(aCols))
	GDFieldPut("C6_PROJET"  ,CriaVar("C6_PROJET"  ),Len(aCols))
	GDFieldPut("C6_ITPROJ"  ,CriaVar("C6_ITPROJ"  ),Len(aCols))
	GDFieldPut("C6_CONTRT"  ,CriaVar("C6_CONTRT"  ),Len(aCols))
	GDFieldPut("C6_TPCONTR" ,CriaVar("C6_TPCONTR" ),Len(aCols))
	GDFieldPut("C6_ITCONTR" ,CriaVar("C6_ITCONTR" ),Len(aCols))
	GDFieldPut("C6_NUMOS"   ,CriaVar("C6_NUMOS"   ),Len(aCols))
	GDFieldPut("C6_NUMOSFAT",CriaVar("C6_NUMOSFAT"),Len(aCols))
	GDFieldPut("C6_OP"      ,CriaVar("C6_OP"      ),Len(aCols))
	GDFieldPut("C6_NUMOP"   ,CriaVar("C6_NUMOP"   ),Len(aCols))
	GDFieldPut("C6_ITEMOP"  ,CriaVar("C6_ITEMOP"  ),Len(aCols))
	GDFieldPut("C6_NUMSC"   ,CriaVar("C6_NUMSC"   ),Len(aCols))
	GDFieldPut("C6_ITEMSC"  ,CriaVar("C6_ITEMSC"  ),Len(aCols))
	GDFieldPut("C6_NUMORC"  ,CriaVar("C6_NUMORC"  ),Len(aCols))
	GDFieldPut("C6_BLQ"     ,CriaVar("C6_BLQ"     ),Len(aCols))
	GDFieldPut("C6_NOTA"    ,CriaVar("C6_NOTA"    ),Len(aCols))
	GDFieldPut("C6_SERIE"   ,CriaVar("C6_SERIE"   ),Len(aCols))
	If SC6->(FieldPos('C6_CODINF')) > 0
		GDFieldPut("C6_INFAD"   ,CriaVar("C6_INFAD"   ),Len(aCols))
	EndIf
	If SC6->(FieldPos("C6_FILPED")) > 0
		GDFieldPut("C6_FILPED"  ,CriaVar("C6_FILPED"  ),Len(aCols))
	EndIf
	If SC6->(FieldPos("C6_PEDCOM")) > 0
		GDFieldPut("C6_PEDCOM"  ,CriaVar("C6_PEDCOM"  ),Len(aCols))
	EndIf
	If SC6->(FieldPos("C6_ITPC")) > 0
		GDFieldPut("C6_ITPC"    ,CriaVar("C6_ITPC"    ),Len(aCols))
	EndIf
EndIf

Return(.T.) 

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³AjustaSX1 ºAutor  ³Marcelo Alexandre   º Data ³ 08/05/2007  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410		                                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Static Function AjustaSX1()

Local aHelpPor	:= {}
Local aHelpEng	:= {}
Local aHelpSpa	:= {}

aHelpPor := {}
aHelpSpa := {}
aHelpEng := {}

AADD(aHelpPor,"Informe Saldo para considerar o saldo 	")
AADD(aHelpPor,"restante do pedido de vendas o que foi	") 
AADD(aHelpPor,"faturado e eliminado resíduo ou Total.	")

AADD(aHelpSpa,"Informe Saldo para considerar el saldo 	")
AADD(aHelpSpa,"restante del pedido de ventas, el que se ")
AADD(aHelpSpa,"facturó y eliminó por residuo ou total.	")

AADD(aHelpEng,"Inform the balance to consider the remai-")
AADD(aHelpEng,"ning balance of the request of sales that") 
AADD(aHelpEng,"was invoiced and removed residue or Total")

PutSx1("MTA410","04","Planilha Financeira?","Planilla financiera?","Financial Worksheet?","mv_ch4","N",1,0,2,"C","","","","","mv_par04","Saldo","Saldo","Balance","","Total","Total","Total","","","","","","","","","")
PutSX1Help("P.MTA41004.",aHelpPor,aHelpEng,aHelpSpa)
							  
PutSx1("MTA410","05","Contabiliza On-Line?","¿Contabiliza en linea?","Record Online?"           ,"mv_ch5","N",1,0,2,"C","","","","","mv_par05","Sim","Si","Yes"  ,"","Nao","No","No","","","","","","","","","")
PutSx1("MTA410","06","Aglutina Lanc. Contabil?","¿Agrupa Asto. Contable?","Group Accnt.Entry?"  ,"mv_ch6","N",1,0,2,"C","","","","","mv_par06","Sim","Si","Yes"  ,"","Nao","No","No","","","","","","","","","")
PutSx1("MTA410","07","Mostra lancamento?","¿Muestra asiento?","Display Entry ?"                 ,"mv_ch7","N",1,0,2,"C","","","","","mv_par07","Sim","Si","Yes"  ,"","Nao","No","No","","","","","","","","","")
	
aHelpPor := {}
aHelpSpa := {}
aHelpEng := {}

AADD(aHelpPor,"Pedido de Venda gerado pelo módulo de")
AADD(aHelpPor,"gestão de contratos, este pedido não ") 
AADD(aHelpPor,"poderá ser alterado por esse processo.")

AADD(aHelpSpa,"Pedido de Venda generado por el Modulo")
AADD(aHelpSpa,"Gestion de Contratos, este pedido no ")
AADD(aHelpSpa,"podra modificarse o borrarse ")
AADD(aHelpSpa,"por esta rutina.	")

AADD(aHelpEng,"Sales Order generated by the Contracts ")
AADD(aHelpEng," Management Module, therefore this ") 
AADD(aHelpEng,"order cannot be modified or deleted by ")
AADD(aHelpEng,"this routine. ")  

PutHelp("PMTA410AGCT",aHelpPor,aHelpEng,aHelpSpa,.T.) 

aHelpPor := {}
aHelpSpa := {}
aHelpEng := {}

AADD(aHelpPor,"Estorne a medição referente ao pedido.   ")

AADD(aHelpSpa,"Revierta la medicion referente al pedido.")

AADD(aHelpEng,"Reverse measurement related to order.    ")
		 
PutHelp("SMTA410AGCT",aHelpPor,aHelpEng,aHelpSpa,.T.)

aHelpPor := {}
aHelpSpa := {}
aHelpEng := {}

AADD(aHelpPor,"O preço não poderá ser alterado pois foi ")
AADD(aHelpPor,"aplicado desconto ao item do pedido de ") 
AADD(aHelpPor,"venda.")

AADD(aHelpSpa,"El precio no poderá ser cambiado pues fue")
AADD(aHelpSpa,"aplicado descuento al ítem del pedido de")
AADD(aHelpSpa,"venta.")

AADD(aHelpEng,"The price cannot be changed because it")
AADD(aHelpEng,"was applied disccount in sales order item") 

PutSX1Help("PA410PRCD",aHelpPor,aHelpEng,aHelpSpa)

aHelpPor := {}
aHelpSpa := {}
aHelpEng := {}

AADD(aHelpPor,"Elimine o desconto aplicado ao item do")
AADD(aHelpPor,"pedido e então realize as alterações") 
AADD(aHelpPor,"necessárias.")

AADD(aHelpSpa,"Elimine el descuento aplicado al ítem del")
AADD(aHelpSpa,"pedido y entonces realice los cambios")
AADD(aHelpSpa,"necesario.")

AADD(aHelpEng,"Remove the disccount applied in order")
AADD(aHelpEng,"item and then make the necessary changes.") 

PutSX1Help("SA410PRCD",aHelpPor,aHelpEng,aHelpSpa)
	
aHelpPor := {}
aHelpSpa := {}
aHelpEng := {}

aHelpPor :=	{	"Pedido de Venda pertence a um Edital,","e não poderá ser alterado,", "copiado ou excluido."}
aHelpEng := {   "Sales Order belongs to a Notice.","It cannot be changed,", "copied, or deleted."}
aHelpEsp := {   "Pedido de venta pertenece a un edicto,","y no se podrá modificar,", "copiar o borrar."}
PutHelp("PA410EDITAL",aHelpPor,aHelpEng,aHelpEsp,.F.)

aHelpPor :=	{ "Inclua o pedido manualmente,","ou copie um pedido que nao","pertença à um edital" } 
aHelpEng :=	{ "Add the order manually or","copy an order that does not","belong to a notice." } 
aHelpEsp :=	{ "Incluya el pedido manualmente,","o copie un pedido que no","pertenezca a un edicto." } 
PutHelp( "SA410EDITAL" ,aHelpPor,aHelpEng,aHelpEsp,.F.)

aHelpPor := {}
aHelpSpa := {}
aHelpEng := {}
aAdd( aHelpPor, "Motivo da isenção de impostos para ")
aAdd( aHelpPor, "artigos e serviços." )

aAdd( aHelpEng, "Motivo da isenção de impostos para ")
aAdd( aHelpEng, "artigos e serviços." )

aAdd( aHelpSpa,"Motivo da isenção de impostos para ")
aAdd( aHelpSpa, "artigos e serviços." )
 

PutHelp( "PC6_MENPAD", aHelpPor, aHelpEng, aHelpSpa, .T. ) 

aHelpPor := {}
aHelpSpa := {}
aHelpEng := {}
aAdd( aHelpPor, "Se o item estiver isento é ")
aAdd( aHelpPor, "necessário cadastrar uma mensagem." )

aAdd( aHelpEng, "Se o item estiver isento é ")
aAdd( aHelpEng, "necessário cadastrar uma mensagem." )

aAdd( aHelpSpa, "Se o item estiver isento é ")
aAdd( aHelpSpa, "necessário cadastrar uma mensagem." )
 
PutHelp( "SC6_MENPAD", aHelpPor, aHelpEng, aHelpSpa, .T. ) 

aHelpPor := {}
aHelpSpa := {}
aHelpEng := {}

aAdd( aHelpPor, "Armazém bloqueado para uso. ")
aAdd( aHelpEng, "Armazém bloqueado para uso. ")
aAdd( aHelpSpa, "Armazém bloqueado para uso. ")

PutHelp( "PARMBLOQ", aHelpPor, aHelpEng, aHelpSpa, .T. ) 

aHelpPor := {}
aHelpSpa := {}
aHelpEng := {}

AADD(aHelpPor,"Condição de Pagamento utilizada não é ")
AADD(aHelpPor," de adiantamento.")

AADD(aHelpSpa,"Condição de Pagamento utilizada não é ")
AADD(aHelpSpa," de adiantamento.")

AADD(aHelpEng,"Condição de Pagamento utilizada não é ")
AADD(aHelpEng," de adiantamento.")

PutHelp("PA410CONDNADT",aHelpPor,aHelpEng,aHelpSpa,.T.)

aHelpPor := {}
aHelpSpa := {}
aHelpEng := {}

AADD(aHelpPor,"Desmarque os adiantamentos vinculados.")

AADD(aHelpSpa,"Desmarque os adiantamentos vinculados.")

AADD(aHelpEng,"Desmarque os adiantamentos vinculados.")

PutHelp("SA410CONDNADT",aHelpPor,aHelpEng,aHelpSpa,.T.)

Return  

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  |A410AjuSX3ºAutor  ³Marcelo Alexandre   º Data ³ 11/07/2007  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410		                                              º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Static Function A410AjuSX3()

Local aAreaSX3 := SX3->(GetArea())
Local aAreaAnt := GetArea()
Local nCntfor  := 0
Local cValid   := ''
Local nNrVend  := Fa440CntVen()
Local aPHelpPor := {"Indica se a ordem de separação (SIGAWMS)",;
					"deve ser gerada na liberação do pedido,",;
					"na montagem ou na unitização da carga." }
Local aPHelpEng := {"Indica si el O.S. (SIGAWMS)",;
					"debe ser generada en el pedido,",;
					"en el montaje o en la unitization."}
Local aPHelpSpa := {"It indicates if generates S.O.(SIGAWMS)",;
					"in Sales Order, in Assemble Load",;
					"or in unitizacion."}

SX3->(dbSetOrder(2))

//-- SIGAWMS: Ajuste do ComboBox
If	SX3->(dbSeek("C5_GERAWMS"))
	If	SX3->(Empty(X3_CBOX) .Or. Empty(X3_CBOXSPA) .Or. Empty(X3_CBOXENG))
		RecLock("SX3",.F.)
		SX3->X3_CBOX    := "1=no Pedido;2=na Montagem da Carga;3=na Unitizacao da Carga"
		SX3->X3_CBOXSPA := "1=en el Pedido;2=en el Montaje de Carga;3=en la Unitizacion"
		SX3->X3_CBOXENG := "1=in Sales Order;2=in Assemble Load;3=in Unitization"
		MsUnLock()
	EndIf
	PutHelp("PC5_GERAWMS",aPHelpPor,aPHelpEng,aPHelpSpa,.T.)
EndIf

SX3->(dbSetOrder(2))
For nCntfor := 1 To nNrVend
	SX3->(dbSeek("C5_VEND"+Str(nCntfor,1)))
	If '.OR. EXISTCPO("SA3")' $ Upper(SX3->X3_VALID)
		RecLock("SX3",.F.)
		Replace SX3->X3_VALID With StrTran(AllTrim(Upper(SX3->X3_VALID)),'.OR. EXISTCPO("SA3")','')
		Replace SX3->X3_VALID With StrTran(AllTrim(Upper(SX3->X3_VALID)),'.AND. VAZIO()','.OR. VAZIO()')
		MsUnLock()
	Else
		Exit
	EndIf
Next nCntfor

If cPaisLoc == "ANG"
	If	SX3->(dbSeek("C5_DOCGER")) 
		If AllTrim(SX3->X3_CBOX) <> '1=Factura;2=Guia de Transporte;3=Entrega Futura'
			RecLock("SX3",.F.)
			SX3->X3_CBOX := '1=Factura;2=Guia de Transporte;3=Entrega Futura'
			MsUnLock()
		EndIf
	EndIf
EndIf
			  
//Impede que o campo C6_QTDLIB deixe de ser "Usado". 
SX3->(dbSetOrder(2))
if SX3->( dbSeek( "C6_QTDLIB" ) ) .and. SX3->X3_USADO <> "€€€€€€€€€€€€€€ "
			RecLock("SX3", .F.) 
			SX3->X3_USADO  := "€€€€€€€€€€€€€€ " 
			SX3->( msUnlock() )
endif 

SX3->(dbSetOrder(2))
if SX3->( dbSeek( "D2_ITEMPV" ) ) .and. Alltrim(SX3->X3_PICTURE) <> "@!"
			RecLock("SX3", .F.) 
			SX3->X3_PICTURE  := "@!" 
			SX3->( msUnlock() )
endif

SX3->(dbSeek("C6_PRCVEN"))
If !("A410QtdGra" $ SX3->X3_VALID)
	RecLock("SX3",.F.)
	Replace SX3->X3_VALID With StrTran(SX3->X3_VALID,"A410MultT","A410QtdGra() .And. A410MultT")
	MsUnLock()
EndIf

SX3->(dbSeek("C6_BLQ"))
If !("A410QtdGra" $ SX3->X3_VALID)
	RecLock("SX3",.F.)
	Replace SX3->X3_VALID With StrTran(SX3->X3_VALID,"ExistCpo","A410QtdGra() .And. ExistCpo")
	MsUnLock()
EndIf

SX3->(dbSeek("C5_CONDPAG"))
If !("A410Recalc" $ SX3->X3_VALID)
	RecLock("SX3",.F.)
	Replace SX3->X3_VALID With AllTrim(SX3->X3_VALID)+" .AND. A410Recalc()"
	MsUnLock()
EndIf      

SX3->(dbSeek("C5_TRANSP"))
If SX3->X3_PYME <> "S"
	RecLock("SX3", .F.)
	SX3->X3_PYME := "S"
	MsUnLock()
EndIf

If SX3->(dbSeek("C6_TES")) .and. !('A410MultT() .And. A410SitTrib()' $ AllTrim(SX3->X3_VALID)) .and. FindFunction("A410SitTrib")
	RecLock("SX3",.F.)
	Replace SX3->X3_VALID With "A410MultT() .And. A410SitTrib()"
	MsUnLock()
EndIf

If SX3->(dbSeek("C6_OPER")) .AND. !('Vazio() .Or. ExistCpo("SX5","DJ"+M->C6_OPER) .And. A410SitTrib() .AND. MTA410OPER(n)' $ AllTrim(SX3->X3_VALID))
	cValid:= IIf(FindFunction("A410SitTrib"), 'Vazio() .Or. ExistCpo("SX5","DJ"+M->C6_OPER) .And. A410SitTrib() .AND. MTA410OPER(n)', 'Vazio() .Or. ExistCpo("SX5","DJ"+M->C6_OPER) .AND. MTA410OPER(n)') 
	RecLock("SX3",.F.)
	SX3->X3_VALID := cValid
	MsUnlock()
EndIf
	

RestArea(aAreaSX3)
RestArea(aAreaAnt)
Return Nil
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ A410AjuSX7³ Autor ³ Vendas/CRM  		    ³ Data ³ 07/03/13 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Ajuste de gatilhos.					                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA410			                        				  |±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A410AjuSX7()

Local aAreaSX7 := SX7->(GetArea())
Local aAreaAnt := GetArea()

If FindFunction("A410SitTrib")
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Alteração da regra e chave do gatilho do campo C6_PRODUTO - SEQ: 001   	 ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If SX7->(dbSeek("C6_PRODUTO001")) .And. Trim(Upper(SX7->X7_REGRA)) != Upper('CodSitTri()')
		RecLock("SX7",.F.)
		SX7->X7_REGRA := 'CodSitTri()'
		SX7->(MsUnlock())
	EndIf

	If SX7->(dbSeek("C6_PRODUTO001")) .And. Trim(Upper(SX7->X7_CHAVE)) != Upper('IIf(!Empty(SB1->B1_TS),xFilial("SF4")+SB1->B1_TS,xFilial("SF4")+M->C6_TES)')
		RecLock("SX7",.F.)
		SX7->X7_CHAVE := 'IIf(!Empty(SB1->B1_TS),xFilial("SF4")+SB1->B1_TS,xFilial("SF4")+M->C6_TES)'
		SX7->(MsUnlock())
	EndIf
EndIf

RestArea(aAreaSX7)
RestArea(aAreaAnt)

Return Nil

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³A410LAICMS³ Autor ³ Gustavo G. Rueda      ³ Data ³05/12/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao para montagem do GETDADOS do folder de lancamentos   ³±±
±±³          ³ fiscais.                                                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³oLancApICMS -> Objeto criado pelo MSNEWGETDADOS             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³oDlg -> Objeto pai onde o GETDADOS serah criado.            ³±±
±±³          ³aPos -> posicoes de criacao do objeto.                      ³±±
±±³          ³aHeadCDA -> array com o HEADER da tabela CDA                ³±±
±±³          ³aColsCDA -> array com o ACOLS da tabela CDA                 ³±±
±±³          ³lVisual -> Flag de visualizacao                             ³±±
±±³          ³lInclui -> Flag de inclusao                                 ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A410LAICMS(oDlg,aPos,aHeadCDA,aColsCDA,lVisual,lInclui)
Local	oLancApICMS
Local	aCmps		:=	{}
Local	nI			:=	0
Local	aLAp		:=	A410LancAp()
Local	cMaskBs		:=	""
Local	cMaskAlq	:=	""
Local	cMaskVlr	:=	""
Local	nPNUMITE	:=	0
Local	nPSEQ		:=	0
Local	nPCODLAN	:=	0
Local	nPCALPRO	:=	0
Local	nPBASE		:=	0
Local	nPALIQ		:=	0
Local	nPVALOR		:=	0
Local	nPIFCOMP	:=	0
Local	nDCCOMP		:=	0
Local	nTPLANC		:=	0
Local	nVL197		:=	0

aMHead("CDA","CDA_TPMOVI/CDA_ESPECI/CDA_FORMUL/CDA_NUMERO/CDA_SERIE/CDA_CLIFOR/CDA_LOJA/",@aHeadCDA)
For nI := 1 To Len(aHeadCDA)
	aAdd(aCmps,aHeadCDA[nI,1])
	
	If "CDA_BASE"==AllTrim(aHeadCDA[nI,2])
		cMaskBs		:=	AllTrim(aHeadCDA[nI,3])
		
	ElseIf "CDA_ALIQ"==AllTrim(aHeadCDA[nI,2])
		cMaskAlq	:=	AllTrim(aHeadCDA[nI,3])
		
	ElseIf "CDA_VALOR"==AllTrim(aHeadCDA[nI,2])
		cMaskVlr	:=	AllTrim(aHeadCDA[nI,3])
	EndIf
	

	If nPNUMITE==0
		nPNUMITE	:=	Iif("CDA_NUMITE"$aHeadCDA[nI,2],nI,0)
	EndIf
	If nPSEQ==0
		nPSEQ		:=	Iif("CDA_SEQ"$aHeadCDA[nI,2],nI,0)
	EndIf
	If nPCODLAN==0
		nPCODLAN	:=	Iif("CDA_CODLAN"$aHeadCDA[nI,2],nI,0)
	EndIf
	If nPCALPRO==0
		nPCALPRO	:=	Iif("CDA_CALPRO"$aHeadCDA[nI,2],nI,0)
	EndIf
	If nPBASE==0
		nPBASE		:=	Iif("CDA_BASE"$aHeadCDA[nI,2],nI,0)
	EndIf
	If nPALIQ==0
		nPALIQ		:=	Iif("CDA_ALIQ"$aHeadCDA[nI,2],nI,0)
	EndIf
	If nPVALOR==0
		nPVALOR		:=	Iif("CDA_VALOR"$aHeadCDA[nI,2],nI,0)
	EndIf
	If nPIFCOMP==0
		nPIFCOMP	:=	Iif("CDA_IFCOMP"$aHeadCDA[nI,2],nI,0)
	EndIf
	If nTPLANC==0
		nTPLANC	:=	Iif("CDA_TPLANC"$aHeadCDA[nI,2],nI,0)
	EndIf
	If nVL197==0
		nVL197	:=	Iif("CDA_VL197"$aHeadCDA[nI,2],nI,0)
	EndIf
	iF nDCCOMP == 0
		nDCCOMP	:=	Iif("CDA_CLANC"$aHeadCDA[nI,2],nI,0)
	EndIf	
Next nI

If Len(aLAp)==0
	If nPIFCOMP==0
		aLAp	:=	{{"","","",0,0,0,""}}
	Else
		If nDCCOMP==0
			aLAp	:=	{{"","","",0,0,0,"",""}}
		Else
			aLAp	:=	{{"","","",0,0,0,"","","","",""}}
		EndIf
	EndIf
EndIf

If nPIFCOMP==0
	aLine	:=	{,,,,,,}
Else
	If nDCCOMP==0
		aLine	:=	{,,,,,,,}
	Else
		aLine	:=	{,,,,,,,,,,}
	Endif
EndIf

aLine[nPNUMITE]	:=	"aLAp[oLancApICMS:nAT,1]"
aLine[nPSEQ]	:=	"aLAp[oLancApICMS:nAT,7]"
aLine[nPCODLAN]	:=	"aLAp[oLancApICMS:nAT,2]"
aLine[nPCALPRO]	:=	'Iif(aLAp[oLancApICMS:nAT,3]=="1","Sim","Não")'
aLine[nPBASE]	:=	"Transform(aLAp[oLancApICMS:nAT,4],cMaskBs)"
aLine[nPALIQ]	:=	"Transform(aLAp[oLancApICMS:nAT,5],cMaskAlq)"
aLine[nPVALOR]	:=	"Transform(aLAp[oLancApICMS:nAT,6],cMaskVlr)"
If nPIFCOMP>0
	aLine[nPIFCOMP]	:=	"aLAp[oLancApICMS:nAT,8]"
EndIf
If nDCCOMP>0 
	If nTPLANC>0
		aLine[nTPLANC]	:=	"aLAp[oLancApICMS:nAT,9]"
	EndIf
	If nVL197>0
		aLine[nVL197]	:=	"aLAp[oLancApICMS:nAT,10]"
	EndIf	
	aLine[nDCCOMP]	:=	"aLAp[oLancApICMS:nAT,11]"
EndIf

oLancApICMS	:=	TWBrowse():New( aPos[1],aPos[2],aPos[3],aPos[4],,aCmps,,oDlg,,,,,,,,,,,,.F.,,.T.,,.F.,,, )
oLancApICMS:SetArray(aLAp)
If nPIFCOMP>0
	If nDCCOMP>0 .And. len(aLAp[oLancApICMS:nAT])>=11
		oLancApICMS:bLine := &("{|| {"+aLine[nPNUMITE]+","+aLine[nPSEQ]+","+aLine[nPCODLAN]+","+aLine[nPCALPRO]+","+aLine[nPBASE]+","+aLine[nPALIQ]+","+aLine[nPVALOR]+","+aLine[nPIFCOMP]+","+aLine[nTPLANC]+","+aLine[nVL197]+","+aLine[nDCCOMP]+"} }")
	Else
		oLancApICMS:bLine := &("{|| {"+aLine[nPNUMITE]+","+aLine[nPSEQ]+","+aLine[nPCODLAN]+","+aLine[nPCALPRO]+","+aLine[nPBASE]+","+aLine[nPALIQ]+","+aLine[nPVALOR]+","+aLine[nPIFCOMP]+"} }")
	EndIf
Else	
	oLancApICMS:bLine := &("{|| {"+aLine[nPNUMITE]+","+aLine[nPSEQ]+","+aLine[nPCODLAN]+","+aLine[nPCALPRO]+","+aLine[nPBASE]+","+aLine[nPALIQ]+","+aLine[nPVALOR]+"} }")
EndIf
Return oLancApICMS
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³A410LancAp³ Autor ³ Gustavo G. Rueda      ³ Data ³05/12/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para montar os lancamento fiscais para exibicao     ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³aLancAp -> Lancamentos montados em cima da MATXFIS          ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³nenhum                                                      ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function A410LancAp()
Local	aLancAp	:=	MaFisAjIt(,2)
Return aLancAp
/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Programa  ³aMHead    ³ Autor ³ Gustavo G. Rueda      ³ Data ³05/12/2007³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Funcao para montagem do HEADER do GETDADOS                 ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³.T.                                                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³cAlias -> Alias da tabela base para montagem do HEADER      ³±±
±±³          ³cNCmps -> Campos que nao serao considerados no HEADER       ³±±
±±³          ³aH -> array no qual o HEADER serah montado                  ³±±
±±³          ³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³   DATA   ³ Programador   ³Manutencao efetuada                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³               ³                                            ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function aMHead(cAlias,cNCmps,aH)
Local	lRet	:=	.T.
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Salva a Integridade dos campos de Bancos de Dados            ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea("SX3")
dbSetOrder(1)
dbSeek(cAlias)
While !Eof() .And. (X3_ARQUIVO==cAlias)
	IF X3USO(X3_USADO) .And. cNivel >= X3_NIVEL .and. !(AllTrim(X3_CAMPO)+"/"$cNCmps)
		AADD(aH,{ Trim(X3Titulo()), ;
			AllTrim(X3_CAMPO),;
			X3_PICTURE,;
			X3_TAMANHO,;
			X3_DECIMAL,;
			X3_VALID,;
			X3_USADO,;
			X3_TIPO,;
			X3_F3,;
			X3_CONTEXT,;
			X3_CBOX,;
			X3_RELACAO})
	Endif
	dbSkip()
Enddo
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410RemBenºAutor  ³Andre Anjos         º Data ³  04/12/08   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Exibe tela para marcacao do empenho relacionado a remessa  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A410RemBen()
Local aArea     := GetArea()
Local lContinua := .T.
Local lFirst    := .T.
Local cMarca    := ""
Local cFiltro   := ""
Local aListSD4  := {}
Local nOpc      := 0
Local nX        := 0
Local nPos      := 0
Local lMarca    := .F.
Local nQtde1Tot := 0
Local nQtde2Tot := 0
Local aTamX3    := TamSX3("D4_QUANT")
Local aCampos   := {"",AllTrim(RetTitle("D4_OP")),AllTrim(RetTitle("D4_QUANT")),AllTrim(RetTitle("D4_QTSEGUM"))}
Local oOk       := LoadBitMap(GetResources(), "LBOK")
Local oNo       := LoadBitMap(GetResources(), "LBNO")

Local nPosCod 	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPosTes 	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES"})
Local nPosLoc 	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCAL"})
Local nPosItem  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEM"})
Local nPosQuant := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPosQtSUM := aScan(aHeader,{|x| AllTrim(x[2])=="C6_UNSVEN"})
Local nPosLCtl  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOTECTL"})
Local nPosLote  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMLOTE"})
Local nPosDtVal := aScan(aHeader,{|x| AllTrim(x[2])=="C6_DTVALID"})
Local nPosEnder := aScan(aHeader,{|x| AllTrim(x[2])=="C6_LOCALIZ"})
Local nPosNumS  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_NUMSERI"})
Local nPosLib1  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDLIB"})
Local nPosLib2  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDLIB2"})
Local nPosPrc 	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN"})
Local nPosTot 	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALOR"})
Local l410remb  := Existblock("M410REMB")
Local nTpCtlBN  := A410CtEmpBN()
Local aQtdEnv   := {}
Local nQtdDigit := 0
Local nY        := 0
Local nPosDig   := 0

//-- Verifica se o tipo de pedido e Beneficiamento, se produto e tipo BN e se a TES e de remessa e atualiza estoque
If  Empty(M->C5_TIPO) .Or. AllTrim(M->C5_TIPO) != "B" .Or.;
	Empty(aCols[n,nPosCod]) .Or. (SB1->(dbSeek(xFilial("SB1")+aCols[n,nPosCod])) .And. Iif(l410remb,ExecBlock("M410REMB",.F.,.F.,{SB1->B1_COD}),AllTrim(SB1->B1_TIPO) != "BN")) .Or.;
	Empty(aCols[n,nPosTes]) .Or. (SF4->(dbSeek(xFilial("SF4")+aCols[n,nPosTes])) .And. AllTrim(SF4->F4_PODER3) != "R" .Or.;
	AllTrim(SF4->F4_ESTOQUE) != "S")
	lContinua := .F.
Else
	lContinua := .T.
EndIf

If lContinua
	cFiltro := "D4_FILIAL = '" +xFilial("SD4") +"' .And. D4_COD == '" +aCols[n,nPosCod] +"' .And. "
	cFiltro += "QtdComp(D4_QUANT) > QtdComp(0) .And. Posicione('SC2',1,xFilial('SC2')+D4_OP,'C2_TPOP') == 'F' "
	If nTpCtlBN == 1 // metodo antigo - unico envio
		cFiltro += " .And. Empty(D4_NUMPVBN+D4_ITEPVBN)	"
	EndIf
	dbSelectArea("SD4")
	dbSetOrder(1)
	dbSetFilter({|| &cFiltro}, cFiltro)
	dbGoTop()
	cMarca := GetMark()
	If Bof() .and. Eof()
		Help(" ",1,"A410NOEMP")
	Else
		While !EOF()
			If nTpCtlBN == 1 // metodo antigo - unico envio
				nQtde1Tot := D4_QUANT
				nQtde2Tot := D4_QTSEGUM

				If aScan(aColsBn,{|x| x[2] == Recno() }) > 0
					dbSkip()
					Loop
				EndIf
			ElseIf nTpCtlBN == 2 // metodo novo - multiplos envios
				aQtdEnv   := A410QtEnBN(D4_OP, D4_COD, D4_LOCAL)
				nQtde1Tot := D4_QTDEORI - aQtdEnv[1]
				nQtde2Tot := ConvUM(D4_COD, nQtde1Tot, 0, 2)
				
				nQtdDigit := 0
				For nY := 1 to Len(aColsBn)
					nPosDig := aScan(aCols, {|x| x[1] == aColsBn[nY, 3]})
					If (nPosDig > 0 .and. n != nPosDig)
						If !(aCols[nPosDig, Len(aCols[nPosDig])]) .And. aCols[nPosDig, nPosCod] == aCols[n, nPosCod] .And. SD4->(Recno())==aColsBn[nY,2]
							nQtdDigit += aCols[nPosDig, nPosQuant]
						EndIf
					EndIf
				Next nY

				If QtdComp(nQtdDigit) > 0
					If QtdComp(nQtdDigit) >= QtdComp(nQtde1Tot) // ja informou a qtde. total disponivel para envio
						dbSkip()
						Loop
					Else
						nQtde1Tot -= nQtdDigit
						nQtde2Tot := ConvUM(D4_COD, nQtde1Tot, 0, 2)
					EndIf
				EndIf
			EndIf
			
			If Localiza(D4_COD)
				dbSelectArea("SDC")
				dbSetOrder(2)
				dbSeek(xFilial("SDC")+SD4->(D4_COD+D4_LOCAL+D4_OP+D4_TRT+D4_LOTECTL+D4_NUMLOTE))
				While !EOF() .And. DC_FILIAL+DC_PRODUTO+DC_LOCAL+DC_OP+DC_TRT+DC_LOTECTL+DC_NUMLOTE == xFilial("SDC")+SD4->(D4_COD+D4_LOCAL+D4_OP+D4_TRT+D4_LOTECTL+D4_NUMLOTE)
					If aScan(aColsBn,{|x| x[2] == Recno() }) > 0
						nQtde1Tot -= DC_QUANT
						nQtde2Tot -= DC_QTSEGUM
					EndIf
					dbSkip()
				End
				dbSelectArea("SD4")
			EndIf
			If nQtde1Tot > 0
				nPos := aScan(aListSD4,{|x| x[2] == SD4->D4_OP})
				If nPos > 0 
					aListSD4[nPos,3] += If(nTpCtlBN==1, D4_QUANT, nQtde1Tot)
					aListSD4[nPos,4] += If(nTpCtlBN==1, D4_QTSEGUM, nQtde2Tot)
				Else
					aAdd(aListSD4,{lMarca,SD4->D4_OP, If(nTpCtlBN==1, D4_QUANT, nQtde1Tot), If(nTpCtlBN==1, D4_QTSEGUM, nQtde2Tot)})
				EndIf
			EndIf
			SD4->(dbSkip())
		End
		If !Empty(aListSD4) 
			aSort(aListSD4,,,{|x,y| x[2] < y[2]})
			DEFINE MSDIALOG oDlg FROM 50,40 TO 285,750 TITLE STR0119+AllTrim(aCols[n,nPosItem]) Of oMainWnd PIXEL //"Selecione o empenho - Item"
			oListBox := TWBrowse():New(05,4,243,86,,aCampos,,oDlg,,,,,,,,,,,,.F.,,.T.,,.F.,,,)
			oListBox:SetArray(aListSD4)
			oListBox:bLDblClick := {|| aListSD4[oListBox:nAt,1] := !aListSD4[oListBox:nAt,1]}
			oListBox:bLine := {|| {If(aListSD4[oListBox:nAt,1],oOk,oNo),aListSD4[oListBox:nAT,2],;
											Str(aListSD4[oListBox:nAT,3],aTamX3[1],aTamX3[2]),;
											Str(aListSD4[oListBox:nAT,4],aTamX3[1],aTamX3[2]) }}
	
			oListBox:Align := CONTROL_ALIGN_ALLCLIENT
			ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar(oDlg,{||(nOpc := 1,oDlg:End())},{||(nOpc := 0,oDlg:End())})
		Else
			Help(" ",1,"A410NOEMP")
		EndIf
	EndIf
Else
	Help(" ",1,"A410NOBN")
EndIf

SD4->(dbClearFilter())
If nOpc == 1
	nPos := n
	For nX := 1 To Len(aListSD4) 
		If aListSD4[nX,1] == .F.	
			Loop
		EndIf
		dbSelectArea("SD4")
		dbSetOrder(2)
		dbSeek(xFilial("SD4")+aListSD4[nX,2]+aCols[n,nPosCod])  
		While !EOF() .And. D4_FILIAL+D4_OP+D4_COD == xFilial("SD4")+aListSD4[nX,2]+aCols[n,nPosCod]
			If nTpCtlBN == 1 // metodo antigo - unico envio
				nQtde1Tot := D4_QUANT
				nQtde2Tot := D4_QTSEGUM
			ElseIf nTpCtlBN == 2 // metodo novo - multiplos envios
				aQtdEnv   := A410QtEnBN(D4_OP, D4_COD, D4_LOCAL)
				nQtde1Tot := D4_QTDEORI - aQtdEnv[1]
				nQtde2Tot := ConvUM(D4_COD, nQtde1Tot, 0, 2)
				
				nQtdDigit := 0
				For nY := 1 to Len(aColsBn)
					nPosDig := aScan(aCols, {|x| x[1] == aColsBn[nY, 3]})
					If (nPosDig > 0  .and. n != nPosDig)
						If !(aCols[nPosDig, Len(aCols[nPosDig])]) .And. aCols[nPosDig, nPosCod] == aCols[n, nPosCod] .And. SD4->(Recno())==aColsBn[nY,2]
							nQtdDigit += aCols[nPosDig, nPosQuant]
						EndIf
					EndIf
				Next nY

				If QtdComp(nQtdDigit) > 0
					If QtdComp(nQtdDigit) >= QtdComp(nQtde1Tot) // ja informou a qtde. total disponivel para envio
						dbSkip()
						Loop
					Else
						nQtde1Tot -= nQtdDigit
						nQtde2Tot := ConvUM(D4_COD, nQtde1Tot, 0, 2)
					EndIf
				EndIf
			EndIf

			If Localiza(aCols[n,nPosCod])
				dbSelectArea("SDC")
				dbSetOrder(2)
				dbSeek(xFilial("SDC")+SD4->(D4_COD+D4_LOCAL+D4_OP+D4_TRT+D4_LOTECTL+D4_NUMLOTE))
				While !EOF() .And. DC_FILIAL+DC_PRODUTO+DC_LOCAL+DC_OP+DC_TRT+DC_LOTECTL+DC_NUMLOTE == xFilial("SDC")+SD4->(D4_COD+D4_LOCAL+D4_OP+D4_TRT+D4_LOTECTL+D4_NUMLOTE)
					If !lFirst
						aAdd(aCols,aClone(aCols[n]))
						nPos := Len(aCols)
						aCols[nPos,nPosItem] := Soma1(aCols[Len(aCols)-1,nPosItem])
						aCols[nPos,nPosTes] := aCols[n,nPosTes]
						aCols[nPos,nPosPrc] := aCols[n,nPosPrc]
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Monta o AcolsGrade e o AheadGrade para este item - apenas compatibilizacao  ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
						If MaGrade()
							If FindFunction("MsMatGrade") .And. IsAtNewGrd()
								oGrade:MontaGrade(nPos,aCols[nPos,nPosCod],.T.,,.F.) 
							Else
								MatGrdMont(nPos,aCols[nPos,nPosCod],.T.)
							EndIf
						EndIf
					EndIf
					aCols[nPos,nPosLoc]   := DC_LOCAL
					aCols[nPos,nPosQuant] := If(nTpCtlBN==1, DC_QUANT, nQtde1Tot)
					aCols[nPos,nPosQtSUM] := If(nTpCtlBN==1, DC_QTSEGUM, nQtde2Tot)
					aCols[nPos,nPosLCtl]  := DC_LOTECTL
					aCols[nPos,nPosLote]  := DC_NUMLOTE
					aCols[nPos,nPosEnder] := DC_LOCALIZ
					aCols[nPos,nPosNumS]  := DC_NUMSERI
					aCols[nPos,nPosTot]   := aCols[nPos,nPosQuant] * aCols[nPos,nPosPrc]
					If mv_par01 == 1
						aCols[nPos,nPosLib1] := aCols[nPos,nPosQuant]
						aCols[nPos,nPosLib2] := aCols[nPos,nPosQtSUM]
					EndIf
					
					If nTpCtlBN == 1
						aAdd(aColsBn,{"SDC",Recno(),aCols[nPos,nPosItem]})
					ElseIf nTpCtlBN == 2 // metodo novo - multiplos envios
						If aScan(aColsBn,{|x| x[1] == "SDC" .And. x[2] == Recno() .And. x[3] == aCols[n, nPosItem] }) == 0 // nao eh o mesmo item
							aAdd(aColsBn,{"SDC",Recno(),aCols[nPos,nPosItem]})
						EndIf
						If aScan(aColsBn,{|x| x[1] == "SD4" .And. x[2] == SD4->(Recno()) .And. x[3] == aCols[n, nPosItem] }) == 0 // nao eh o mesmo item
							aAdd(aColsBn,{"SD4",SD4->(Recno()),aCols[nPos,nPosItem]}) // para garantir a gravacao na SGO
						EndIf
					EndIf
					
					If lFirst
						lFirst := .F.
					EndIf

					nQtde1Tot -= DC_QUANT
					nQtde2Tot -= DC_QTSEGUM
					dbSkip()
				End
				dbSelectArea("SD4")
			EndIf
			
			If nQtde1Tot > 0
				If !lFirst
					aAdd(aCols,aClone(aCols[n]))
					nPos := Len(aCols)
					aCols[nPos,nPosItem] := Soma1(aCols[Len(aCols)-1,nPosItem])
					aCols[nPos,nPosTes]  := aCols[n,nPosTes]
					aCols[nPos,nPosPrc]  := aCols[n,nPosPrc]
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Monta o AcolsGrade e o AheadGrade para este item - apenas compatibilizacao  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
					If MaGrade()
						If FindFunction("MsMatGrade") .And. IsAtNewGrd()
							oGrade:MontaGrade(nPos,aCols[nPos,nPosCod],.T.,,.F.) 
						Else
							MatGrdMont(nPos,aCols[nPos,nPosCod],.T.)
						EndIf
					EndIf
				EndIf
				aCols[nPos,nPosLoc]   := D4_LOCAL
				aCols[nPos,nPosQuant] := If(nTpCtlBN==1, D4_QUANT, nQtde1Tot)
				aCols[nPos,nPosQtSUM] := If(nTpCtlBN==1, D4_QTSEGUM, nQtde2Tot)
				aCols[nPos,nPosLCtl]  := D4_LOTECTL
				aCols[nPos,nPosLote]  := D4_NUMLOTE
				aCols[nPos,nPosDtVal] := D4_DTVALID
				aCols[nPos,nPosEnder] := CriaVar("C6_LOCALIZ",.F.)
				aCols[nPos,nPosNumS]  := CriaVar("C6_NUMSERI",.F.)
				aCols[nPos,nPosTot]   := aCols[nPos,nPosQuant] * aCols[nPos,nPosPrc]
				If mv_par01 == 1
					aCols[nPos,nPosLib1] := aCols[nPos,nPosQuant]
					aCols[nPos,nPosLib2] := aCols[nPos,nPosQtSUM]
				EndIf

				If nTpCtlBN == 1
					aAdd(aColsBn,{"SD4",Recno(),aCols[nPos,nPosItem]})
				ElseIf nTpCtlBN == 2
					If aScan(aColsBn,{|x| x[1] == "SD4" .And. x[2] == Recno() .And. x[3] == aCols[n, nPosItem] }) == 0 // nao eh o mesmo item
						aAdd(aColsBn,{"SD4",Recno(),aCols[nPos,nPosItem]})
					EndIf
				EndIf
				
				If lFirst
					lFirst := .F.
				EndIf				
			EndIf
			SD4->(dbSkip())
		End
	Next nX
	Ma410Rodap()
EndIf

RestArea(aArea)
Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410CarBenºAutor  ³Andre Anjos		 º Data ³  07/04/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Carrega relacionamentos entre SC6 e SD4,SDC para produtos  º±±
±±º          ³ tipo BN.													  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410, FATXFUN                                       	  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410CarBen(cNumPV,cItemPV)
Local aArea    := GetArea()
Local aRet     := {}
Local cFiltro  := ""
Local nTpCtlBN := A410CtEmpBN()

Default cNumPv := ""

cFiltro := "DC_FILIAL == '" +xFilial("SDC") +"' .And. DC_ORIGEM == 'SC2' .And. DC_PEDIDO == '" +cNumPv +"'"
If !Empty(cItemPv)
	cFiltro += " .And. DC_ITEM == '" +cItemPV +"'"
EndIf

If nTpCtlBN != 0 
	If nTpCtlBN == 1 // metodo antigo - unico envio
		dbSelectArea("SD4")
		dbSetOrder(6)
		dbSeek(xFilial("SD4")+cNumPv+If(!Empty(cItemPv),cItemPv,""))
		While !EOF() .And. D4_FILIAL+D4_NUMPVBN+If(!Empty(cItemPv),D4_ITEPVBN,"") == xFilial("SD4")+cNumPv+If(!Empty(cItemPv),cItemPv,"")
			aAdd(aRet,{"SD4",Recno(),D4_ITEPVBN})
			dbSkip()
		EndDo
	ElseIf nTpCtlBN == 2 // metodo novo - multiplos envios
		 dbSelectArea("SGO")
		 dbSetOrder(2)
		 dbSeek(xFilial("SGO")+cNumPV+If(!Empty(cItemPv),cItemPv,""))
		 While !Eof() .And. GO_FILIAL+GO_NUMPV+If(!Empty(cItemPv),GO_ITEMPV,"") == xFilial("SGO")+cNumPv+If(!Empty(cItemPv),cItemPv,"")
			aAdd(aRet,{"SD4",GO_RECNOD4,GO_ITEMPV})
			dbSkip()
		EndDo
	EndIf
	
	dbSelectArea("SDC")
	dbSetFilter({|| &cFiltro}, cFiltro)
	dbGoTop()
	While !EOF()
		aAdd(aRet,{"SDC",Recno(),DC_ITEM})
		dbSkip()
	End
	dbClearFilter()

	RestArea(aArea)
EndIf

Return aRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410KeyF9 ºAutor  ³Andre Anjos         º Data ³  27/07/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Funcao da tecla F9 na inclusao de pedido de venda.         º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410													  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410KeyF9()
Local oDlg	      := NIL
Local oGet01      := NIL
Local aCampos     := {}
Local aTitle      := {}
Local aCpsComis   := {}
Local aVendors    := {}
Local aStruCNA    := CNA->(dbStruct())
Local cConsSxb    := "CN9003"
Local cLine       := ""
Local cArqCNA     := ""
Local cQuery	  := ""
Local nOpca		  := 0
LOcal nX		  := 0
Local nY		  := 0
Local nPercCNF	  := 0
Local n
Local oOk  		  := LoadBitmap(GetResources(),"LBTIK")
Local oNo  		  := LoadBitmap(GetResources(),"LBNO")
Local lSugVal     := GetNewPar("MV_CNSUGME","1") == "1"
Local lRealMed    := GetNewPar( "MV_CNREALM", "S" ) == "S"
Local lReajMed    := GetNewPar( "MV_CNREAJM", "S" ) == "S"
Local lFisico     := .F.

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Variaveis para manipulacao do aCols. ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local nITEM    := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_ITEM"})
Local nPRODUTO := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_PRODUTO"})
Local nUM      := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_UM"})
Local nQTDVEN  := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_QTDVEN"})
Local nPRCVEN  := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_PRCVEN"})
Local nVALOR   := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_VALOR"})
Local nSEGUM   := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_SEGUM"})
Local nTES     := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_TES"})
Local nUNSVEN  := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_UNSVEN"})
Local nLOCAL   := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_LOCAL"})
Local nCF      := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_CF"})
Local nENTREG  := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_ENTREG"})
Local nDESCRI  := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_DESCRI"})
Local nPRUNIT  := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_PRUNIT"})
Local nSUGENTR := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_SUGENTR"})
Local nITEMED  := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_ITEMED"})
Local nDESCONT := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_DESCONT"})
Local nVALDESC := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_VALDESC"})
Local nCodIss  := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_CODISS"})

Private aHeadDcs  := {}

For nX := 1 To 5
	aAdd(aCpsComis, aScan(aHeader,{|x| AllTrim(x[2]) == ("C6_COMIS"+Str(nX,1))}))
Next nX

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Se posicionado no cliente, tipo de pedido normal  ³
//³ e parametro MV_CNPEDVE ativo, abre janela para    ³
//³ selecao do contrato a vincular (SIGAGCT).         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If SuperGetMV("MV_CNPEDVE",.F.,.F.) .And. ReadVar() == "M->C5_CLIENTE" .And. M->C5_TIPO == "N"
	If !Empty(CND->( FieldPos( "CND_PARCEL" ) ))
		aTitle := { "",CNA->(RetTitle("CNA_NUMERO")),CNA->(RetTitle("CNF_PARCEL")),CNA->(RetTitle("CNA_DTINI")),CNA->(RetTitle("CNA_VLTOT")),CNA->(RetTitle("CNA_DTFIM")),CNA->(RetTitle("CNA_FORNEC")),CNA->(RetTitle("CNA_LJFORN")),CNA->(RetTitle("CNA_CRONOG")),CNA->(RetTitle("CNF_VLPREV"))}
	Else                                                                                                         
		aTitle := { "",CNA->(RetTitle("CNA_NUMERO")),CNA->(RetTitle("CNA_DTINI")),CNA->(RetTitle("CNA_VLTOT")),CNA->(RetTitle("CNA_DTFIM")),CNA->(RetTitle("CNA_FORNEC")),CNA->(RetTitle("CNA_LJFORN")),CNA->(RetTitle("CNA_CRONOG")),CNA->(RetTitle("CNF_VLPREV"))}
	EndIf
	
	//-- Variaveis private para manipulacao na CN120VlCon
	Private oBrowse := NIL
	Private oCbx	:= NIL
	Private lMedeve := .F.//medicao Eventual
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Adiciona parcela e valor previsao a estrutura da planilha    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	aAdd(aStruCNA,{"CNF_PARCEL","C",TamSX3("CNF_PARCEL")[1],TamSX3("CNF_PARCEL")[2]})
	aAdd(aStruCNA,{"CNF_VLPREV","N",TamSX3("CNF_VLPREV")[1],TamSX3("CNF_VLPREV")[2]})
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Cria arquivo temporario                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cArqCNA := CriaTrab(aStruCNA)
	dbUseArea(.T.,,cArqCNA,"TRBCNA",.F.,.F.)
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Configura campos exibidos na inclusao de medicoes  ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty(CND->( FieldPos( "CND_PARCEL" ) ))
		aCampos := {"",TRBCNA->CNA_NUMERO,TRBCNA->CNF_PARCEL,TRBCNA->CNA_DTINI,TRBCNA->CNA_VLTOT,TRBCNA->CNA_DTFIM,TRBCNA->CNA_FORNEC,TRBCNA->CNA_LJFORN,TRBCNA->CNA_CRONOG,TRBCNA->CNF_VLPREV}
	Else
		aCampos := {"",TRBCNA->CNA_NUMERO,TRBCNA->CNA_DTINI,TRBCNA->CNA_VLTOT,TRBCNA->CNA_DTFIM,TRBCNA->CNA_FORNEC,TRBCNA->CNA_LJFORN,TRBCNA->CNA_CRONOG,TRBCNA->CNF_VLPREV}
	EndIf
	
	If ExistBlock("CN120SXB")
		cConsSxb := If(Valtype(cConsSxb:=ExecBlock("CN120SXB",.F.,.F.))=="C",cConsSxb,"CN9003") 
	EndIf
	
	DEFINE MSDIALOG oDlg TITLE STR0135 From 74,7 TO 400,606 PIXEL //Vínculo a Contrato - SIGAGCT
	
	@ 10,04   SAY OemToansi(RetTitle("CN9_NUMERO")) SIZE 73, 8 OF oDlg PIXEL
	@ 09,37   MSGET oGet01 VAR cContra PICTURE PesqPict("CN9","CN9_NUMERO") F3 cConsSxb SIZE 60,9 VALID A410VldGCT() .And. CN120VlCon(1,,cFilAnt) OF oDlg PIXEL
	
	@ 10,104  SAY OemToansi(RetTitle("CNF_COMPET")) SIZE 73, 8 OF oDlg PIXEL
	@ 09,137 ComboBox oCbx Var cCompet ON CHANGE CN120Compet() SIZE 50,9 OF oDlg PIXEL
	
	If !Empty(CND->( FieldPos( "CND_PARCEL" ) ))
		cLine := "{If((cPlan+cParcel==(TRBCNA->CNA_NUMERO+TRBCNA->CNF_PARCEL)),oOk,oNo),TRBCNA->CNA_NUMERO,TRBCNA->CNF_PARCEL,TRBCNA->CNA_DTINI,Transform(TRBCNA->CNA_VLTOT,PesqPict('CNA','CNA_VLTOT')),TRBCNA->CNA_DTFIM,TRBCNA->CNA_FORNEC,TRBCNA->CNA_LJFORN,TRBCNA->CNA_CRONOG,Transform(TRBCNA->CNF_VLPREV,PesqPict('CNF','CNF_VLPREV')),"
	Else
		cLine := "{If((cPlan==TRBCNA->CNA_NUMERO),oOk,oNo),TRBCNA->CNA_NUMERO,TRBCNA->CNA_DTINI,Transform(TRBCNA->CNA_VLTOT,PesqPict('CNA','CNA_VLTOT')),TRBCNA->CNA_DTFIM,TRBCNA->CNA_FORNEC,TRBCNA->CNA_LJFORN,TRBCNA->CNA_CRONOG,Transform(TRBCNA->CNF_VLPREV,PesqPict('CNF','CNF_VLPREV')),"
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Finaliza construcao do cLine ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	cLine := substr(cLine,1,len(cLine)-1)+"}"
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Configura browse    ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If !Empty(CND->( FieldPos( "CND_PARCEL" ) ))
		oBrowse := TWBrowse():New( 30, 4,__DlgWidth(oDlg)-8,__DlgHeight(oDlg)-58, {|| {aCampos} },aTitle,{030,090},oDlg,,,,,,,,,,,,,"TRBCNA", .T. )
		oBrowse:bLine := &( "{ || " + cLine + " }" )
		oBrowse:bLDblClick := {|| If(!Empty(TRBCNA->CNA_NUMERO),((cPlan:= TRBCNA->CNA_NUMERO,cParcel:=TRBCNA->CNF_PARCEL), oBrowse:Refresh()),) }
	Else		
		oBrowse := TWBrowse():New( 30, 4,__DlgWidth(oDlg)-8,__DlgHeight(oDlg)-58, {|| {aCampos} },aTitle,{030,090},oDlg,,,,,,,,,,,,,"TRBCNA", .T. )	
		oBrowse:bLine := &( "{ || " + cLine + " }" )
		oBrowse:bLDblClick := {|| If(!Empty(TRBCNA->CNA_NUMERO),(cPlan := TRBCNA->CNA_NUMERO, oBrowse:Refresh()),) }
	EndIf
	
	DEFINE SBUTTON FROM 150, 240 When .T. TYPE 1 ACTION (If(Empty(cPlan),Help(" ",1,"CNTA120_01"),(oDlg:End(),nOpca:=1))) ENABLE OF oDlg//"Selecione uma planilha"
	DEFINE SBUTTON FROM 150, 270 When .T. TYPE 2 ACTION (oDlg:End(),nOpca:=2) ENABLE OF oDlg
	
	ACTIVATE MSDIALOG oDlg CENTERED
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Apaga arquivo temporario                           ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	TRBCNA->(dbCloseArea())
	FErase(cArqCNA+".DBF")
	FErase(cArqCNA+OrdBagExt())
	
	If nOpca == 1
		lFisico := ((CN1->(FieldPos("CN1_CROFIS")) > 0) .And. Posicione("CN1",1,xFilial("CN1")+CN9->CN9_TPCTO,"CN1_CROFIS") == "1")
		If !lSugVal
			lSugVal := lFisico
		EndIf	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Atualiza campos do cabecalho do pedido (SC5)       ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aVendors := CtaVend(cContra)
		M->C5_MDCONTR := cContra
		M->C5_MDPLANI := cPlan
		M->C5_CLIENTE := CN9->CN9_CLIENT
		M->C5_LOJACLI := CN9->CN9_LOJACL
		M->C5_CONDPAG := CN9->CN9_CONDPG
		M->C5_MOEDA	  := CN9->CN9_MOEDA
		M->C5_TIPOCLI := Posicione("SA1",1,xFilial("SA1")+CN9->(CN9_CLIENT+CN9_LOJACL),"A1_TIPO")
		If !Empty(aVendors)
			For nX := 1 To Len(aVendors)
				&("M->C5_VEND"+Str(nX,1,0)) := aVendors[nX,1]
				&("M->C5_COMIS"+Str(nX,1,0)) := aVendors[nX,2]
			Next nX
		Else
			For nX := 1 To 5
				&("M->C5_VEND"+Str(nX,1,0)) := CriaVar("C5_VEND1",.F.)
				&("M->C5_COMIS"+Str(nX,1,0)) := CriaVar("C5_COMIS1",.F.)
			Next nX
		EndIf
				
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Se for contrato fixo (com planilha), realiza |
		//| o preenchimento do aCols do PV com os itens  ³
		//| da planilha (CNB).							 ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		If lFixo		
			//Limpa aCols, pois so aceita itens da planilha
			aCols := {}
			
			//Posiciona na planilha
			CNA->(dbSeek(xFilial("CNA")+cContra+cRevisa+cPlan))
				
			dbSelectArea("CNB")
			dbSetOrder(1)
			dbSeek(xFilial("CNB")+cContra+cRevisa+cPlan)		
			While CNB->(CNB_FILIAL+CNB_CONTRA+CNB_REVISA+CNB_NUMERO) == xFilial("CNB")+cContra+cRevisa+cPlan
				If CNB->CNB_SLDMED > 0
					aAdd(aCols,Array(Len(aHeader)+1))
					aCols[Len(aCols),Len(aHeader)+1] := .F.
			
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿              
					//³ Inicializa campos da getdados                  ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					For nX :=1 to Len(aHeader)
						If !(IsHeadRec(aHeader[nX,2]) .OR. IsHeadAlias(aHeader[nX,2]))
							aCols[Len(aCols),nX] := CriaVar(aHeader[nX,2])
						EndIf
					Next nX
					
					SB1->(dbSeek(xFilial("SB1")+CNB->CNB_PRODUT))
													
					aCols[Len(aCols),nITEM]    := PadL(Right(CNB->CNB_ITEM,TamSX3("C6_ITEM")[1]),TamSX3("C6_ITEM")[1],"0")
					aCols[Len(aCols),nITEMED]  := PadL(Right(CNB->CNB_ITEM,TamSX3("C6_ITEMED")[1]),TamSX3("C6_ITEMED")[1],"0")
					aCols[Len(aCols),nPRODUTO] := CNB->CNB_PRODUT
					aCols[Len(aCols),nUM]		:= SB1->B1_UM
					aCOls[Len(aCols),nSEGUM]	:= SB1->B1_SEGUM
					aCOls[Len(aCols),nLOCAL]	:= SB1->B1_LOCPAD
					aCols[Len(aCols),nTES]     := SB1->B1_TS
					aCols[Len(aCols),nDESCRI]  := SB1->B1_DESC
					aCols[Len(aCols),nCF]	    := Posicione("SF4",1,xFilial("SF4")+SB1->B1_TS,"F4_CF")
					aCols[Len(aCols),nPRUNIT]  := A410Arred(CNB->CNB_VLUNIT * If(CN9->CN9_FLGCAU=='1' .And. CN9->CN9_TPCAUC=='2',(1 - (CN9->CN9_MINCAU / 100)),1),"C6_PRUNIT")
					aCols[Len(aCols),nPRCVEN]  := A410Arred(aCols[Len(aCols),nPRUNIT],"C6_PRCVEN")
					aCols[Len(aCols),nCodIss]  := SB1->B1_CODISS 
					If !Empty(CNB->CNB_DESC)
						aCols[len(aCols),nDESCONT] := A410Arred(CNB->CNB_DESC,"C6_DESCONT")
						aCols[Len(aCols),nPRCVEN]  -= A410Arred((CNB->CNB_VLUNIT * CNB->CNB_DESC) / 100,"C6_PRCVEN")
					EndIf
					//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
					//³ Verifica se o item e comissionado     ³
					//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
					If CNB->CNB_FLGCMS == "1"
						//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
						//³ Complementa as comissoes de acordo com os contratos ³
						//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
						For nX := 1 to Len(aVendors)
							If !Empty(aCpsComis[nX])
								aCols[Len(aCols),aCpsComis[nX]] := aVendors[nX,2]
							EndIf
						Next nX
					EndIf
			
					If !lMedeve .Or. lSugVal
						dbSelectArea("CNF")
						If !Empty(cParcel) .And. !Empty(CND->(FieldPos("CND_PARCEL")))
							dbSetOrder(3)
							dbSeek(xFilial("CNF")+cContra+cRevisa+CNA->CNA_CRONOG+cParcel)
						Else
							dbSetOrder(2)
							dbSeek(xFilial("CNF")+cContra+cRevisa+CNA->CNA_CRONOG+cCompet)
						EndIf
						
						CN0->(dbSetOrder(1))
						CN0->(dbSeek(xFilial("CN0")+CN9->CN9_TIPREV))
										
						If (!lRealMed .And. CN0->CN0_TIPO == '3') .Or. (!lReajMed .And. CN0->CN0_TIPO == '2')									 	
							cQuery := "SELECT SUM(CNB.CNB_VLTOT) AS CNB_VLTOT "
							cQuery += "FROM " +RetSqlName("CNB") +" CNB "
							cQuery += "WHERE CNB.CNB_FILIAL = '"+xFilial("CNB")  +"' AND "
							cQuery += "CNB_CONTRA = '" +CNA->CNA_CONTRA +"' AND "
							cQuery += "CNB_REVISA = '" +CNA->CNA_REVISA +"' AND "
							cQuery += "CNB_VLUNIT <> CNB_PRCORI AND "
							cQuery += "CNB.D_E_L_E_T_  =  ' '"
																		
							cQuery := ChangeQuery(cQuery)				
							dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),"CNBTMP")
							TCSetField("CNBTMP","CNB_VLTOT","N",TamSX3("CNB_VLTOT")[1],TamSX3("CNB_VLTOT")[2])
																
							//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
							//³Calcula percentual da parcela com o total dos itens ³
							//³da planilha a serem medidos                         ³
							//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
							If !("CNBTMP")->(Eof())  
								nPercCNF := (CNF->CNF_SALDO*100)/("CNBTMP")->CNB_VLTOT
							Else
								nPercCNF := (CNF->CNF_SALDO*100)/CNA->CNA_VLTOT
							EndIf					   		                    
							("CNBTMP")->(dbCloseArea())  
						Else
							nPercCNF := (CNF->CNF_SALDO*100)/CNA->CNA_VLTOT
						EndIf 						
						
						If !lFisico      
							aCols[Len(aCols),nQTDVEN] := A410Arred(Min((CNB->CNB_QUANT * nPercCNF)/100,CNB->CNB_SLDMED),"C6_QTDVEN")
							aCols[Len(aCols),nUNSVEN] := ConvUM(CNB->CNB_PRODUT,aCols[Len(aCols),nQTDVEN],0,2)
						Else
							dbSelectArea("CNS")
							dbSetOrder(1)						
							If dbSeek(xFilial("CNS")+cContra+cRevisa+CNF->CNF_NUMERO+CNF->CNF_PARCEL+CNB->CNB_ITEM)
								aCols[Len(aCols),nQTDVEN] := A410Arred(Min(If((CNS->CNS_SLDQTD > 0),CNS->CNS_SLDQTD,0),CNB->CNB_SLDMED),"C6_QTDVEN")
								aCols[Len(aCols),nUNSVEN] := ConvUM(CNB->CNB_PRODUT,aCols[Len(aCols),nQTDVEN],0,2)
							EndIf
						EndIf									
						aCols[Len(aCols),nVALOR] := A410Arred(aCols[Len(aCols),nQTDVEN] * aCols[Len(aCols),nPRCVEN],"C6_VALOR")
						aCols[len(aCols),nVALDESC] := A410Arred((aCols[Len(aCols),nQTDVEN] * aCols[Len(aCols),nPRUNIT]) - aCols[Len(aCols),nVALOR],"C6_VALDESC")
					EndIf
					  
					aCols[Len(aCols),nENTREG]  := dDataBase
					aCols[Len(aCols),nSUGENTR] := dDataBase
				EndIf			
				dbSelectArea("CNB")
				dbSkip()
			EndDo
			Ma410Rodap()
		Else
			//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿              
			//³ Ajusta itens que ja possam estar no aCols ³
			//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			For nX :=1 to Len(aCols)
				aCols[nX,nITEMED] := CriaVar("C6_ITEMED",.F.)
				aCols[nX,nPRUNIT] := CriaVar("C6_PRUNIT",.F.)

				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Complementa as comissoes de acordo com os contratos ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If !Empty(aVendors)
					For nY := 1 to Len(aVendors)
						If !Empty(aCpsComis[nY])
							aCols[nX,aCpsComis[nY]] := aVendors[nY,2]
						EndIf
					Next nY
				Else
					For nY := 1 to Len(aCpsComis)
						aCols[nx,aCpsComis[nY]] := CriaVar("C6_COMIS1",.F.)
					Next nY
				EndIf
			Next nX
		EndIf
	EndIf
EndIf   


SetKey(VK_F4,{||A440Stok(NIL,"A410")})
#IFDEF TOP
	SetKey(VK_F9,{||A410KeyF9()})
#ENDIF
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  |A410VldGCTºAutor  ³Microsiga           º Data ³  31/07/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Valida se o contrato possui alcada. Em caso positivo alertaº±±
±±º          ³ e bloqueia, pois devera ter a medicao aprovada.            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A410VldGCT()
Local lRet := .T.
CN9->(DbSetOrder(1))
CN9->(dbSeek(xFilial("CN9")+&(ReadVar())))

If !Empty(CN1->(FieldPos("CN1_GRPAPR"))) .And. SuperGetMV("MV_CNMDALC",.F.,"N") == "S"
	CN1->(dbSetOrder(1))
	CN1->(dbSeek(xFilial("CN1")+CN9->CN9_TPCTO))
	If !Empty(CN1->CN1_GRPAPR)
		Aviso(STR0127,STR0132,{"Ok"}) //SIGAGCT - Este contrato possui controle de alçadas e por isto exige a prévia inclusão de medições.
		lRet := .F.
	EndIf
EndIf                       
If CN1->(dbSeek(xFilial("CN1")+CN9->CN9_TPCTO)) .aND. CN1->CN1_ESPCTR <> '2'
	Aviso(STR0127,STR0158,{"Ok"}) //SIGAGCT - O CONTRATO SELECIONADO NAO E DE VENDA!
	lRet := .F.
EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³AjustaHelp ³ Autor ³Andre Anjos	        ³ Data ³10/12/2008³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³Ajusta Help's da Rotina                                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA410                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function AjustaHelp()

Local aArea 	:= GetArea()
Local aHelpPor	:= {}
Local aHelpEng	:= {}
Local aHelpSpa	:= {}

PutHelp("PA410NOEMP",	{"Não há empenhos deste produto para ","realização de remessa para ","beneficiamento."} ,;
						{"No existen reservas de este producto ","para realizacion de envio para ","mejora."} ,;
						{"There's no reservation of this product","to execute referral to","beneficiation."} ,;
						  .T.)
PutHelp("SA410NOEMP",	{"Não se aplica."},;
						{"No se aplica."},;
						{"Not applicable"},;
						 .T. )
						 
PutHelp("PA410NOBN",	{"Tipo de pedido, produto ou tipo de ","saída inválido para a utilização ","deste recurso."} ,;
						{"Tipo de pedido, producto o tipo de ","salida invalido para la utilizacion ","de este recurso."} ,;
						{"Type of order, product or type of ","output invalid to use this appeal"} ,;
						  .T.)
PutHelp("SA410NOBN",	{"Verifique como estão configurados ","estes cadastros."},;
						{"Verifique como estão configurados ","estes cadastros."},;
						{"Check how are configured this files."},;
						 .T. )
PutHelp("PA410NOSDADT",	{"Saldo de adiantamento ","Insuficiente "} ,;
						{"Saldo de adiantamento ","Insuficiente "} ,;
						{"Saldo de adiantamento ","Insuficiente "} ,;
						  .T.)

aHelpPor :=	{"O TES de devolução relacionado ao TES ",;
			 "deste documento de entrada, está com ",;
			 "status bloqueado, não permitindo a ",;
			 "geração do pedido de venda." }  
aHelpSpa := {"El TES de devolución relacionado al ",;
			 "TES de este documento de entrada, está ",;
			 "con estatus bloqueado, sin permitir ",;
			 "la generación del pedido de venta."}
aHelpEng := {"Return TIO related to TIO of this ",;
			 "inbound document has blocked status,",;
			 " so you cannot generate sales order."}
			 
PutHelp("PTESBLOQ",aHelpPor,aHelpEng,aHelpSpa,.T.)   
 
aHelpPor := {"Relacione um novo TES de devolução, ",;
			 "ao TES relacionado a este documento ",;
			 "de entrada, ou efetue o desbloqueio ",;
			 "do mesmo. " }
aHelpSpa := {"Relacione un nuevo TES de devolución, ",;
			 "al TES relacionado a este documento ",;
			 "de entrada, o efectúe su desbloqueo."}

aHelpEng := {"Relate a new return TIO to the TIO ",;
			 "related to this inbound document ",;
			 "or unblock it."}
			 
PutHelp("STESBLOQ",aHelpPor,aHelpEng,aHelpSpa,.T.)    							  
						  
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Help utilizado na função A410FATPED ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aHelpPor :=	{"Este produto não pode ser alterado, ",;
			 "pois já foi totalmente faturado."}

aHelpSpa :=	{"Como el producto ya fue liquidado ",;
			 "este no se puede modificar."}

aHelpEng :=	{"This product can not be changed, ",;
			 "it was already invoiced."}
 
PutHelp("PA410PRODFA",aHelpPor,aHelpEng,aHelpSpa,.T.) 

aHelpPor :=	{"Para permitir alteração de produto ",;
			 "já faturado, é necessário alterar o ",;
			 "parâmetro MV_ALTPED no Módulo ",;
			 "do Configurador."}

aHelpSpa :=	{"Para permitir la modificación de un ",;
			 "producto liquidado, por el módulo ",;
			 "Configurador, modifique el ",;
			 "parámetro MV_ALTPED."}

aHelpEng :=	{"To allow making changes of products ",;
			 "that were already invoiced, mandatory ",;
			 "to change the parameter MV_ALTPED ",;
			 "in the Configurator Module."}

PutHelp("SA410PRODFA",aHelpPor,aHelpEng,aHelpSpa,.T.) 

//ajuste A410TIPO9
aHelpPor :=	{"Esse pedido possui condição de ",; 
			 "pagamento do Tipo 9 e serão geradas",;
			 "duplicatas no valor das parcelas, ",;
			 "mas a soma das parcelas não batem ",;
			 "com o total do pedido."}
		
aHelpSpa :=	{"Este pedido tiene condicion de pago",;
				 " del Tipo 9 y se generara titulos de",;
			 " credito por el valor de las cuotas,",; 
			 " pero la suma de las cuotas no",; 
			 " concuerdan con el total del pedido."}
				
aHelpEng :=	{"This order has payment format ",; 
			 "Type 9 and trade notes are generated ",;
			 "in the installments value, but their ",;
			 "sum does not match to the total order."}
				  
PutHelp("PA410TIPO9",aHelpPor,aHelpEng,aHelpSpa,.T.) 


aHelpPor :=	{	'No campo "Liquido Prod" somente poderá ',; 
				'ser informado "Sim" quando o campo     ',; 
				'"Tipo de Remito=Consignação"           '}
aHelpSpa :=	{	'En el campo "Neto Prod" solo se podrá  ',; 
				'informar "Sí" cuando el campo          ',; 
				'"Tipo de Remito=Consignación"          '}
aHelpEng :=	{	'In the field Prod Net Amt, you can only',; 
				'enter Yes when the field               ',; 
				'"Packing Slip Type= Consignment". '}

PutHelp("PA410LIQPRO",aHelpPor,aHelpEng,aHelpSpa,.F.)


aHelpPor :=	{	'Para "Tipo de Remito=Venda", o campo   ',; 
				'"Liquido Prod" deve ser preenchido com ',; 
				'"Não"                                  '}
aHelpSpa :=	{	'Para "Tipo de Remito=Venta", se debe   ',; 
				'rellenar el campo "Neto Prod" con "No".'}
aHelpEng :=	{	'For "Packing Slip Type= Sales", the    ',; 
				'field Prod Net Amt must be filled out  ',; 
				'with No.                               '}

PutHelp("PA410TIPREM",aHelpPor,aHelpEng,aHelpSpa,.F.)


aHelpPor :=	{	'Para pedidos com o campo              ',;  
				'"Liquido Prod=Sim" a TES informada não',; 
				'deve permitir atualização de estoque. '}
aHelpSpa :=	{	'Para pedidos con el campo             ',;
				'"Neto Prod=Sí", la TES que se informó ',; 
				'no debe permitir que se actualice     ',;
				'el stock.                             '}

aHelpEng :=	{	'For orders with the field             ',; 
				'"Prod Net Amt=Yes", the TIO entered   ',; 
				'must not allow stock update.          '}

PutHelp("PA410TESINV",aHelpPor,aHelpEng,aHelpSpa,.F.)

//ajuste a410SMLFRT
aHelpPor :=	{"Para a simulação de frete é necessário  ",; 
			 "preencher os campos: Cli.Entrega, ",;
			 "Loja Entrega, Produto, Quantidade e Valor."}
		
aHelpEng :=	{"For the simulation of freight is ",;
				"necessary to fill in the fields: ",;
				"Cli.Entrega Shop, Delivery, Product,",;
				" Quantity and Value."}
				
aHelpSpa :=	{"Para la simulación del transporte de ",;
				"mercancías es necesario rellenar los ",;
				"campos: Cli.Entrega Shop, de entrega, ",;
				"producto, cantidad y valor."}
				  
PutHelp("PA410SMLFRT",aHelpPor,aHelpEng,aHelpSpa,.T.) 

aHelpPor :=	{"A simulação de frete não será executada ",; 
			 "para os pedidos de Complemento de ",;
			 "Preço, ICMS e IPI, portanto não haverá ",;
			 "integração com o módulo SIGAGFE."}
						  
PutHelp("PA410SMLCIP",aHelpPor,aHelpPor,aHelpPor,.T.)

//-- C5_SOLOPC
aHelpPor	:= {"Usa Opcionais do Cliente."		}
aHelpEng	:= {"Use Customer Optative."	}
aHelpSpa	:= {"Usa Opcionales de Cliente."	}
													
PutHelp("PC5_SOLOPC", aHelpPor, aHelpEng, aHelpSpa, .T.)      

aHelpPor	:= {"Data de Entrega."		}
aHelpEng	:= {"Delivery Date."	}
aHelpSpa	:= {"Fecha de Entrega."	}
													
PutHelp("PC5_FECENT", aHelpPor, aHelpEng, aHelpSpa, .T.)  

aHelpPor	:= {"Programa."		}
aHelpEng	:= {"Program."	}
aHelpSpa	:= {"Programa."	}
													
PutHelp("PC6_PROGRAM", aHelpPor, aHelpEng, aHelpSpa, .T.)

aHelpPor	:= {"Manhã,Tarde e Noite."		}
aHelpEng	:= {"Morning,Afternoon, Night."	}
aHelpSpa	:= {"Manana, Tarde y Noche."	}
													
PutHelp("PC6_TURNO", aHelpPor, aHelpEng, aHelpSpa, .T.)
 
aHelpPor	:= {"O tipo de saída informado não é válido."}
aHelpEng	:= {"The Type of Outflow informed is not valid."}
aHelpSpa	:= {"Este Tipo de Salida no es válido. "}
													
PutHelp("PA410NOTES", aHelpPor, aHelpEng, aHelpSpa, .T.)

aHelpPor	:= {"Informe um código de TES válido, ",;
				"ou consulte tabela via F3."}
aHelpEng 	:= {"Please enter a valid code TES, ",;
				"or check using F3."}
aHelpSpa    := {"Introduce un código válido TES, ",;
				"o consulte tabla vía F3."}

PutHelp("SA410NOTES", aHelpPor, aHelpEng, aHelpSpa, .T.)
 
aHelpPor := {}
aHelpEng := {}
aHelpSpa := {}
		                 
Aadd( aHelpPor, 'É necessário informar o código do       ' )
Aadd( aHelpPor, 'serviço para produtos que controlam WMS.' )
Aadd( aHelpPor, '                                        ' )

Aadd( aHelpEng, 'É necessário informar o código do       ' )
Aadd( aHelpEng, 'serviço para produtos que controlam WMS.' )
Aadd( aHelpEng, '                                        ' )

Aadd( aHelpSpa, 'É necessário informar o código do       ' )
Aadd( aHelpSpa, 'serviço para produtos que controlam WMS.' )
Aadd( aHelpSpa, '                                        ' )

PutHelp("A240SERVIC",aHelpPor,aHelpEng,aHelpSpa,.T.)

//Cria o Help A410VINCOS
aHelpPor := {}
aHelpEng := {}
aHelpSpa := {}

aHelpPor := {"O Item do pedido de venda está",; 
			 "vinculado a uma Ordem de Serviço e não",;
			 "poderá ser alterado"}
		
aHelpSpa := {"O Item do pedido de venda está",; 
			 "vinculado a uma Ordem de Serviço e não",;
			 "poderá ser alterado"}
				
aHelpEng := {"O Item do pedido de venda está",; 
			 "vinculado a uma Ordem de Serviço e não",;
			 "poderá ser alterado."}
				  
PutHelp("PA410VINCOS",aHelpPor,aHelpEng,aHelpSpa,.T.) 
 
aHelpPor := {}
aHelpEng := {}
aHelpSpa := {}

aHelpPor := {"Exclua o Pedido de venda e altere o",; 
			 "apontamento da ordem de serviço para",;
			 "gerar o pedido de venda corretamente e",;
			 "garantir a integridade de dados entre",;
			 "as tabelas."}
		
aHelpSpa := {"Exclua o Pedido de venda e altere o",; 
			 "apontamento da ordem de serviço para",;
			 "gerar o pedido de venda corretamente e",;
			 "garantir a integridade de dados entre",;
			 "as tabelas."}
				
aHelpEng := {"Exclua o Pedido de venda e altere o",; 
			 "apontamento da ordem de serviço para",;
			 "gerar o pedido de venda corretamente e",;
			 "garantir a integridade de dados entre",;
			 "as tabelas."}
				  
PutHelp("SA410VINCOS",aHelpPor,aHelpEng,aHelpSpa,.T.)  
 

If SC5->(FieldPos("C5_TPCOMPL")) > 0 
	aHelpPor := {}
	aAdd( aHelpPor, 'Por se tratar de uma Nota Fiscal de   ' )
	aAdd( aHelpPor, 'Complemento, é obrigatório informar o ' )
	aAdd( aHelpPor, '"Tipo Compl." no campo (C5_TPCOMPL).  ' )

	PutHelp("PA410COMPRQ",aHelpPor,aHelpPor,aHelpPor,.T.)

	aHelpPor := {}
	aAdd( aHelpPor, 'Informar o tipo de complemento, sendo:')
	aAdd( aHelpPor, '1- Preço ' )
	aAdd( aHelpPor, '2- Quantidade ' )
	
	PutHelp("SA410COMPRQ",aHelpPor,aHelpPor,aHelpPor,.T.)
EndIf
 
RestArea(aArea)

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410AdiantºAutor  ³Vendas CRM 		 º Data ³  24/08/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Abre tela para selecao de titulos do financeiro quando a   º±±
±±º          ³condicao de pagto. permite o uso de Adiantamento.      	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410, FATXFUN                                       	  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410Adiant(cNumPedido, cCondPagto, nTotalPed, aRecnoSE1, lCarregaTotal, cCodCli, cCodLoja, lGravaRelacao,aRatCTBPC,aAdtPC,cCondPAdt,cNatureza,cTes,nItem)
Local aAreaSE4 	:= SE4->(GetArea())
Local aVenc		:= {}
Local nValRetImp:= 0
Local cImpRet	:="" 
Local lPParc	:=.F.
Local nX      := 0
Default nTotalPed := 0 
Default lCarregaTotal := .T.      
Default lGravaRelacao := .F.
Default cNatureza     := "" //Natureza do Utilizado - Loc. Mexico - Validacao Adiantamento
Default cTes			:= ""
Default nItem			:= 0

If cPaisLoc=="EQU"
	DbSelectArea("SA1")
	SA1->(DbSetOrder(1))
	If SA1->(DbSeek(xFilial("SA1")+cCodCli+cCodLoja))
		cNatureza:=SA1->A1_NATUREZ
		IF !Empty(cNatureza)
			lPParc:=Posicione("SED",1,xFilial("SED")+cNatureza,"ED_RATRET")=="1"	
		Endif
	Endif
Endif
If nTotalPed <= 0 .AND. lCarregaTotal
	nTotalPed := A410VlrTot() 
EndIf         

If lCarregaTotal
	If SFB->FB_JNS == 'J' .And. cPaisLoc == 'COL'
		dbSelectArea("SFC")
		dbSetOrder(2)
		If dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RV0" )
			nValRetImp 	:= MaFisRet(,"NF_VALIV2")
			Do Case
				Case FC_INCDUPL == '1'
					nTotalPed := nTotalPed - nValRetImp
				Case FC_INCDUPL == '2'
					nTotalPed := nTotalPed + nValRetImp
				Otherwise
					nTotalPed := nTotalPed
			EndCase
		Elseif dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RF0" )
			nValRetImp 	:= MaFisRet(,"NF_VALIV4")
			Do Case
				Case FC_INCDUPL == '1'
					nTotalPed := nTotalPed - nValRetImp
				Case FC_INCDUPL == '2'
					nTotalPed :=nTotalPed + nValRetImp
				Otherwise
					nTotalPed := nTotalPed
			EndCase
		Elseif dbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RC0" )
			nValRetImp 	:= MaFisRet(,"NF_VALIV7")
			Do Case
				Case FC_INCDUPL == '1'
					nTotalPed := nTotalPed - nValRetImp
				Case FC_INCDUPL == '2'
					nTotalPed := nTotalPed + nValRetImp
				Otherwise
					nTotalPed := nTotalPed
			EndCase
		Endif
	ElseIf cPaisLoc=="EQU" .And. lPParc
		DbSelectArea("SFC")
		SFC->(dbSetOrder(2))
		If DbSeek(xFilial("SFC") + SF4->F4_CODIGO + "RIR") //Retenção IVA
			cImpRet		:= SFC->FC_IMPOSTO
			DbSelectArea("SFB")
			SFB->(dbSetOrder(1))
			If SFB->(DbSeek(xFilial("SFB")+AvKey(cImpRet,"FB_CODIGO")))
				nValRetImp 	:= MaFisRet(,"NF_VALIV"+SFB->FB_CPOLVRO)
			 Endif       
			 DbSelectArea("SFC")      
				Do Case
				Case SFC->FC_INCDUPL == '1'
					nTotalPed := nTotalPed - nValRetImp
				Case SFC->FC_INCDUPL == '2'
					nTotalPed := nTotalPed + nValRetImp
				Otherwise
					nTotalPed := nTotalPed
			EndCase
		 Endif
	EndIf
	aVenc := Condicao(nTotalPed,cCondPagto,0.00,dDataBase,0.00,{},,0)
	If Len(aVenc)>0
		nTotalPed := 0
		AEval(aVenc, {|x| nTotalPed += x[2]})
	EndIf
EndIf

If A410UsaAdi( cCondPagto,@cCondPAdt )	 
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Chamada da tela de Recebimento do Financeiro.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ   	
	if FunName() == "MATA101N" .and. cPaisLoc == "MEX"
		aRecnoSE1 := FPEDADT("P", cNumPedido, nTotalPed, aRecnoSE1, cCodCli, cCodLoja, cTes, nItem)
	else
		aRecnoSE1 := FPEDADT("R", cNumPedido, nTotalPed, aRecnoSE1, cCodCli, cCodLoja, cTes, nItem)	
	Endif
	
	IF  cPaisLoc == "PER" .AND. FunName() == "MATA468N" //jgr
		nVlrAdiant := 0
		For nX := 1 to Len(aRecnoSE1)
			nVlrAdiant += aRecnoSE1[nX][3]
		Next
	ENDIF
	
	If Len(aRecnoSE1) > 0 .AND. lGravaRelacao
		// Grava quando é proveniente da Nota.
		if FunName() == "MATA101N" .and. cPaisLoc == "MEX"
			FPedAdtGrv( "P", 1, cNumPedido, aRecnoSE1 )
		else
			FPedAdtGrv( "R", 1, cNumPedido, aRecnoSE1 )
		Endif
	EndIf	
Else                                                                                        
	MsgAlert(STR0126) // "Por favor, selecione uma condição de pagamento que utilize Adiantamento."
EndIf    
RestArea(aAreaSE4)
Return .T.                

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410VlrTotºAutor  ³Vendas CRM 		 º Data ³  24/08/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Retorna o valor total do Pedido.                           º±±
±±º          ³                                                       	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410, FATXFUN                                       	  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410VlrTot()
Local nTotPed 	:= 0
Local nTotDes	:= 0
Local nX     	:= 0
Local nY        := 0
Local nMaxFor	:= Len(aCols)
Local nDescCab  := 0
Local nUsado    := Len(aHeader)
Local lTestaDel := nUsado <> Len(aCols[1])
Local nPosTotal := aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALOR"})
Local nPosDesc  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALDESC"})
Local nPPrUnit  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRUNIT"})
Local nPQtdVen  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPPrcVen  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRCVEN"})
	
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Soma as variaveis do aCols                                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
For nY := 1 To 2
	For nX := 1 To nMaxFor
		If ( (lTestaDel .And. !aCols[nX][nUsado+1]) .Or. !lTestaDel )
			If ( nPosDesc > 0 .And. nPPrUnit > 0 .And. nPPrcVen > 0 .And. nPQtdVen > 0)
				If ( aCols[nX][nPPrUnit]==0 )
					nTotDes	+= aCols[nX][nPosDesc ]
				Else
					nTotDes += A410Arred(aCols[nX][nPPrUnit]*aCols[nX][nPQtdVen],"C6_VALDESC")-;
						A410Arred(aCols[nX][nPPrcVen]*aCols[nX][nPQtdVen],"C6_VALDESC")
				EndIf
			EndIf
			If ( nPosTotal > 0 )
				nTotPed	+=	aCols[nX][nPosTotal]
			EndIf
		EndIf
	Next nX
	nTotDes  += A410Arred(nTotPed*M->C5_PDESCAB/100,"C6_VALOR")
	nTotPed  -= A410Arred(nTotPed*M->C5_PDESCAB/100,"C6_VALOR")
	nDescCab := M->C5_DESC4
	nTotPed  -= M->C5_DESCONT
	nTotDes  += M->C5_DESCONT
	If nY == 1
		If FtRegraDesc(3,nTotPed+nTotDes,@M->C5_DESC4) == nDescCab
			Exit
		Else
			nTotPed	:=	0
			nTotDes	:=	0
		EndIf
	EndIf
Next nY	

Return (nTotPed+M->C5_FRETE+M->C5_SEGURO+M->C5_DESPESA)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410UsaAdiºAutor  ³Vendas CRM 		 º Data ³  24/08/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Verifica se a condicao de pagto utiliza Adiantamento.      º±±
±±º          ³                                                       	  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410, FATXFUN                                       	  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/        
Function A410UsaAdi( cCondPagto,cCondPAdt )
Local aAreaSE4 := SE4->(GetArea())
Local lRet := .F.
Default cCondPAdt:="0"
#IFDEF TOP
	If cPaisLoc $ "ANG|BRA|MEX|PER" .AND. !Empty(cCondPagto) .AND. FindFunction("FPedAdtGrv") .and. AliasInDic("FIE") //jgr
		DbSelectArea("SE4")
		DbSetOrder(1)
		If 	SE4->(FieldPos("E4_CTRADT")) > 0 .AND.;
			DbSeek(xFilial("SE4")+cCondPagto) .AND.; 		
			SE4->E4_CTRADT == "1"
			lRet:= .T.
			cCondPAdt:="1"
		EndIf
	EndIf    
	RestArea(aAreaSE4)
#ENDIF
Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410NatAdiºAutor  ³Vendas CRM          º Data ³  17/05/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Verifica se a condicao de pagto utiliza Adiantamento.      º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410, FATXFUN,LOCXNF                                           º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/  
Function a410NatAdi(cNatureza)
Local lRet := .F.
Local aArea := GetArea()
	 DbSelectArea("SED")
	 DbSetOrder(1)
	 If MsSeek(XFilial("SED")+cNatureza) .AND. SED->(FieldPos("ED_OPERADT"))>0 .AND. SED->ED_OPERADT == "1"                           
		  lRet := .T.                                      
	 EndIf
	 RestArea(aArea)
Return lRet
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410GrvMedºAutor  ³Andre Anjos 		 º Data ³  25/11/09   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Funcao que executa a rotina automatica da medicao (CNTA120)º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410			                                       	  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/   
Static Function A410GrvMed(aCab,aItens)
Local aArea := GetArea()

If Type("lMsErroAuto") # "L"
	PRIVATE lMsErroAuto := .F.
Else
	lMsErroAuto := .F.
EndIf

//-- Gera a medicao
MsExecAuto({|a,b,c|,CNTA120(a,b,c)},aCab,aItens,3)		

//-- Encerra a medicao
If !lMsErroAuto
	MsExecAuto({|a,b,c|,CNTA120(a,b,c)},aCab,aItens,6)
EndIf

If lMsErroAuto
	MostraErro()
	RecLock("SC5",.F.)
	Replace SC5->C5_MDNUMED With CriaVar("C5_MDNUMED")
	Replace SC5->C5_MDCONTR With CriaVar("C5_MDNUMED")
	Replace SC5->C5_MDPLANI With CriaVar("C5_MDNUMED")
	MsUnLock()
	Aviso(STR0127,STR0133 +SC5->C5_NUM +STR0134,{"Ok"}) //SIGAGCT - O pedido de venda número ### não foi vinculado ao contrato selecionado.
EndIf

RestArea(aArea)
Return            

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ A410CCPed   ³ Autor ³ Vendas Clientes      ³ Data ³ 22/12/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Verifica se existe amarracao do Ped. de vendas com o Ped.    ³±±
±±³			 ³ de Compras Caso exista, e o Ped. de vendas seja alterado, a  ³±±
±±³          ³ mesma alteracao devera ser feita no Ped. de Compras.			³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Param01 - aCols do Ped. de Vendas com as alteracoes para o   ³±±
±±³          ³ Ped.	de Compras							                    ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ MATA410		                							    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/  
Static Function A410CCPed(aCols,aHeader,aMTA177PER,nOpcao)   
Local cFilPed  := SC6->C6_FILPED      // Filial do Ped. de compras
Local cNumDoc  := SC6->C6_PEDCOM      // Numero do Doc do Ped.  Compras
Local cItem    := SC6->C6_ITPC        // Numero do Item do Pedido
Local nProd    := aScan( aHeader,{|x| Trim(x[2]) == "C6_PRODUTO" } )  
Local nITem    := aScan( aHeader,{|x| Trim(x[2]) == "C6_ITEM"    } )  
Local nQuant   := aScan( aHeader,{|x| Trim(x[2]) == "C6_QTDVEN"  } )   
Local nPreco   := aScan( aHeader,{|x| Trim(x[2]) == "C6_PRCVEN"  } )   
Local nI       := 0                    // variavel para controle do for
Local nOpc     := 0                    // Variavel para tipo do MSExecAuto - 5 Exclui - 3 Inclui
Local aCbPC    := {}                   // Array para Cabecalho do Ped. de Compras
Local aItPC    := {}                   // Array para Itens do Ped. de Compras
Local aArea    := GetArea() 
Local cTxtLog  := ""                   // variavel para controle de errro no MSExecAuto
Local aMsgErr  := {}                   // array para guardar as mensagens de erro  
Local cDefine  := If(nOpcao == 1 ,STR0139 ,STR0138)                       //"Exclui Pedido de Compra" / "Atualiza Pedido de Compra"
Local lPedCom  := If(!Empty(cNumDoc ),MsgYesNo(cDefine, STR0137), .F. )  //"Pedidos de Compra"
Local cFilBkp  := cFilAnt    
Local cFilCent := ""                   //Filial Centralizadora do SC7     
Local cTES     := ""                   // Tes para geracao do Pedido de compra  
Local cFilAIB  := ""                   // Filia da Dabela AIB.
Local nPrUnit  := 0                    // Preco unitario.       
Local lRet     := .T.

DEFAULT aCols       := {}
DEFAULT aMTA177PER  := {}   
DEFAULT nOpcao      := 1   // Se for 1 Deleta o Doc de Compra se for 2 Exclui para a inclusao com a alteracao 

PRIVATE lMsErroAuto := .F.

DbSelectArea("SC7")
DbSetOrder(1)
DbSeek(cFilPed + cNumDoc + cItem ) 

cFilAnt := If (!Empty(SC7->C7_FILIAL), SC7->C7_FILIAL, cFilAnt )  
cFilCent:= SC7->C7_FILCEN
If !Empty(cNumDoc ) .AND. lPedCom  //CABECARIO DO PEDIDO DE COMPRAS 
		aAdd(aCbPC, {'C7_NUM'		, SC7->C7_NUM		    , Nil})	//--Numero do Pedido
		aAdd(aCbPC, {'C7_EMISSAO'	, SC7->C7_EMISSAO		, Nil})	//--Data de Emissao
		aAdd(aCbPC, {'C7_FORNECE'	, SC7->C7_FORNECE	    , Nil})	//--Fornecedor
		aAdd(aCbPC, {'C7_LOJA'		, SC7->C7_LOJA			, Nil})	//--Loja do Fornecedor
		aAdd(aCbPC, {'C7_CONTATO'	, SC7->C7_CONTATO     	, Nil})	//--Contato
		aAdd(aCbPC, {'C7_COND'		, SC7->C7_COND			, Nil})	//--Condicao de Pagamento
		aAdd(aCbPC, {'C7_FILENT'	, SC7->C7_FILENT		, Nil})	//--Filial de Entrega			
		
	For nI := 1 to Len(aCols)  //ITENS DO PEDIDO DE COMPRAS
		cTES := RetFldProd(aCols[nI][nProd], 'B1_TE')  
		If aMTA177PER[1][1] == 1
			nPrUnit := RetFldProd(aCols[nI][nProd], 'B1_UPRC')
		ElseIf aMTA177PER[1][1] == 2
		//-- Obtem o preco unitario atraves da tabela informada e para o fornecedor do pedido de compra
			cFilAIB := If( FWModeAccess("AIB",3)=="C", xFilial('AIB'), cFilAnt ) 
			nPrUnit := GetAdvFval( 'AIB','AIB_PRCCOM', cFilAIB + aCbPC[3][2] + aCbPC[4][2] + aMTA177PER[1][2] + aCols[nI][nProd]	, 2 )
		Else
			nPrUnit := RetFldProd(aCols[nI][nProd], 'B1_CUSTD')
		EndIf	
		AAdd(aItPC, {{ 'C7_ITEM'	 , PaDL(Val(aCols[nI][nITEM]),4,"0") 	 , NIL },;
						  { 'C7_PRODUTO' , aCols[nI][nProd]					 , NIL },;
						  { 'C7_CODTAB'  , If(aMTA177PER[1][1] = 2, aMTA177PER[1][2], Criavar('C7_CODTAB',.F.))				     , NIL },;
						  { 'C7_QUANT'	 , aCols[nI][nQuant]				 , NIL },;
						  { 'C7_PRECO'	 , nPrUnit		 					 , NIL },;
						  { 'C7_TES'	 , cTES	        	    			 , NIL },;
						  { 'C7_FILCEN'	 , cFilCent							 , Nil },;
						  { 'C7_TPOP'	 , 'F'								 , NIL } } )						
	Next nI 
	If Len( aCbPC ) > 0 .And. Len( aItPC ) > 0   
			Begin Transaction
		For nI := 1 to nOpcao
			lMsErroAuto := .F.
			MSExecAuto( {|v,x,y,z,w| MATA120(v,x,y,z,w)}, 1, aCbPC, aItPC,If (nI = 1 ,5 , 3), .F. )
			If lMsErroAuto 
				Exit
			EndIf 
		Next nI	
		If lMsErroAuto
			cTxtLog := NomeAutoLog()
			If ValType( cTxtLog ) == 'C'
				AAdd( aMsgErr, Memoread( cTxtLog ) )
			EndIf		
			Disarmtransaction()
		EndIf
		End Transaction	
	EndIf	
EndIf
If Len( aMsgErr ) > 0
	For nI := 1 To Len( aMsgErr )
		AutoGrLog( aMsgErr[nI] )
	Next  nI
	AutoGrLog('')
	MostraErro()
EndIf 	
				
cFilAnt := cFilBkp
RestArea(aArea)	
Return(NIL)      

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Program   ³MA521VerSC6 ³ Rev.  ³ Vendas Clientes       ³ Data ³ 26/12/2009 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Funcao que verifica se existe amarracao no Pedido de venda com  ³±± 
±±³          ³Pedido de Compra, Caso exista e se jah foi feito recebimento de ³±±
±±³          ³de alguma quantidade no pedido de compra o Pedido de venda nao  ³±±    
±±³          ³podera ser cancelado.                                           ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Logico .T. para cancelar - .F. nao Cancela                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³PARAM01 - Filial da nota de Saida (SF2)                         ³±±  
±±³          ³PARAM02 - Numero do Documento                                   ³±±  
±±³          ³PARAM03 - Serie do Documento                                    ³±±  
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function A410VerISC6(cFilDoc,cNumDoc,aCols,aHeader)
Local lRet     := .T.
Local aArea    := GetArea()   
Local cFilPCom := ""        // Filial do Pedido de Compras 
Local cPedCom  := ""        // Numero do Pedido de Compras
Local cProd    := ""        // Cod do Produto 
Local cItemPC  := ""        // Item do Pedido de Compra
Local nITem    := aScan( aHeader,{|x| Trim(x[2]) == "C6_ITEM"    } )   
Local cNumC7   := ""        // Guarda o num para nao correr a Tabela Inteira.                               

Default cFilDoc   := ""
Default cNumDoc   := ""
Default aCols     := {}

If SC6->(FieldPos("C6_PEDCOM")) > 0 .AND.  SC6->(FieldPos("C6_ITPC")) > 0 .AND. SC6->(FieldPos("C6_FILPED")) > 0 
	If !Empty(cFilDoc) .AND. !Empty(cNumDoc) .AND. Len(aCols) > 0 
		DbSelectArea("SC6")
		DbSetOrder(1)
		If DbSeek(cFilDoc + cNumDoc + aCols[1][nItem] )
			cFilPCom  := SC6->C6_FILPED	
			cProd     := SC6->C6_PRODUTO
			cPedCom   := SC6->C6_PEDCOM
			cItemPC   := SC6->C6_ITPC
			If Empty (cFilPCom)
				lRet := .T.
			Else
				DbSelectArea("SC7")
				DbSetOrder(4)
				If DbSeek(cFilPCom + cProd + cPedCom + cItemPC ) 
					 cNumC7 := SC7->C7_NUM    
					While !Eof() .And. cNumC7 == SC7->C7_NUM		
						lRet := If(SC7->C7_QUJE > 0, .F., .T. )
						If !lRet .OR. cNumC7 <> SC7->C7_NUM 
							Exit
						EndIf
						SC7->(DbSkip()) 
					End
				EndIf
			EndIf	
		EndIf
	EndIf	
EndIf	
RestArea(aArea)
Return (lRet)  

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ AjustaSX6³ Autor ³ VENDAS CRM			³ Data ³ 12/11/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Ajuste do dicionario de dados		                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA410  		                        				  |±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function AjustaSX6()
Local aArea 	:= GetArea()

If ( cPaisLoc != "BRA" )
	dbSelectArea("SX6")
	dbSetOrder(1)
	If dbSeek(xFilial("SX6")+"MV_ALTTXFT") .And. SX6->X6_DESCRIC <> 'Selecionar taxa do Faturamento ("0" taxa SC5,' ;
		.And.	SX6->X6_DESC1 <> '"1" taxa do SM2,"2" abre tela para digitar taxa)'
		RecLock("SX6",.F.)
		X6_DESCRIC := 'Selecionar taxa do Faturamento ("0" taxa SC5,'  
		X6_DSCSPA  :=  'Seleccionar tasa de Facturacion ("0" tasa SC5,'
		X6_DSCENG  :=  'Select the Billing rate("0" rate SC5, "1" rate'
		X6_DESC1   := '"1" taxa do SM2,"2" abre tela para digitar taxa)'
		X6_DSCSPA1 :=  '"1" tasa del SM2,"2" abre pantalla para digitar'
		X6_DSCENG1 :=  'SM2 "2" opens window to enter rate.'
		X6_DESC2   :=  ''   
		X6_DSCSPA2 :=  'tasa)'
		X6_DSCENG2 :=  ''
		MsUnlock()
	EndIf
Endif	

RestArea(aArea)

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a410RatCC  ºAutor  ³Microsiga           º Data ³  06/18/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function a410RatCC(aHeadAGG,aColsAGG,lAltera,nAt)

Local aArea       := GetArea()
Local aSavaRotina := aClone(aRotina)
Local aColsCC     := {}
Local aButtons	  := {}
Local aButtonUsr  := {}
Local aHeadSC7    := {}
Local aColsSC7    := {}
Local aNoFields   := {"AGG_CUSTO1","AGG_CUSTO2","AGG_CUSTO3","AGG_CUSTO4","AGG_CUSTO5"}
Local bSavKeyF4   := SetKey(VK_F4 ,Nil)
Local bSavKeyF5   := SetKey(VK_F5 ,Nil)
Local bSavKeyF6   := SetKey(VK_F6 ,Nil)
Local bSavKeyF7   := SetKey(VK_F7 ,Nil)
Local bSavKeyF8   := SetKey(VK_F8 ,Nil)
Local bSavKeyF9   := SetKey(VK_F9 ,Nil)
Local bSavKeyF10  := SetKey(VK_F10,Nil)
Local bSavKeyF11  := SetKey(VK_F11,Nil)
Local nPItemNF	  := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_ITEM"} )
Local nPCC	      := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_CC"} )
Local nPConta	  := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_CONTA"} )
Local nPItemCta   := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_ITEMCTA"} )
Local nPCLVL	  := Ascan(aHeader,{|x| AllTrim(x[2]) == "C6_CLVL"} )
Local nPDECC	  := 0
Local nPDEConta	  := 0
Local nPDEItemCta := 0
Local nPDECLVL	  := 0
Local nPRateio    := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_RATEIO"} )
Local nColTotal   := aScan(aHeader,{|x| AllTrim(x[2]) == "C6_TOTAL"} )
Local nItem  	   := aScan(aColsAGG,{|x| Alltrim(x[1]) == Alltrim(aCols[n][nPItemNF])})
Local nX          := 0
Local nSavN       := nAT
Local nPPercAGG   := 0
Local nTotPerc    := 0
Local nOpcA       := 0
Local nNewTam     := 0
Local lContinua   := .T.
Local lRet        := .T.
Local oDlg
Local cCampo      := ReadVar()
Local nAviso      := 0
Local ca410Num    := M->C5_NUM
Local nItAGG	  := 0

DEFAULT aHeadAGG  := {}
DEFAULT aColsAGG  := {}
DEFAULT lAltera   := .T.

Private aOrigHeader := aClone(aHeader)
Private aOrigAcols  := aClone(aCols)
Private oGetMan
Private nOrigN      := nAT
Private nPercRat    := 0
Private nPercARat	:= 100
Private oPercRat
Private oPercARat
Private oGetDad
Private N := nAT

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Ativa os botoes da toolbar                                          ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If (CtbInUse())
	If !__lPyme
		aadd(aButtons,{'AUTOM',{|| AdmRatExt(aHeadAGG,oGetDad:aCols,{ |x,y,z,w| a410CarCC(x,y,@z,w) }) },STR0144,OemToAnsi(STR0151)}) //"Rateio"##'Escolha de Rateio Pre-Configurado'
	EndIF
EndIf

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Impede de executar a rotina quando a tecla F3 estiver ativa		   ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If Type("InConPad") == "L" 
	lContinua := !InConPad
EndIf

If nSavN == 0 
	lContinua := .F.
EndIf

If lContinua
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem do aHeader do AGG                                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If Empty(aHeadAGG)
		dbSelectArea("SX3")
		dbSetOrder(1)
		MsSeek("AGG")
		While !EOF() .And. (SX3->X3_ARQUIVO == "AGG")
			IF X3USO(SX3->X3_USADO) .AND. cNivel >= SX3->X3_NIVEL .And. !"AGG_CUSTO"$SX3->X3_CAMPO
				AADD(aHeadAGG,{ TRIM(x3Titulo()),;
				SX3->X3_CAMPO,;
				SX3->X3_PICTURE,;
				SX3->X3_TAMANHO,;
				SX3->X3_DECIMAL,;
				SX3->X3_VALID,;
				SX3->X3_USADO,;
				SX3->X3_TIPO,;
				SX3->X3_F3,;
				SX3->X3_CONTEXT } )
			EndIf
			dbSelectArea("SX3")
			dbSkip()
		EndDo
	EndIf
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem do aCols do AGG                                            ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If nItem > 0
		aColsCC := aClone(aColsAGG[nItem][2])
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Totaliza o % ja Rateado ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		nPercRat := 0
		For nX   := 1  To  Len(aColsCC)
			If !aColsCC[nX][Len(aHeadAGG) + 1]
				nPercRat += aColsCC[nX][aScan(aHeadAGG,{|x| AllTrim(x[2])=="AGG_PERC"})]
			Endif
		Next nX
		
		nPercARat := 100 - nPercRat
	Else
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ aHeader e aCols do SC7 devem ser salvos pois a FillGetDados destroe ³
		//³ ambos por serem PRIVATE, independente da construcao do aColsCC.     ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aHeadSC7 := aClone(aHeader)
		aColsSC7 := aClone(aCols)
		aHeadAGG := {}
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Sintaxe da FillGetDados(nOpcX,Alias,nOrdem,cSeek,bSeekWhile,uSeekFor,aNoFields,aYesFields,lOnlyYes,cQuery,bMontCols,lEmpty,aHeaderAux,aColsAux,bAfterCols,bBeforeCols,bAfterHeader,cAliasQry |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		FillGetDados(IIf(lAltera,3,2),"AGG",1,,,,aNoFields,,,,,.T.,aHeadAGG,aColsCC,,,)
		aColsCC[1][aScan(aHeadAGG,{|x| Trim(x[2])=="AGG_ITEM"})] := StrZero(1,Len(AGG->AGG_ITEM))
		
		aHeader := aHeadSC7
		aCols   := aColsSC7
		
	EndIf
	If !(Type('l410Auto') <> 'U' .And. l410Auto)
		aHeadSC7 := aClone(aHeader)
		aColsSC7 := aClone(aCols)
		DEFINE MSDIALOG oDlg FROM 100,100 TO 365,600 TITLE STR0152 Of oMainWnd PIXEL //"Rateio por Centro de Custo"
		@ 018,003 SAY RetTitle("C6_NUM")  OF oDlg PIXEL SIZE 20,09
		@ 018,026 SAY ca410Num            OF oDlg PIXEL SIZE 50,09
		@ 018,096 SAY RetTitle("C6_ITEM") OF oDlg PIXEL SIZE 20,09
		@ 018,120 SAY aCols[N][nPItemNF]  OF oDlg PIXEL SIZE 20,09
		oGetDad := MsNewGetDados():New(030,005,105,245,IIF(lAltera,GD_INSERT+GD_UPDATE+GD_DELETE,0),"a410RatLOk","a410RatTOk","+AGG_ITEM",,,999,/*fieldok*/,/*superdel*/,/*delok*/,oDlg,aHeadAGG,aColsCC)
		oGetMan := oGetDad
		@ 110,005 Say OemToAnsi(STR0149) FONT oDlg:oFont OF oDlg PIXEL	 // "% Rateada: "
		@ 110,040 Say oPercRat VAR nPercRat Picture PesqPict("AGG","AGG_PERC") FONT oDlg:oFont COLOR CLR_HBLUE OF oDlg PIXEL
		@ 110,175 Say OemToAnsi(STR0150) FONT oDlg:oFont OF oDlg PIXEL	 // "% A Ratear: "
		@ 110,217 Say oPercARat VAR nPercARat Picture PesqPict("AGG","AGG_PERC") FONT oDlg:oFont COLOR CLR_HBLUE OF oDlg PIXEL
		ACTIVATE MSDIALOG oDlg CENTERED ON INIT EnchoiceBar(oDlg,{||IIF(oGetDad:TudoOk(),(nOpcA:=1,oDlg:End()),(nOpcA:=0))},{||oDlg:End()},,aButtons)
		If lAltera
			aColsCC := Aclone(oGetDad:aCols)
		Else
			aHeader := aHeadSC7
			aCols   := aColsSC7
		EndIf
	Else
		nOpcA := 1
	EndIf
	nPPercAGG := aScan(aHeadAGG,{|x| AllTrim(x[2])=="AGG_PERC"})
	nTotPerc := 0
	
//	aColsPar :={}
//	AEval( aColsCC, { |x| If( !x[ Len(aHeadAGG) + 1], AAdd( aColsPar, x ), ) } )
//	aColsCC := aClone( aColsPar )
	
	For nX := 1 To Len(aColsCC)
		nTotPerc += If(!aColsCC[nX][Len(aHeadAGG) + 1],aColsCC[nX][nPPercAGG],0)
	Next nX
	
	nPDECC	      := aScan(aHeadAGG,{|x| AllTrim(x[2]) == "AGG_CC"} )
	nPDIt	      := aScan(aHeadAGG,{|x| AllTrim(x[2]) == "AGG_ITEM"} )
	nPDEConta	  := aScan(aHeadAGG,{|x| AllTrim(x[2]) == "AGG_CONTA"} )
	nPDEItemCta   := aScan(aHeadAGG,{|x| AllTrim(x[2]) == "AGG_ITEMCT"} )
	nPDECLVL	  := Ascan(aHeadAGG,{|x| AllTrim(x[2]) == "AGG_CLVL"} )
	
	If nOpcA == 1 .And. lAltera
		If nTotPerc > 0
			//Acerta a numeração do Item
			nItAGG:=0
			For nX := 1 to Len(aColsCC)
				If !aColsCC[nX][Len(aHeadAGG) + 1]
				  nItAGG++
				  aColsCC[nX][nPDIt] := StrZero(nItAGG,TamSX3("AGG_ITEM")[1])
				Endif
			Next nX
			If nItem > 0
				aColsAGG[nItem][2]	:= aClone(aColsCC)
			Else
				aadd(aColsAGG,{aCols[N][nPItemNF],aClone(aColsCC)})
			EndIf
			
			aCols[N][nPRateio] := "1"
			If nPCC <> 0 .And. nPDECC <> 0
				aCols[N][nPCC]     := Space(Len(aCols[N][nPCC]))
			EndIf
			If nPConta <> 0 .And. nPDEConta <> 0
				aCols[N][nPConta]  := Space(Len(aCols[N][nPConta]))
			EndIf
			If nPItemCta <> 0 .And. nPDEItemCta <> 0
				aCols[N][nPItemCta]:= Space(Len(aCols[N][nPItemCta]))
			EndIf
			If nPCLVL <> 0 .And. nPDECLVL <> 0
				aCols[N][nPCLVL]   := Space(Len(aCols[N][nPCLVL]))
			EndIf
			If N == 1 .And. Len(aCols)>1
				nAviso := Aviso(STR0153,STR0154,{STR0155,STR0156,STR0157}) //"Atenção"###"Replicar informações para os demais itens do documento?"###"Sim"###"Não"###"Todos"
				If nAviso == 3
					aColsAGG := {}
				EndIf
				If nAviso <> 2
					For nX := 1 To Len(aCols)
						nItem  	  := aScan(aColsAGG,{|x| x[1] == aCols[nX][nPItemNF]})
						If nItem == 0
							aadd(aColsAGG,{aCols[nX][nPItemNF],aClone(aColsCC)})
							
							aCols[nX][nPRateio] := "1"
							
							If nPCC <> 0 .And. nPDECC <> 0
								aCols[NX][nPCC]     := Space(Len(aCols[NX][nPCC]))
							EndIf
							If nPConta <> 0 .And. nPDEConta <> 0
								aCols[NX][nPConta]  := Space(Len(aCols[NX][nPConta]))
							EndIf
							If nPItemCta <> 0 .And. nPDEItemCta <> 0
								aCols[NX][nPItemCta]:= Space(Len(aCols[NX][nPItemCta]))
							EndIf
							If nPCLVL <> 0 .And. nPDECLVL <> 0
								aCols[NX][nPCLVL]   := Space(Len(aCols[NX][nPCLVL]))
							EndIf
							
						EndIf
					Next nX
				EndIf
			EndIf
		Else
			If nItem > 0
				aColsAGG[nItem][2]	:= aClone(aColsCC)
			Else
				aadd(aColsAGG,{aCols[N][nPItemNF],aClone(aColsCC)})
			EndIf
			aCols[nSavN][nPRateio] := "2"
		EndIf
	Else
		If nTotPerc > 0 .And. nItem > 0
			If "C6_RATEIO" $ cCampo
				&cCampo := "1"
			EndIf
			aCols[nSavN][nPRateio] := "1"
		Else
			If "C6_RATEIO" $ cCampo
				&cCampo := "2"
			EndIf
			aCols[nSavN][nPRateio] := "2"
		EndIf
	EndIf
EndIf

aBkpAgg := aClone(aColsAGG)
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Restaura a integridade da rotina                                    ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
aRotina	:= aClone(aSavaRotina)
N := nSavN
SetKey(VK_F4 ,bSavKeyF4)
SetKey(VK_F5 ,bSavKeyF5)
SetKey(VK_F6 ,bSavKeyF6)
SetKey(VK_F7 ,bSavKeyF7)
SetKey(VK_F8 ,bSavKeyF8)
SetKey(VK_F9 ,bSavKeyF9)
SetKey(VK_F10,bSavKeyF10)
SetKey(VK_F11,bSavKeyF11)
RestArea(aArea)
Return(.T.)

/*
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o	 ³a410AdtSld ³ Autor ³ Totvs                ³ Data ³ 05/09/09 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Retorna o saldo do Relacionamento do pedido                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ ExpA1 = Numero do pedido						      		  ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function a410AdtSld(cNumPed,aAdtPC,nAutoAdt,nF)         

Local nSaldo	:= 0
Local aArea     := GetArea()
Local aTmpPed   :={}
Local aValidAdt :={}
Local nXT_Adt   :=0
Local nX,yX     :=0
Local cBuscaAdt :=""
Local lXAdt     :=.T.
Local nXT_Relac :=0
Local nVlAdt  :=0
Local lCkAdt    :=.T.
Local cCamposAdt :=""

Local nPos_FILIAL := 0
Local nPos_PREFIX := 0
Local nPos_NUM    := 0
Local nPos_PARCEL := 0
Local nPos_TIPO   := 0
Local nPos_VALOR  := 0
Local nPos_CART   := 0
Local nPos_CLIENT := 0
Local nPos_LOJA   := 0

Default nAutoAdt:=0
Default aAdtPC  :={}
Default nF      := 1

If nAutoAdt==3 .OR. nAutoAdt==4 
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Posição dos campos e verifica se os campos obrigatórios estão presentes³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	lCkAdt := VlAdtCpo(aAdtPC)
	
	If lCkAdt
		DbSelectArea("SE1")
		DbSetOrder(1)
		For nX := 1 to Len(aAdtPC)    //NOVO RELACIONAMENTO
			nPos_FILIAL := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_FILIAL"} )
			nPos_PREFIX := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_PREFIX"} )
			nPos_NUM    := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_NUM"   } )
			nPos_PARCEL := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_PARCEL"} )
			nPos_TIPO   := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_TIPO"}   )
			nPos_VALOR  := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_VALOR"}  )
			nPos_CART   := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_CART"}   )
			nPos_CLIENT := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_CLIENT"} )
			nPos_LOJA   := AScan(aAdtPC[nX], { |x| Alltrim(x[1])=="FIE_LOJA"}   ) 
			
			If DbSeek(aAdtPC[nX][nPos_FILIAL][2]+aAdtPC[nX][nPos_PREFIX][2]+aAdtPC[nX][nPos_NUM][2]+aAdtPC[nX][nPos_PARCEL][2]+aAdtPC[nX][nPos_TIPO][2])
				Aadd(aTmpPed ,{cNumPed,SE1->(Recno()),aAdtPC[nX][nPos_VALOR][2]})  //PEDIDO+RECNO DO SE2+NOVO VLR DE RELACIO
				Aadd(aValidAdt,{SE1->E1_FILIAL,aAdtPC[nX][nPos_CART][2],SE1->E1_CLIENTE,SE1->E1_LOJA,SE1->E1_PREFIXO,SE1->E1_NUM,SE1->E1_PARCELA,SE1->E1_TIPO,aAdtPC[nX][nPos_VALOR][2],SE1->E1_VALOR}) //ARMAZENA CHAVE DO RELAC NO SE2
			Endif
			
		Next
		DbSelectArea( "FIE" )
		FIE->( DbSetOrder( 2 ) )
		For nX := 1 to Len(aTmpPed)
			cBuscaAdt:=(aValidAdt[nX][1]+aValidAdt[nX][2]+aValidAdt[nX][3]+aValidAdt[nX][4]+aValidAdt[nX][5]+aValidAdt[nX][6]+aValidAdt[nX][7]+aValidAdt[nX][8])
			nXT_Adt:=0                 //VALOR DO RELACIONAMENTO ATUAL
			nXT_Relac+=aTmpPed[nX][3]  //SOMA TOTAL DO NOVO REALCIONAMENTO
			If FIE->( DbSeek( cBuscaAdt ) )  //BUSCA RELACIONAMENTO EXISTENTE COM SE1
				While !FIE->(EOF()) .and. cBuscaAdt==(FIE->FIE_FILIAL+FIE->FIE_CART+FIE->FIE_CLIENT+FIE->FIE_LOJA+FIE->FIE_PREFIX+FIE->FIE_NUM+FIE->FIE_PARCEL+FIE->FIE_TIPO)
					If FIE->FIE_PEDIDO==cNumPed
						nXT_Adt+=FIE->FIE_VALOR   //SOMA DE TODOS RELAC EXISTENTES PARA O PA USADO
					Endif
					FIE->(DbSkip())
				Enddo
				If nAutoAdt==4 .and. nF == 2
					cBuscaAdt:=(aValidAdt[nX][1]+aValidAdt[nX][2]+aValidAdt[nX][3]+aValidAdt[nX][4]+aValidAdt[nX][5]+aValidAdt[nX][6]+aValidAdt[nX][7]+aValidAdt[nX][8])
					nVlAdt  :=0
					If FIE->( DbSeek( cBuscaAdt ) )  //BUSCA RELACIONAMENTO EXISTENTE COM SE1
						While !FIE->(EOF()) .and. cBuscaAdt==(FIE->FIE_FILIAL+FIE->FIE_CART+FIE->FIE_CLIENT+FIE->FIE_LOJA+FIE->FIE_PREFIX+FIE->FIE_NUM+FIE->FIE_PARCEL+FIE->FIE_TIPO)
							If FIE->FIE_PEDIDO==cNumPed
								nVlAdt+=FIE->FIE_VALOR
							Endif
							FIE->(DbSkip())
						Enddo
					Endif
					If ((nXT_Adt-nVlAdt)+aTmpPed[nX][3]) > aValidAdt[nX][10] //Valor Novo Realc - Valor Ataul Realc.+
						Help(" ",1,"A410NOSDADT")
						lXAdt:=.F.
						Exit
					Endif
				Else
					If (nXT_Adt+aTmpPed[nX][3]) > aValidAdt[nX][10] //SE (SOMA RELAC DO PA USADOS+NOVO RELAC) FOR > O VALOR DO PA
						If nF>=1
							Help(" ",1,"A410NOSDADT")
						Endif
						lXAdt:=.F.
						Exit
					Endif
				Endif
			Endif
		Next
		If lXAdt
			nSaldo:=1
		Else
			nSaldo:=0
		Endif
	Else
		nSaldo:=0
	EndIf
Endif
RestArea(aArea)
Return nSaldo
/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³a410CarCC ³ Autor ³ Wagner Mobile Costa    ³ Data ³21.10.2002³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Carrega as definicoes de rateio externo                     ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA103                                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function a410CarCC(aCols, aHeader, cItem, lPrimeiro)

Local lCusto		:= CtbMovSaldo("CTT")
Local lItem	 		:= CtbMovSaldo("CTD")
Local lCLVL	 		:= CtbMovSaldo("CTH")
Local nPosPerc		:= aScan(aHeader,{|x| AllTrim(x[2]) == "AGG_PERC" } )
Local nPosItem		:= aScan(aHeader,{|x| AllTrim(x[2]) == "AGG_ITEM" } )
Local nPosCC		:= aScan(aHeader,{|x| AllTrim(x[2]) == "AGG_CC"} )
Local nPosConta		:= aScan(aHeader,{|x| AllTrim(x[2]) == "AGG_CONTA"} )
Local nPosItemCta	:= aScan(aHeader,{|x| AllTrim(x[2]) == "AGG_ITEMCT"} )
Local nPosCLVL		:= aScan(aHeader,{|x| AllTrim(x[2]) == "AGG_CLVL"} )
Local nHeader     := 0
Local aMT103PRE     := {}

Local lCtbIsCube    := FindFunction("CtbEntArr") .And. AliasInDic("CV0")
Local aEntidades	:= {}
Local nEnt			:= 0
Local nDeb			:= 0
If lPrimeiro
	//-- Se ja foi informado algum rateio, limpar o aCols
	If aCols[Len(aCols)][nPosPerc] <> 0
		aCols := {}
		Aadd(aCols, Array(Len(aHeader) + 1))
		For nHeader := 1 To Len(aHeader)
			If Trim(aHeader[nHeader][2]) <> "AGG_ALI_WT" .And. Trim(aHeader[nHeader][2]) <> "AGG_REC_WT"
				aCols[Len(aCols)][nHeader] := CriaVar(aHeader[nHeader][2])
			Endif
		Next
	EndIf
	cItem := Soma1(cItem)
	aCols[Len(aCols)][nPosItem]  := cItem
	aCols[Len(aCols)][Len(aHeader)+1] := .F.
Else
	If aCols[Len(aCols)][nPosPerc] = 0
		nCols := Len(aCols)
		cItem := aCols[nCols][nPosItem]
	Else
		If Len(aCols) > 0
			cItem := aCols[Len(aCols)][nPosItem]
		Endif
		Aadd(aCols, Array(Len(aHeader) + 1))
		cItem := Soma1(cItem)
	EndIf
	
	For nHeader := 1 To Len(aHeader)
		If Trim(aHeader[nHeader][2]) <> "AGG_ALI_WT" .And. Trim(aHeader[nHeader][2]) <> "AGG_REC_WT"
			aCols[Len(aCols)][nHeader] := CriaVar(aHeader[nHeader][2])
		EndIf
	Next
	
	aCols[Len(aCols)][nPosItem] := cItem
	
	// Interpreto os campos incluida possibilidade de variaveis de memoria
	If !Empty(CTJ->CTJ_DEBITO)
		aCols[Len(aCols)][nPosConta]	:= CTJ->CTJ_DEBITO
	Else
		aCols[Len(aCols)][nPosConta]	:= CTJ->CTJ_CREDIT
	Endif
	
	
	If lCusto
		If ! Empty(CTJ->CTJ_CCD)
			aCols[Len(aCols)][nPosCc]	:= CTJ->CTJ_CCD
		Else
			aCols[Len(aCols)][nPosCc]	:= CTJ->CTJ_CCC
		Endif
	EndIf
	
	If lItem
		If ! Empty(CTJ->CTJ_ITEMD)
			aCols[Len(aCols)][nPosItemCta]	:= CTJ->CTJ_ITEMD
		Else
			aCols[Len(aCols)][nPosItemCta]	:= CTJ->CTJ_ITEMC
		Endif
	EndIf
	
	If lClVl
		If ! Empty(CTJ->CTJ_CLVLDB)
			aCols[Len(aCols)][nPosClVl]	:= CTJ->CTJ_CLVLDB
		Else
			aCols[Len(aCols)][nPosClVl]	:= CTJ->CTJ_CLVLCR
		Endif
	EndIf
	aCols[Len(aCols)][nPosPerc] := CTJ->CTJ_PERCEN
	aCols[Len(aCols)][Len(aHeader) + 1] := .F.
	
	If lCtbIsCube
		aEntidades := CtbEntArr()
		For nEnt := 1 to Len(aEntidades)
			For nDeb := 1 to 2
				cCpo := "AGG_EC"+aEntidades[nEnt]
				cCTJ := "CTJ_EC"+aEntidades[nEnt]
				
				If nDeb == 1
					cCpo += "DB"
					cCTJ += "DB"
				Else
					cCpo += "CR"
					cCTJ += "CR"
				EndIf
				
				nPosHead := aScan(aHeader,{|x| AllTrim(x[2]) == Alltrim(cCpo) } )
				
				If nPosHead > 0 .And. CTJ->(FieldPos(cCTJ)) > 0
					aCols[Len(aCols)][nPosHead] := CTJ->(&(cCTJ))
				EndIf
				
			Next nDeb
		Next nEnt
	EndIf
EndIf

Return .T.
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³a410RatLok ³ Autor ³ Eduardo Riera         ³ Data ³15.10.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Validacao da linhaok dos itens do rateio dos itens do documen³±±
±±³          ³to de entrada                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica se a linha esta valida                         ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo validar a linhaok do rateio dos³±±
±±³          ³itens do documento de entrada                                ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a410RatLOk()

Local nPPerc    := aScan(aHeader,{|x| AllTrim(x[2]) == "AGG_PERC"} )
Local lRetorno  := .T.
Local nX        := 0

If !aCols[N][Len(aCols[N])]
	If aCols[N][nPPerc] == 0
		Help(" ",1,"A103PERC")
		lRetorno := .F.
	EndIf
EndIf

If lRetorno
	nPercRat := 0
	nPercARat:= 0
	For nX	:= 1 To Len(aCols)
		If !aCols[nX][Len(aCols[nX])]
			nPercRat += aCols[nX][nPPerc]
		EndIf
	Next
	nPercARat := 100 - nPercRat
	If Type("oPercRat")=="O"
		oPercRat:Refresh()
		oPercARat:Refresh()
	Endif
EndIf     

If lRetorno .And. ExistBlock("MRatLOk")
	lRetorno := ExecBlock("MRatLOk",.F.,.F.)
EndIf

Return(lRetorno)

/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³a410RatLok ³ Autor ³ Eduardo Riera         ³ Data ³15.10.2002 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Validacao da TudoOk dos itens do rateio dos itens do documen-³±±
±±³          ³to de entrada                                                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ExpL1: Indica se a todas as linhas estao validas             ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta rotina tem como objetivo validar a tudook do rateio dos ³±±
±±³          ³itens do documento de entrada                                ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ Materiais                                                   ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a410RatTok()

Local nPPerc   := aScan(aHeader,{|x| AllTrim(x[2]) == "AGG_PERC"} )
Local nTotal   := 0
Local nX       := 0
Local lRetorno := .T.
Local n_SaveLin

For nX	:= 1 To Len(aCols)
	If !aCols[nX][Len(aCols[nX])]
		nTotal += aCols[nX][nPPerc]
	EndIf
Next
If nTotal > 0 .And. nTotal <> 100
	Help(" ",1,"A103TOTRAT")
	lRetorno := .F.
EndIf

Return(lRetorno) 


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410FRat   ºAutor  ³Microsiga           º Data ³  06/23/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Carrega o vetor dos rateios do pedido                       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A410FRat(aHeadAGG,aColsAGG)
Local lQuery    := .T.
Local aStruAGG  := AGG->(dbStruct())
Local cAliasAGG := "AGG" 
Local nX		:= 0
Local nY		:= 0  
Local aBackAGG    := {}
Local cItemAGG  := ""
Local nItemAGG	:= 0
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Monta o Array contendo as registros do AGG           ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
DbSelectArea("AGG")
DbSetOrder(1)
cAliasAGG := "AGG"		

#IFDEF TOP
	If TcSrvType()<>"AS/400"
		lQuery    := .T.
		aStruAGG  := AGG->(dbStruct())
		cAliasAGG := "A120NFISCAL"
		cQuery    := "SELECT AGG.*,AGG.R_E_C_N_O_ AGGRECNO "
		cQuery    += "FROM "+RetSqlName("AGG")+" AGG "
		cQuery    += "WHERE AGG.AGG_FILIAL='"+xFilial("AGG")+"' AND "
		cQuery    += "AGG.AGG_PEDIDO='"+SC5->C5_NUM+"' AND "
		cQuery    += "AGG.AGG_FORNEC='"+SC5->C5_CLIENTE+"' AND "
		cQuery    += "AGG.AGG_LOJA='"+SC5->C5_LOJACLI+"' AND "
		cQuery    += "AGG.D_E_L_E_T_=' ' "
		cQuery    += "ORDER BY "+SqlOrder(AGG->(IndexKey()))

		cQuery := ChangeQuery(cQuery)

		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasAGG,.T.,.T.)
		For nX := 1 To Len(aStruAGG)
			If aStruAGG[nX,2]<>"C"
				TcSetField(cAliasAGG,aStruAGG[nX,1],aStruAGG[nX,2],aStruAGG[nX,3],aStruAGG[nX,4])
			EndIf
		Next nX
		
	Else
#ENDIF
		MsSeek(xFilial("AGG")+SC5->C5_NUM+SC5->C5_CLIENTE+SC5->C5_LOJACLI)
#IFDEF TOP
	EndIf
#ENDIF

dbSelectArea(cAliasAGG)
While ( !Eof() .And. ;
		xFilial('AGG') == (cAliasAGG)->AGG_FILIAL .And.;
		SC5->C5_NUM == (cAliasAGG)->AGG_PEDIDO .And.;
		SC5->C5_CLIENTE == (cAliasAGG)->AGG_FORNEC .And.;
		SC5->C5_LOJACLI == (cAliasAGG)->AGG_LOJA )
	If Empty(aBackAGG)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³ Montagem do aHeader                                          ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		DbSelectArea("SX3")
		DbSetOrder(1)
		MsSeek("AGG")
		While ( !EOF() .And. SX3->X3_ARQUIVO == "AGG" )
			If X3USO(SX3->X3_USADO) .AND. cNivel >= SX3->X3_NIVEL .And. !"AGG_CUSTO"$SX3->X3_CAMPO
				aadd(aBackAGG,{ TRIM(X3Titulo()),;
					SX3->X3_CAMPO,;
					SX3->X3_PICTURE,;
					SX3->X3_TAMANHO,;
					SX3->X3_DECIMAL,;
					SX3->X3_VALID,;
					SX3->X3_USADO,;
					SX3->X3_TIPO,;
					SX3->X3_F3,;
					SX3->X3_CONTEXT })
			EndIf
			DbSelectArea("SX3")
			dbSkip()
		EndDo
	EndIf
	aHeadAGG  := aBackAGG
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Adiciona os campos de Alias e Recno ao aHeader para WalkThru.³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	ADHeadRec("AGG",aHeadAGG)    

	If cItemAGG <> 	(cAliasAGG)->AGG_ITEMPD
		cItemAGG	:= (cAliasAGG)->AGG_ITEMPD
		aadd(aColsAGG,{cItemAGG,{}})
		nItemAGG++
	EndIf

	aadd(aColsAGG[nItemAGG][2],Array(Len(aHeadAGG)+1))
	For nY := 1 to Len(aHeadAGG)
		If IsHeadRec(aHeadAGG[nY][2])
			aColsAGG[nItemAGG][2][Len(aColsAGG[nItemAGG][2])][nY] := IIf(lQuery , (cAliasAGG)->AGGRECNO , AGG->(Recno())  )
		ElseIf IsHeadAlias(aHeadAGG[nY][2])
			aColsAGG[nItemAGG][2][Len(aColsAGG[nItemAGG][2])][nY] := "AGG"
		ElseIf ( aHeadAGG[nY][10] <> "V")
			aColsAGG[nItemAGG][2][Len(aColsAGG[nItemAGG][2])][nY] := (cAliasAGG)->(FieldGet(FieldPos(aHeadAGG[nY][2])))
		Else
			aColsAGG[nItemAGG][2][Len(aColsAGG[nItemAGG][2])][nY] := (cAliasAGG)->(CriaVar(aHeadAGG[nY][2]))
		EndIf
		aColsAGG[nItemAGG][2][Len(aColsAGG[nItemAGG][2])][Len(aHeadAGG)+1] := .F.
	Next nY

	DbSelectArea(cAliasAGG)
	dbSkip()
EndDo

If lQuery
	DbSelectArea(cAliasAGG)
	dbCloseArea()
	DbSelectArea("AGG")
EndIf

Return


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MATA410   ºAutor  ³Microsiga           º Data ³  07/15/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Carrega o array de rateio com as informações da execauto    º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function M410AutRat(aRatCTBPC, aHeadAGG)
Local aTmpRat := {}
Local aAux := {}
Local aColsAGG := {}
Local xZ		:= 0
Local nY		:= 0
Local nX		:= 0

Default aHeadAGG:= {}

For xZ:=1 to Len(aRatCTBPC)
	aTmpRat:={}
	aAux := aRatCTBPC[xZ][2]
	For nY:= 1 to Len(aAux)
		aAdd(aTmpRat,Array(Len(aHeadAGG)+1))
		For nX:= 1 to Len(aHeadAGG)
			nAux:= aScan(aAux[ny],{|x| AllTrim(x[1])==AllTrim(aHeadAGG[nX][2])})	
			If nAux > 0
				aTmpRat[nY][nX]:= aAux[nY][nAux][2]
			EndIf	
		Next nX	
		aTmpRat[nY][Len(aHeadAGG)+1]:= .F.
	Next
	Aadd(aColsAGG,{aRatCTBPC[xZ][1],aTmpRat})
Next

Return aColsAGG


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³VlAdtCpo  ºAutor  ³Microsiga           º Data ³  07/15/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Valida se todos os campos da rotina automatica de adianta   º±±
±±º          ³mento                                                       º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function VlAdtCpo(aAdtPC)
Local lRet := .T.
Local aCpo := {}
Local nX   := 0
Local nPos := 0           
Local nY   := 0
Local cCpoAdt := ""

aAdd(aCpo,"FIE_FILIAL")
aAdd(aCpo,"FIE_PREFIX")
aAdd(aCpo,"FIE_NUM")
aAdd(aCpo,"FIE_PARCEL")
aAdd(aCpo,"FIE_TIPO")
aAdd(aCpo,"FIE_VALOR")
aAdd(aCpo,"FIE_CART")
aAdd(aCpo,"FIE_CLIENT")
aAdd(aCpo,"FIE_LOJA")

For nX := 1 to Len(aAdtPC)
	For nY := 1 to Len(aCpo)
		nPos := AScan(aAdtPC[nX], { |x| Alltrim(x[1]) == aCpo[nY]} )
		If nPos == 0
			lRet := .F.
			cCpoAdt += aCpo[nY] + " "
		EndIf	
	Next
	If !lRet
		Exit
	EndIf
Next nX

If !lRet 
	Help(" ",1,"A410CPOSADT",,"CAMPOS"+" [ "+cCpoAdt+" ] "+"NAO INFORMADO NA ESTRUTURA!")
EndIf

Return lRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ lCkAdtFR3   ³ Autor ³ Totvs                 ³Data ³ 27/10/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Verifica se houve efetivacao do relacionamento com FIE apos  ³±±
±±³			 ³ emissao da nota fiscal                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³0 - Nenhuma efetivacao                                        ³±±
±±³          ³1 - Foi encontrado efetivacao                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/  
Static Function lCkAdtFR3( cNumPed, nAutoAdt )
Local aAreaFR3	:= {}
Local nRet 		:= 0

If AliasInDic( "FR3" )
	aAreaFR3	:= FR3->( GetArea() )
	SIX->(dbSetOrder(1))
	If SIX->(MsSeek("FR34"))
		FR3->( DbsetOrder( 4 ) )
		If FR3->( DbSeek( xFilial( "FR3" ) + "R" + cNumPed ) )
			nRet := 1
		EndIf
	EndIf
	RestArea( aAreaFR3 )
EndIf

Return nRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ A410CtEmpBN ³ Autor ³ Emerson Rony Oliveira ³Data ³ 22/12/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Verifica qual e o metodo utilizado para envio de materiais do³±±
±±³			 ³ tipo BN para beneficiamento.                                 ³±±
±±³          ³ Caso a entidade SGO exista no dicionario, sera adotado o novo³±±
±±³          ³ metodo para controle atraves de envios parciais.             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ Nenhum                                                       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³0 - Nenhuma forma de controle esta ativada.                   ³±±
±±³          ³1 - Esta sendo utilizado o metodo antigo de controle, ou seja,³±±
±±³          ³    apenas um envio por SD4.                                  ³±±
±±³          ³2 - Esta sendo utilizado o novo metodo de controle, ou seja,  ³±±
±±³          ³    sera possivel realizar envios parciais.                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ MATA410, MATA103                                             ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/  
Function A410CtEmpBN()
Local lEmpBN := SuperGetMV("MV_EMPBN",.F.,.F.)
Local nRet   := 0

If lEmpBN
	If AliasInDic('SGO') // metodo novo
		nRet := 2
	ElseIf SD4->(FieldPos("D4_NUMPVBN")) > 0 // metodo antigo
		nRet := 1
	EndIf
Else
	nRet := 0 // Nao controla envios para beneficiamento
EndIf

Return nRet


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Funcao    ³ A410QtEnBN  ³ Autor ³ Emerson Rony Oliveira ³Data ³ 22/12/10 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descricao ³ Funcao que retorna a quantidade ja enviada com base nos      ³±±
±±³			 ³ empenhos ja realizados na tabela SGO.                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cOP      - Numero da OP                                      ³±±
±±³          ³ cProduto - Codigo do produto                                 ³±±
±±³          ³ cLocal   - Codigo do armazem                                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³nRet - Quantidade na 1a. e 2a. UM ja enviada.                 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso		 ³ MATA410                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/  
Static Function A410QtEnBN(cOP, cProduto, cLocal)
Local aRet     := {}
Local cSeek    := ""
Local nQtdEnv  := 0
Local nQtdEnv2 := 0
Local aArea    := GetArea()

dbSelectArea('SGO')
dbSetOrder(1) // GO_FILIAL+GO_OP+GO_COD+GO_LOCAL
dbSeek(cSeek := xFilial('SD4')+cOP+cProduto+cLocal)
Do While !Eof() .And. cSeek == GO_FILIAL+GO_OP+GO_COD+GO_LOCAL
	nQtdEnv  += GO_QUANT
	nQtdEnv2 += GO_QTSEGUM
	dbSkip()
EndDo
aAdd(aRet, nQtdEnv)
aAdd(aRet, nQtdEnv2)

RestArea(aArea)
Return aRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a410RatAutºAutor  ³Microsiga           º Data ³  06/11/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                         º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function a410RatAut(aRateioPC) 

Local nPosCC	:= 0
Local nPosPerc	:= 0
Local nPosConta	:= 0
Local nPosItem	:= 0
Local nPosClVl	:= 0
Local nTam1		:= 0
Local nTam2		:= 0
Local nTotal	:= 0
Local nX		:= 0
Local nY		:= 0

Local cCCusto		:= ""
Local cConta		:= ""
Local cItem	    	:= ""
Local cClVl  		:= ""
Local cTodosCCusto	:= ""
Local lNaoAchouCCusto:= .F.
Local lError100Perc	:=  .F.
Local lDuploCCusto  :=  .F.
Local lContinua		:=  .T.
Local lErrorConta   :=  .F.
Local lErrorItem    :=  .F.
Local lErrorClVl    :=  .F.

Default aRateioPC	:=  {}

/*/
If (Type("l410Auto") <> 'U' .And. l410Auto)
Endif
/*/

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ No modo Automatico checa Rateio e Adiantamento                       ³
//³    1 - A soma dos percentuais de rateios dos C.Custo eh igual a 100% ³
//³    2 - Cada C.Custo rateado existe na tabela SCC                     ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ	

//Rateio por Centro de Custo

If len(aRateioPC) > 0
	 // vetor aRatCTBPC
	// cada elemento possui um vetor de 2 elementos
	//   elemento 1 - Nro do item do pedido de compra
	//   elemento 2 - vetor contendo todos os campos de cada rateio
	 //
	 // 1o elemento 
	 // 1o elemento, 2O elemento { '01', VETOR }
	 //              (1o elemento RATEIO1, 2o elemento RATEIO 2, 3o elemento RATEIO 3) VETOR DE RATEIOS
	 //              (1o elemento CAMPO1, 2o elemento CAMPO2, 30 elemento CAMPO3, N elemento CAMPO N) VETOR DE CAMPOS
	//              (1o elemento Nome Campo, 2 elemento CONTEUDO, 3 elemento .T.)  VETOR DE 3 ELEMENTOS
	//

	//Ache a posicao do vetor contendo o nome do campo = "CH_PERC" no 1o elemento [1][2][1] / Pedido de Venda
	nPosPerc  		:= AScan(aRateioPC[1][2][1], { |x| Alltrim(x[1]) =="AGG_PERC"} )
	nPosCC			:= AScan(aRateioPC[1][2][1], { |x| Alltrim(x[1]) =="AGG_CC"  } )
	nPosConta		:= AScan(aRateioPC[1][2][1], { |x| Alltrim(x[1]) =="AGG_CONTA"  } )
	nPosItem		:= AScan(aRateioPC[1][2][1], { |x| Alltrim(x[1]) =="AGG_ITEMCT"  } )
	nPosClVl		:= AScan(aRateioPC[1][2][1], { |x| Alltrim(x[1]) =="AGG_CLVL"  } )

	lNaoAchouCCusto := .F.  // 1- Tratamento Centro de Custo nao cadastrado
	lError100Perc   := .F.  // 2- Tratamento Soma dos percentuais diferente de 100%
	LErrorDados		:= .F.	//  - Erro identificado  
	lErrorConta     := .F.  // Conta Contábil não existe
	lErrorItem    	:= .F.  // Item Contábil não existe
	lErrorClVl    	:= .F.  // Classe de Valor não existe

	If nPosPerc > 0 .And. nPosCC > 0

		dbSelectArea("CTT")
		dbSetOrder(1)

		nTam1		:= Len(aRatCTBPC)
		For nX := 1 To nTam1

			cTodosCCusto:= '/'

			nTotal := 0
			nTam2  := Len( aRateioPC[nX][2] )
			For nY := 1 to nTam2

				//Soma de percentuais
				nTotal  += aRateioPC[nX][2][nY][nPosPerc][2]
					cCCusto := aRateioPC[nX][2][nY][nPosCC  ][2]
				cConta  := aRateioPC[nX][2][nY][nPosConta][2]
				cItem   := aRateioPC[nX][2][nY][nPosItem][2]
				cClVl   := aRateioPC[nX][2][nY][nPosClVl][2]
				
				If !Empty(cCCusto)
					If (lNaoAchouCCusto := !MsSeek(xFilial("CTT") + cCCusto) )
						lErrorDados := .T.
						Exit
					Endif
					cTodosCCusto += cCCusto + '/'
				Endif	
						
				If !Empty(cConta) .And. !(Ctb105Cta(cConta))
					lErrorConta := .T.
					Exit
				Endif			
				If !Empty(cItem) .And. !(Ctb105Item(cItem))
					lErrorItem := .T.
					Exit
				Endif
				If !Empty(cClVl) .And. !(Ctb105ClVl(cClVl))
					lErrorClVl := .T.
					Exit
				Endif
				
			Next

			If lErrorDados
				Exit
			Else
			
				 If nTotal > 0 .And. nTotal <> 100
					lError100Perc := .T.
					Exit
				Endif
			Endif
		Next
	Endif
	 
	 //Inconsistencias - Observacao
	 //Se o CCusto nao for encontrado, a soma do percental eh descontinuada
	//
	Do case
		case nPosPerc = 0  .Or. nPosCC = 0
			Help(' ',1,'Erro na estrutura do vetor de rateio. Procura nao encontrada!')
			lContinua := .F.
		case lNaoAchouCCusto
			Help(' ',1,'Codigo Centro Custo inexistente.')
			lContinua := .F.
		case lError100Perc
			Help(' ',1,'A103TOTRAT')
			lContinua := .F.
		case lErrorConta
			Help(' ',1,'NOCONTAC')
			lContinua := .F.
		case lErrorItem
			Help(' ',1,'NOITEM')
			lContinua := .F.
		case lErrorClVl
			Help(' ',1,'NOCLVL')
			lContinua := .F.
	Endcase
Endif
Return lContinua

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410InGrdMºAutor  ³Andre Anjos		 º Data ³  21/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Funcao para inicialiar a grade multicampo				  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A410InGrdM(lEdit)
Local nPQTDVEN := 0
Local nPPRCVEN := 0
Local lGrdMult  := FindFunction("MATGRADE_V") .And. MATGRADE_V() >= 20110425 .And. "MATA410" $ SuperGetMV("MV_GRDMULT",.F.,"")

Default lEdit := .F.

If lGrdMult
	aAdd(oGrade:aCposCtrlGrd,{"C6_PRCVEN",.F.,{},{},.T.})
	aAdd(oGrade:aCposCtrlGrd,{"C6_VALOR",.F.,{},{},.F.})
	aAdd(oGrade:aCposCtrlGrd,{"C6_VALDESC",.F.,{},{},.F.})
	aAdd(oGrade:aCposCtrlGrd,{"C6_DESCRI",.F.,{},{},.F.})
	aAdd(oGrade:aCposCtrlGrd,{"C6_PRUNIT",.F.,{},{},.F.})
	
	If lEdit
		nPQTDVEN := aScan(oGrade:aCposCtrlGrd, {|x| x[1] == "C6_QTDVEN"})
		nPPRCVEN := aScan(oGrade:aCposCtrlGrd, {|x| x[1] == "C6_PRCVEN"})
		
		If Len(oGrade:aCposCtrlGrd[nPQTDVEN]) == 3
			aAdd(oGrade:aCposCtrlGrd[nPQTDVEN],{ }) //Array de gatilhos
			aAdd(oGrade:aCposCtrlGrd[nPQTDVEN],.T.) //Flag de obrigatoriedade		
		EndIf
		
		//-- Campos a atualizar ao confirmar a tela da grade
		aAdd(oGrade:aCposCtrlGrd[nPQTDVEN,3],{"C6_DESCRI",{|| Posicione("SB1",1,xFilial("SB1")+oGrade:GetNameProd(,nLinha,nColuna),"B1_DESC")}})
		
		//-- Campos a atualizar na grade multicampo
		aAdd(oGrade:aCposCtrlGrd[nPQTDVEN,4],{"C6_PRCVEN",{|| A410GrInPr(nLinha,nColuna) }})
		aAdd(oGrade:aCposCtrlGrd[nPQTDVEN,4],{"C6_VALDESC",{|| A410GrInDs(nLinha,nColuna) }})
		aAdd(oGrade:aCposCtrlGrd[nPQTDVEN,4],{"C6_VALOR",{|| A410Arred(&(ReadVar()) * oGrade:GetFieldMC("C6_PRCVEN"),"C6_VALOR")}})
		aAdd(oGrade:aCposCtrlGrd[nPPRCVEN,4],{"C6_VALOR",{|| A410Arred(&(ReadVar()) * oGrade:GetFieldMC("C6_QTDVEN"),"C6_VALOR")}})
	EndIf
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410GrInPrºAutor  ³Andre Anjos		 º Data ³  27/01/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Funcao para inicializacao do preco unitario na grade multi-º±±
±±º          ³ campo                                                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410													  º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A410GrInPr(nLin,nCol)
Local nRet      := 0
Local nPValDesc := aScan(oGrade:aHeadAux,{|x| AllTrim(x[2]) == "C6_VALDESC"})
Local nPPerDesc := aScan(oGrade:aHeadAux,{|x| AllTrim(x[2]) == "C6_DESCONT"})

If !Empty(&(ReadVar()))
	If Empty(oGrade:aColsAux[oGrade:nPosLinO,nPValDesc])//-- Se preencheu a quantidade e não tem desconto no item do PV
		If Empty(oGrade:aColsFieldByName("C6_PRCVEN",,nLin,nCol,.T.)) //-- Se nao foi digitado preco
			nRet := A410InPrcV(oGrade:GetNameProd(,nLin,nCol),oGrade:nPosLinO,oGrade:aColsFieldByName("C6_QTDVEN",,nLin,nCol))
		Else
			nRet := oGrade:aColsFieldByName("C6_PRCVEN",,nLin,nCol,.T.)
		EndIf
		nRet += A410Tabela(,,,,,,,,.T.,,,oGrade:aColsGrade[oGrade:nPosLinO,nLin,nCol,oGrade:GetFieldGrdPos("C6_OPC")]) //Chamada somente para somar preco dos opcionais
	Else
		If Empty(nRet := oGrade:aColsFieldByName("C6_PRCVEN",,nLin,nCol,.T.))
			nRet := oGrade:aColsFieldByName("C6_PRUNIT",,nLin,nCol,.T.) * (1 - (oGrade:aColsAux[oGrade:nPosLinO,nPPerDesc] / 100))
		EndIf
	EndIf
EndIf

Return nRet

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410InPrcVºAutor  ³ Andre Anjos		 º Data ³  03/02/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Funcao que inicializa o preco de venda quando digitada     º±±
±±º          ³ quantidade na grade multicampo.                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410InPrcV(cProduto,nLinGetD,nQtd)
Local nPreco   := 0
Local cCliente := M->C5_CLIENTE
Local cLojaCli := If(Empty(M->C5_LOJAENT),M->C5_LOJACLI,M->C5_LOJAENT)
Local nColuna  := aScan(oGrade:aHeadGrade[nLinGetD],{|x| ValType(x) # "C" .And. AllTrim(x[2]) == StrTran(ReadVar(),"M->","")})
Local nPDESCON := aScan(oGrade:aHeadAux,{|x| AllTrim(x[2]) == "C6_DESCONT"})
Local nPGRDVAL := oGrade:GetFieldGrdPos("C6_VALOR")
Local nPGRDVDE := oGrade:GetFieldGrdPos("C6_VALDESC")
Local nPGRDPRU := oGrade:GetFieldGrdPos("C6_PRUNIT")
Local lPrcDec  := SuperGetMV("MV_PRCDEC",,.F.)

If &(ReadVar()) > 0
	//-- Toma como base o preco de tabela
	nPreco := A410Tabela(cProduto,M->C5_TABELA,nLinGetD,nQtd,cCliente,cLojaCli,,,,,.T.)
	oGrade:aColsGrade[nLinGetD,n,nColuna,nPGRDPRU] := nPreco
	
	//-- Aplica descontos do cabecalho
	nPreco := FtDescCab(nPreco,{M->C5_DESC1,M->C5_DESC2,M->C5_DESC3,M->C5_DESC4},If(cPaisLoc=="CHI".And.lPrcDec,M->C5_MOEDA,NIL))
	
	//Aplica desconto do item
	nPreco := FtDescItem(0,@nPreco,nQtd,@oGrade:aColsGrade[nLinGetD,n,nColuna,nPGRDVAL],@oGrade:aColsAux[nLinGetD,nPDESCON],@oGrade:aColsGrade[nLinGetD,n,nColuna,nPGRDVDE],0,1,nQtd,If(cPaisLoc=="CHI" .And. lPrcDec,M->C5_MOEDA,NIL))	
Else
	oGrade:aColsGrade[nLinGetD,n,nColuna,nPGRDPRU] := 0
EndIf

Return nPreco

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MATA410_V ºAutor  ³Andre Anjos         º Data ³  03/05/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±³Descri‡…o ³ Funcao utilizada para verificar a ultima versao do fonte   ³±±
±±³			 ³ MATA410.PRW aplicado no rpo do cliente, assim verificando  ³±±
±±³			 ³ a necessidade de uma atualizacao neste fonte.              ³±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ FATURAMENTO                    	                          º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MATA410_V()
Return 20110131
/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³a410FrPIte³ Autor ³ Vendas e eCRM         ³ Data ³10/01/2011 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Funcao de Calculo da Frete Pauta no item de acordo com TES.  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1: Campo posicionado                                     ³±±
±±³          ³ExpC2: Valor informado no campo                              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³Nenhum                                                       ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³Esta funcao efetua o calculo do frete pauta.                 ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³SIGAFAT                                                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Function a410FrPIte(cCampo,cConteudo)

Local aArea    := GetArea()
Local lRetorno := .T.
Local nY       := 0
Local nValBase := 0    
Local nPosPro  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPosTES  := aScan(aHeader,{|x| AllTrim(x[2])=="C6_TES"})
Local cCargaE  := "2"
Local cProduto := ""
Local cTES	   := ""

Default cCampo := ReadVar()
Default cConteudo := &(cCampo)

If M->C5_KM > 0 .And. !Empty(aFreteP)
	cProduto := IIf ("C6_PRODUTO" $ cCampo ,cConteudo,aCols[n][nPosPro])
	cTES	 := IIf ("C6_TES" $ cCampo,cConteudo,aCols[n][nPosTES])
	cCargaE := Iif(SB1->(FieldPos("B1_CARGAE")) > 0,Posicione("SB1",1,xFilial("SB1")+cProduto,"B1_CARGAE"),cCargaE)
	
	nValBase := M->C5_VLR_FRT 
																			
	If !Empty(cTES)
			dbSelectArea("SF4")
		dbSetOrder(1)
		dbSeek(xFilial("SF4")+cTES)             			

		For nY := 1 To Len(aFreteP)
			If aFreteP[nY][1] >= M->C5_KM
				Do Case
					Case (SF4->F4_CRDPRES > 0 .And. aFreteP[nY][5] == "1" .And. aFreteP[nY][7] <> "1" .And. cCargaE <> "1")
						nValBase := aFreteP[nY][3]
						Case (SF4->F4_CRDPRES > 0 .And. aFreteP[nY][5] == "1" .And. aFreteP[nY][7] == "1" .And. cCargaE == "1")
						nValBase := aFreteP[nY][3]
					Case (SF4->F4_BASEICM > 0 .And. aFreteP[nY][5] == "1" .And. aFreteP[nY][6] == SF4->F4_BASEICM )
						nValBase := aFreteP[nY][3]
						Case (aFreteP[nY][5] <> "1" .And. SF4->F4_CRDPRES==0 .And. SF4->F4_BASEICM==0)
							nValBase := aFreteP[nY][3]			   		
					EndCase
			Endif	
		 
			If nValBase <> M->C5_VLR_FRT
					Do Case
						Case aFreteP[nY][4] == "1"
							M->C5_VLR_FRT := NoRound((M->C5_PBRUTO/1000)*nValBase,TamSX3("C5_VLR_FRT")[2])
							Exit
						Case aFreteP[nY][4] == "2"
							M->C5_VLR_FRT := NoRound((M->C5_PBRUTO*nValBase),TamSX3("C5_VLR_FRT")[2])
							 Exit
						Case aFreteP[nY][4] == "3"
							M->C5_VLR_FRT := NoRound(nValBase,TamSX3("C5_VLR_FRT")[2])
							  Exit
					EndCase       
			EndIf 				
		 Next nY		
	Endif    
	
	If oGetPV <> Nil
		oGetPV:Refresh()
	Endif	
EndIf  

RestArea(aArea)

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºMetodo    ³ A410SelIt   ºAutor  ³ Vendas Clientes º Data ³  04/05/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Marca e desmarca as notas de retorno de Doctos. de		  º±±
±±º          ³ Entrada.                                                   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A410SelIt(nAT,aSF1,cFornece,cLoja,nPosDoc,nPosSerie)
Local aAreaSF1    := SF1->(GetArea())

dbSelectArea("SF1")
SF1->(dbSetOrder(2))
If SF1->(dbSeek(xFilial("SF1")+cFornece+cLoja+aSF1[nAT,nPosDoc]+aSF1[nAT,nPosSerie]))
	If aSF1[nAT,1] == oNoMarked
		//Faz o bloqueio do registro que será processado.
		If SF1->(SimpleLock())
			aSF1[nAT,1] := oMarked
		Else
			Aviso(OemToAnsi(STR0014),STR0176,{"OK"})	//"Aten‡„o"###"Esta Nota Fiscal está sendo utilizada por outro usuário e não poderá ser selecionada."
			SF1->(RestArea(aAreaSF1))
		EndIf
	ElseIf aSF1[nAT,1] == oMarked
		 //Faz o desbloqueio do registro que foi bloqueado pelo SimpleLock().
		SF1->(RecLock("SF1"))
		SF1->(MsUnlock())	
		aSF1[nAT,1] := oNoMarked
	EndIf
EndIf

Return


/*/
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³a410VldAnt³ Autor ³ Vendas e eCRM         ³ Data ³10/01/2011 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³          ³Funcao para validacao Antes de Vincular Adiantamentos.       ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Retorno   ³ Logico - .T. ok .F. nao ok                                  ³±±
±±³          ³                                                             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³SIGAFAT - Pedido de Venda                                    ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/             
Function a410VldAnt()
	Local lRet := .T.
	/* -- Localizacao Mexico
	Qdo Natureza é uma Operação de Adiantamento (NF de Anticipo) nao permite condicao de Pagamento que compensa títulos de Adiantamento (RA). 
	Logo:
	NF de Adiantamento: Natureza Oper. Adiantamento = SIM e Cond. Pag. Usa Adiant. = NÃO
	NF Normal compensando títulos de adiantamento: Natureza Oper. Adiantamento = NAO e Cond. Pag. Compensa Adiant. = SIM
	*/
	If cPaisLoc $ "MEX|PER" //jgr
		If Empty(M->C5_NATUREZ)
			MsgAlert(STR0179) //"Para relacionar adiantamentos é necessário preencher a natureza"
			lRet := .F.
		EndIf				
		If a410NatAdi(M->C5_NATUREZ) .AND. A410UsaAdi(M->C5_CONDPAG)
			MsgAlert(STR0180) //"Quando a natureza for uma operacao de adiantamento não é permitido compensar titulos. A condição de pagamento não deve permitir compensar. Verifique."		
			lRet := .F.
		EndIf
	EndIf    	    
Return lRet 

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Ma410PerAutºAutor  ³Alvaro Camillo Neto º Data ³  07/22/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Carrega as variaveis com os parametros da execauto          º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ AP                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function Ma410PerAut()
Local nX 		:= 0
Local cVarParam := ""

If Type("aParamAuto") == "A"
	For nX := 1 to Len(aParamAuto)
		cVarParam := Alltrim(Upper(aParamAuto[nX][1]))
		If "MV_PAR" $ cVarParam
			&(cVarParam) := aParamAuto[nX][2]
		EndIf
	Next nX
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³F4Veicu	³ Autor ³ Vitor Felipe			³ Data ³ 24/05/11 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³Pesquisa de notas Originais Veiculos Usados.                ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ Parametros: 												  ³±±
±±³          ³ nOPc = Numerico - Opcao Focus.							  ³±±
±±³			 ³ cProduto = String - Codigo do Produto.					  ³±±
±±³			 ³ cChassi= String - Chassis do Veiculo.					  ³±±
±±³			 ³ Retorno: Base para impostos da nota de entrada			  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Pedido de Venda para veiculos Usados.                      ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function F4Veicu(nOpc,cProduto,cChassi,aCols,N)

Local nBase		:= 0
Local cAliasSD1	:= GetNextAlias()   
Local aArrayF4[0] 
Local lQuery	:= .F.
Local aObjects	:= {}
Local aInfo   	:= {}
Local aPosObj 	:= {}
Local aSize     := MsAdvSize( .F. )
Local cTexto1   := ""
Local cTexto2   := ""
Local cCadastro := ""
Local nOAT      := 0
Local nOpca     := 0
Local oDlg
Local oQual
Local nPVeic	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_BASVEIC"})
Local nPNFOri 	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_NFORI"})
Local nPSerie	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_SERIORI"})
Local nPItem	:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_ITEMORI"})


Default cProduto:= ""
Default cChassi := ""
Default aCols	:= {}
Default N		:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ Atualizacao do arquivo temporario com base nos itens do SD1         ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
DbSelectArea("SIX")
DbSetOrder(1)
If !DbSeek("SD1" + "12")
	Return
EndIf

dbSelectArea("SD1")
dbSetOrder(12)

#IFDEF TOP
		lQuery := .T.
		
		BeginSql Alias cAliasSD1
		SELECT 
			SD1.D1_FILIAL,SD1.D1_COD,SD1.D1_ITEM,SD1.D1_CHASSI,SD1.D1_VUNIT,SD1.D1_TOTAL,SD1.D1_DOC,SD1.D1_SERIE,SD1.D1_FORNECE,SD1.D1_LOJA,SD1.D1_CUSTO,;
			SD1.D1_EMISSAO
		FROM
			%table:SD1% SD1
		WHERE 
			SD1.D1_FILIAL=%xFilial:SD1% AND 
			SD1.D1_COD=%Exp:cProduto% AND 
			SD1.D1_CHASSI=%Exp:cChassi% AND 			
			SD1.%NotDel%
		ORDER BY 
			SD1.D1_FILIAL,SD1.D1_DOC,SD1.D1_SERIE,SD1.D1_FORNECE, SD1.D1_LOJA, SD1.D1_COD, SD1.D1_ITEM
		EndSql    	
		  
#ELSE
	MsSeek(xFilial("SD1")+cProduto+cChassi,.F.)
#ENDIF
			
While (cAliasSD1)->(!Eof())
	Aadd(aArrayF4,{(cAliasSD1)->D1_FILIAL,;
				(cAliasSD1)->D1_DOC,;
				(cAliasSD1)->D1_SERIE,;
				(cAliasSD1)->D1_FORNECE,;
				(cAliasSD1)->D1_LOJA,;
				(cAliasSD1)->D1_COD,;
				(cAliasSD1)->D1_ITEM,;
				(cAliasSD1)->D1_VUNIT,;
				(cAliasSD1)->D1_TOTAL,;
				STOD((cAliasSD1)->D1_EMISSAO),;
				(cAliasSD1)->D1_CUSTO})
	(cAliasSD1)->(dbSkip())
EndDo

If lQuery
	dbSelectArea(cAliasSD1)
	dbCloseArea()
	dbSelectArea("SD1")
EndIf			

If Len(aArrayF4) > 0

	aSize[1] /= 1.5
	aSize[2] /= 1.5
	aSize[3] /= 1.5
	aSize[4] /= 1.3
	aSize[5] /= 1.5
	aSize[6] /= 1.3
	aSize[7] /= 1.5
	
	AAdd( aObjects, { 100, 020,.T.,.F.,.T.} )
	AAdd( aObjects, { 100, 060,.T.,.T.,.T.} )
	AAdd( aObjects, { 100, 020,.T.,.F.} )
	aInfo   := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ], aSize[ 4 ], 3, 3 }
	aPosObj := MsObjSize( aInfo, aObjects,.T.)


	cCadastro:= OemToAnsi("Notas Fiscais de Origem")+"-"+OemToAnsi("Veiculos") 	//"Notas Fiscais de Origem"
	nOpca := 0
	
	DEFINE MSDIALOG oDlg TITLE cCadastro From aSize[7],000 To aSize[6],aSize[5] OF oMainWnd PIXEL
	
	@ aPosObj[1,1],aPosObj[1,2] MSPANEL oPanel PROMPT "" SIZE aPosObj[1,3],aPosObj[1,4] OF oDlg CENTERED LOWERED
	 
	cTexto1 := AllTrim(RetTitle("F1_FORNECE"))+"/"+AllTrim(RetTitle("F1_LOJA"))+": "+SA2->A2_COD+"/"+SA2->A2_LOJA+"  -  "+RetTitle("A2_NOME")+": "+SA2->A2_NOME

	@ 002,005 SAY cTexto1 SIZE aPosObj[1,3],008 OF oPanel PIXEL
	cTexto2 := AllTrim(RetTitle("B1_COD"))+": "+SB1->B1_COD+"/"+SB1->B1_DESC
	@ 012,005 SAY cTexto2 SIZE aPosObj[1,3],008 OF oPanel PIXEL	
	
	@ aPosObj[2,1],aPosObj[2,2] LISTBOX oQual VAR cVar Fields HEADER OemToAnsi("Filial"),OemToAnsi("Nota Fiscal"),OemToAnsi("Serie"),OemToAnsi("Fornecedor"),OemToAnsi("Loja"),OemToAnsi("Cod. Produto"),OemToAnsi("Valor Original"),OemToAnsi("Data Emissao") SIZE aPosObj[2,3],aPosObj[2,4] ON DBLCLICK (nOpca := 1,oDlg:End()) PIXEL	//"Nota"###"S‚rie"###"Item"###"Valor Item"###"Valor IPI"
	oQual:SetArray(aArrayF4)
	oQual:bLine := { || {aArrayF4[oQual:nAT][1],aArrayF4[oQual:nAT][2],aArrayF4[oQual:nAT][3],aArrayF4[oQual:nAT][4],aArrayF4[oQual:nAT][5],aArrayF4[oQual:nAT][6],aArrayF4[oQual:nAT][11],DTOC(aArrayF4[oQual:nAT][10])}}
	
	DEFINE SBUTTON FROM aPosObj[3,1]+000,aPosObj[3,4]-030  TYPE 1 ACTION (nOpca := 1,oDlg:End()) 	ENABLE OF oDlg PIXEL
	DEFINE SBUTTON FROM aPosObj[3,1]+012,aPosObj[3,4]-030 TYPE 2 ACTION oDlg:End() 					ENABLE OF oDlg PIXEL
	
	ACTIVATE MSDIALOG oDlg VALID (nOAT := oQual:nAT, .t.) CENTERED

	If nOpca == 1
		 aCols[N][nPVeic] :=  IIf(nPVeic > 0 , aArrayF4[nOAT][11] , 0 ) 
		 aCols[N][nPNFOri]:= aArrayF4[nOAT][2]
		 aCols[N][nPSerie]:= aArrayF4[nOAT][3]
		 aCols[N][nPItem] := aArrayF4[nOAT][7]
	 Else
		Return(0)
	Endif

Else
	HELP(" ",1,"F4NAONOTA")
Endif

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºFunção    ³A410Check ºAutor  ³Vendas e CRM        º Data ³  14/09/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Verifica se possui alguma seleção de NF                     º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410Check(aSF1)
Local lReturn 	:= .F.
Local nCnt		:= 0

For nCnt := 1 To Len(aSF1)
	If aSF1[nCnt,1] == oMarked
		lReturn := .T.
		Exit
	EndIf
Next nCnt

Return lReturn

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410BlqRegºAutor  ³ Vendas e CRM       º Data ³  27/12/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Avalia e mostra motivo de bloqueio por regra no pedido      º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function A410BlqReg()

Local aAreaSC5 	:= SC5->(GetArea())
Local aAreaSC6 	:= SC6->(GetArea())
Local nContI   	:= 0				//contador para percorrer os itens do pedido(aCols)
Local nDescon	:= 0 				//auxiliar para guardar o desconto aplicado
Local aProdDesc := {}				//itens do pedido
Local cRegraBlq := ""				//regra que bloqueou o pedido
Local cItemBlq	:= ""				//item da regra que bloqueou o pedido
Local cAba		:= ""				//aba da regra que bloqueou o pedido
Local aColsAnt	:= {}				//guarda a aCols para restaurar no fim do processo  
Local aHeaderAnt:= {}				//guarda a aHeader para restaurar no fim do processo
Local nElemAnt	:= 0				//guarda a posicao da aCols para restaurar no fim do processo
Local nCodPro 	:= aScan(aHeader,{|x| Alltrim(x[2])== "C6_PRODUTO"})  
Local nItemPV 	:= aScan(aHeader,{|x| Alltrim(x[2])== "C6_ITEM"})  
Local nPrecoVnd := aScan(aHeader,{|x| Alltrim(x[2])== "C6_PRCVEN"}) 
Local nPrecoList:= aScan(aHeader,{|x| Alltrim(x[2])== "C6_PRUNIT"})  
Local nDesconto := aScan(aHeader,{|x| Alltrim(x[2])== "C6_DESCONT"})   

aColsAnt   := aClone(Acols)
aHeaderAnt := aClone(aHeader)

If Type("n") !=  'U'
	nElemAnt := n
EndIf
	
For nContI := 1 To Len(aCols)

	If ( aCols[nContI][nDesconto] == 0 .Or. ((M->C5_DESC1+M->C5_DESC2+M->C5_DESC3+M->C5_DESC4) <> 0) ) .And. aCols[nContI][nPrecoVnd] < aCols[nContI][nPrecoList]
		nDescon := (100 - (aCols[nContI][nPrecoVnd] / aCols[nContI][nPrecoList]) * 100)
	Else
		nDescon := aCols[nContI][nDesconto]
	EndIf

	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³       Estrutura do array aProdDesc                                          ³			
	//³       [1] - Codigo do Produto                                               ³
	//³       [2] - Item do Pedido de Venda                                         ³
	//³       [3] - Preco de Venda                                                  ³
	//³       [4] - Preco de Lista                                                  ³						
	//³       [5] - % do Desconto Concedido no item do pedido                       ³
	//³       [6] - % do Desconto Permitido pela regra (FtRegraNeg)                 ³
	//³       [7] - Indica se sera necessario verificar o saldo de verba            ³
	//³                             01 - Bloqueio de regra de negocio               ³
	//³                             02 - Bloqueio para verificacao de verba         ³
	//³       [8] - Valor a ser abatido da verba caso seja aprovada (FtVerbaVen)    ³			
	//³       [9] - Flag que indica se o item sera analisado nas regras             ³							
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	Aadd(aProdDesc, {aCols[nContI][nCodPro], aCols[nContI][nItemPV], aCols[nContI][nPrecoVnd], aCols[nContI][nPrecoList],;
		nDescon, 0, "", 0, .T.})
					
Next nContI

//avalia se existe bloqueio de regra
FtRegraNeg(M->C5_CLIENTE, M->C5_LOJACLI, M->C5_TABELA, M->C5_CONDPAG, NIL, @aProdDesc, .F., M->C5_VEND1, .T.)
	
SC5->(RestArea(aAreaSC5))
SC6->(RestArea(aAreaSC6))
	
aCols 	:= aClone(aColsAnt)
aHeader := aClone(aHeaderAnt)

If Type("n") !=  'U'
	n := nElemAnt
EndIf	
	
Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³BlqRegBrw ºAutor  ³Vendas e CRM        º Data ³  27/12/11   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Avalia e mostra motivo de bloqueio por regra a partir       º±±
±±º          ³de um Browser da SC5 (pedido de venda)                      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³                                                            º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function BlqRegBrw()

Local aArea 	:= GetArea()
Local aAreaSC6 	:= SC6->(GetArea())
Local aAreaSC5	:= SC5->(GetArea())
Local aProdDesc := {}  //array com os itens do pedido para avaliar regra de negocio
Local nDescon	:= 0

//busca os itens do pedido selecionado no Browser
DbSelectArea("SC6")
DbSetOrder(1)

If MsSeek(xFilial("SC6")+SC5->C5_NUM)
	//Monta um array com os itens do pedido para passar pra funcao que avalia as regras de negocio
	While ( (!SC6->(EOF()) ) .AND.( SC6->(C6_FILIAL+C6_NUM) == xFilial("SC6")+SC5->C5_NUM ) )

		If ( SC6->C6_DESCONT == 0 .Or. ((SC5->C5_DESC1+SC5->C5_DESC2+SC5->C5_DESC3+SC5->C5_DESC4) <> 0) ) .And. SC6->C6_PRCVEN < SC6->C6_PRUNIT
			nDescon := (100 - (SC6->C6_PRCVEN / SC6->C6_PRUNIT) * 100)
		Else
			nDescon := SC6->C6_DESCONT
		EndIf  
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³       Estrutura do array aProdDesc                                          ³			
		//³       [1] - Codigo do Produto                                               ³
		//³       [2] - Item do Pedido de Venda                                         ³
		//³       [3] - Preco de Venda                                                  ³
		//³       [4] - Preco de Lista                                                  ³						
		//³       [5] - % do Desconto Concedido no item do pedido                       ³
		//³       [6] - % do Desconto Permitido pela regra (FtRegraNeg)                 ³
		//³       [7] - Indica se sera necessario verificar o saldo de verba            ³
		//³                             01 - Bloqueio de regra de negocio               ³
		//³                             02 - Bloqueio para verificacao de verba         ³
		//³       [8] - Valor a ser abatido da verba caso seja aprovada (FtVerbaVen)    ³			
		//³       [9] - Flag que indica se o item sera analisado nas regras             ³							
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ				
		Aadd(aProdDesc, {SC6->C6_PRODUTO, SC6->C6_ITEM, SC6->C6_PRCVEN, SC6->C6_PRUNIT,	nDescon, 0, "", 0,.T.})
		
		SC6->(DbSkip())

	End
EndIf

//avalia se existe bloqueio de regra
FtRegraNeg(SC5->C5_CLIENTE, SC5->C5_LOJACLI, SC5->C5_TABELA	, SC5->C5_CONDPAG, NIL, @aProdDesc, .F., SC5->C5_VEND1, .T., .T.)

SC6->(RestArea(aAreaSC6))
SC5->(RestArea(aAreaSC5))
RestArea(aArea)

Return

//--------------------------------------------------------------
/*/{Protheus.doc} A410SMLFRT
Simulação basica de Calculo de frete
																					 
@return xRet Return Description
@author  -                                               
@since 22/02/2012                                                   
/*/
//--------------------------------------------------------------
Static Function A410SMLFRT()
Local aArea 		:= GetArea()
Local oModelSim  	:= FWLoadModel("GFEX010")
Local oModelNeg  	:= oModelSim:GetModel("GFEX010_01")
Local oModelAgr  	:= oModelSim:GetModel("DETAIL_01")  // oModel do grid "Agrupadores"
Local oModelDC   	:= oModelSim:GetModel("DETAIL_02")  // oModel do grid "Doc Carga"
Local oModelIt   	:= oModelSim:GetModel("DETAIL_03")  // oModel do grid "Item Carga"
Local oModelTr   	:= oModelSim:GetModel("DETAIL_04")  // oModel do grid "Trechos"
Local oModelInt  	:= oModelSim:GetModel("SIMULA")     // oModel do field que dispara a simulação
Local oModelCal1 	:= oModelSim:GetModel("DETAIL_05")  // oModel do calculo do frete
Local oModelCal2 	:= oModelSim:GetModel("DETAIL_06")  // oModel das informações complemetares do calculo
Local nCont      	:= 0
Local nRegua 		:= 0                   
Local cCdClFr		:= "" //-- simulacao de frete: considerar todas a negociacoes cadastradas no GFE.
Local cTpOp			:= "" //-- simulacao de frete: considerar todas a negociacoes cadastradas no GFE.
Local cTpDoc		:= ''
Local nLenAcols		:= 0
Local nItem			:= 0
Local nPProduto		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_PRODUTO"})
Local nPQtdVen		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_QTDVEN"})
Local nPValor		:= aScan(aHeader,{|x| AllTrim(x[2])=="C6_VALOR"})
Local nX			:= 0
Local cCGCTran		:= ''                                        
Local nVlrFrt		:= 0
Local nPrevEnt		:= 0
Local aRet			:= {}
Local nNumCalc		:= 0
Local nClassFret	:= 0
Local nTipOper		:= 0
Local cTrecho		:= ""
Local cTabela		:= ""
Local cNumNegoc		:= ""
Local cRota			:= ""
Local dDatValid		:= ""
Local cFaixa		:= ""
Local cTipoVei		:= ""
Local lInclui := INCLUI
Local cCgc := ''
Local nAltura		:= 0
Local nVolume		:= 0

If !Empty(M->C5_CLIENT) .And. !Empty(M->C5_LOJAENT) .And. !Empty(aCols[n,nPProduto]) .And. !Empty(aCols[n,nPQtdVen]) .And. !Empty(aCols[n,nPValor])	

	ProcRegua(nRegua)      

	SA1->(dbSeek(xFilial("SA1")+M->C5_CLIENT+M->C5_LOJAENT))	   

	cTpDoc := AllTrim(Posicione("SX5",1,xFilial("SX5")+"MQ"+M->C5_TIPO,"X5_DESCRI"))	
		
	oModelSim:SetOperation(3) //Seta como inclusão
	oModelSim:Activate() 			
	
	oModelNeg:LoadValue('CONSNEG' ,"1" ) // -- 1=Considera Tab.Frete em Negociacao; 2=Considera apenas Tab.Frete Aprovadas
	IncProc()
	//Agrupadores - Não obrigatorio
	oModelAgr:LoadValue('GWN_CDCLFR',cCdClFr)  //classificação de frete                                 
	oModelAgr:LoadValue('GWN_CDTPOP',cTpOp)    //tipo da operação
	oModelAgr:LoadValue('GWN_DOC'   ,"ROMANEIO"     )           
	//Documento de Carga
	oModelDC:LoadValue('GW1_EMISDC', SM0->M0_CGC) 	//codigo do emitente - chave
	oModelDC:LoadValue('GW1_NRDC'  , M->C5_NUM  ) 	//numero da nota - chave
	oModelDC:LoadValue('GW1_CDTPDC', cTpDoc) 		// tipo do documento - chave
	oModelDC:LoadValue('GW1_CDREM' , IIF(MTA410ChkEmit(SM0->M0_CGC),SM0->M0_CGC, MTA410RetEmit(xFilial("SC5")) ) )  	//remetente
	oModelDC:LoadValue('GW1_CDDEST', IIF(MTA410ChkEmit(SA1->A1_CGC),SA1->A1_CGC, OMSM011COD(M->C5_CLIENT,M->C5_LOJAENT,1,,) ) )   //destinatario
	oModelDC:LoadValue('GW1_TPFRET', "1")
	oModelDC:LoadValue('GW1_ICMSDC', "2")
	oModelDC:LoadValue('GW1_USO'   , "1")
	oModelDC:LoadValue('GW1_QTUNI' , 1)   
	//Trechos
	oModelTr:LoadValue('GWU_EMISDC' ,SM0->M0_CGC)												//codigo do emitente - chave
	oModelTr:LoadValue('GWU_NRDC'   ,M->C5_NUM  ) 												//numero da nota - chave
	oModelTr:LoadValue('GWU_CDTPDC' ,cTpDoc)													// tipo do documento - chave
	oModelTr:LoadValue('GWU_SEQ'    ,"01"   )    												//sequencia - chave
	oModelTr:LoadValue('GWU_NRCIDD' ,AllTrim(TMS120CdUf(SA1->A1_EST, "1") + SA1->A1_COD_MUN))   // codigo da cidade para o calculo
	
	nLenAcols := Len(aCols)
	For nX:= 1 To nLenACols			
		If !GdDeleted(nX)
			//Itens  								
			nItem += 1
			nAltura := Posicione("SB5",1,xFilial("SB5")+aCols[nX,nPProduto],"B5_ALTURA")
			nVolume := (nAltura * SB5->B5_LARG * SB5->B5_COMPR) * aCols[nX,nPQtdVen]			
			SB1->(DbSetOrder(1))
			SB1->(dbSeek(xFilial("SB1")+aCols[nX,nPProduto ]))
			//--VERIFICAR QUESTÃO DOS PRODUTOS
			oModelIt:LoadValue('GW8_EMISDC',SM0->M0_CGC)	//codigo do emitente - chave
			oModelIt:LoadValue('GW8_NRDC'  ,M->C5_NUM  ) 	//numero da nota - chave
			oModelIt:LoadValue('GW8_CDTPDC',cTpDoc) 		// tipo do documento - chave
			oModelIt:LoadValue('GW8_ITEM'  , "ITEM"+ PADL((nItem),3,"0")  )        		//codigo do item    -
			oModelIt:LoadValue('GW8_DSITEM', "ITEM GENERICO  "	+ PADL((nItem),3,"0"))  //descrição do item -
			oModelIt:LoadValue('GW8_CDCLFR',cCdClFr)    								//classificação de frete
			oModelIt:LoadValue('GW8_VOLUME',nVolume)									//Volume
			oModelIt:LoadValue('GW8_PESOR' ,aCols[nX,nPQtdVen] * SB1->B1_PESBRU ) 		//peso real
			oModelIt:LoadValue('GW8_VALOR' ,aCols[nX,nPValor ] )     					//valor do item
			oModelIt:LoadValue('GW8_QTDE'  ,aCols[nX,nPQtdVen ] )     					//valor do item
			oModelIt:LoadValue('GW8_TRIBP' ,"1" )
			oModelIt:AddLine(.T.)
		EndIf	
	Next nX   

	// Dispara a simulação
	oModelInt:SetValue("INTEGRA" ,"A") 	 
	IncProc()
	
	//Verifica se há linhas no model do calculo, se não há linhas significa que a simulação falhou
	If oModelCal1:GetQtdLine() > 1 .Or. !Empty( oModelCal1:GetValue('C1_NRCALC'  ,1) )
		//Percorre o grid, cada linha corresponde a um calculo diferente
		For nCont := 1 to oModelCal1:GetQtdLine()
			oModelCal1:GoLine( nCont )                                 			

			nVlrFrt	 		:= oModelCal1:GetValue('C1_VALFRT'  ,nCont )       
			nPrevEnt  		:= oModelCal1:GetValue('C1_DTPREN'  ,nCont ) - ddatabase

			nNumCalc		:= oModelCal2:GetValue	("C2_NRCALC" ,1 )  //"Número Cálculo"
			nClassFret		:= oModelCal2:GetValue	("C2_CDCLFR" ,1 )  //"Class Frete"
			nTipOper		:= oModelCal2:GetValue	("C2_CDTPOP" ,1 )  //"Tipo Operação"
			cTrecho			:= oModelCal2:GetValue	("C2_SEQ" ,1 )     //"Trecho"
			cCGCTran		:= oModelCal2:GetValue	("C2_CDEMIT" ,1 )  //"Emit Tabela"
			cTabela			:= oModelCal2:GetValue	("C2_NRTAB" ,1 )   //"Nr tabela "
			cNumNegoc		:= oModelCal2:GetValue	("C2_NRNEG" ,1 )   //"Nr Negoc"
			cRota			:= oModelCal2:GetValue	("C2_NRROTA" ,1 )  //"Rota"
			dDatValid		:= oModelCal2:GetValue	("C2_DTVAL" ,1 )   //"Data Validade"
			cFaixa			:= oModelCal2:GetValue	("C2_CDFXTV" ,1 )  //"Faixa"
			cTipoVei		:= oModelCal2:GetValue	("C2_CDTPVC" ,1 )  //"Tipo Veículo"

			SA4->(dbSetOrder(3))
			If SA4->(dbSeek(xFilial("SA4")+cCGCTran))
				AADD (aRet, {,SA4->A4_COD,SA4->A4_NOME,nVlrFrt,nPrevEnt,nNumCalc,nClassFret,nTipOper,cTrecho,cTabela,cNumNegoc,cRota,dDatValid,cFaixa,cTipoVei,.T.})			   
			Else
				cCGC := MTA410RetCGC(cCGCTran)
				If SA4->(dbSeek(xFilial("SA4")+cCGC))
					AADD (aRet, {,SA4->A4_COD,SA4->A4_NOME,nVlrFrt,nPrevEnt,nNumCalc,nClassFret,nTipOper,cTrecho,cTabela,cNumNegoc,cRota,dDatValid,cFaixa,cTipoVei,.T.})
				Else
					AADD (aRet, {,cCGCTran,STR0199,nVlrFrt,nPrevEnt,nNumCalc,nClassFret,nTipOper,cTrecho,cTabela,cNumNegoc,cRota,dDatValid,cFaixa,cTipoVei,.F.}) //--"Transportadora não cadastrada no Microsiga Protheus!!!"
				EndIf
				EndIf	
		Next nCont    
		
		
		If !Empty(aRet)

			// SIGAGFE - Ponto de Entrada para não mostrar a Tela do Resultado da Simulação de Frete
			If ExistBlock('MA410FRT')
				ExecBlock('MA410FRT',.F.,.F.,{aRet})
			Else
				a410RetSml(aRet)
			EndIf
			
		EndIf
		
	EndIf	

ElseIf (M->C5_TIPO $ "CIP")
	Help(" ",1,"A410SMLCIP")	//"A simulação de frete não será executada para os pedidos de Complemento de Preço, ICMS e IPI, portanto não haverá integração com o módulo SIGAGFE."
Else
	Help(" ",1,"A410SMLFRT")	//"Para a simulação de frete é necessário preencher os campos: Cli.Entrega, Loja Entrega, Produto, Quantidade e Valor."	
EndIf
INCLUI := lInclui
RestArea(aArea)		

Return ( Nil )

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a410RetSml  ºAutor  ³Leandro Paulino     º Data ³  04/11/11 º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Tela Resultado da Simulação do Frete                       º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ Integração  OMS X TOTVSGFE		                             º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/

Function a410RetSml(aListBox)

Local aSize     := {}
Local aObjects  := {}
Local aInfo     := {}
Local aPosObj   := {}  
Local oOk       := LoadBitMap(GetResources(),"LBOK")
Local oNo       := LoadBitMap(GetResources(),"LBNO")
Local oBtn01
Local oBtn02
Local cCodTrans := ""
Local nItemMrk	:= 0
Local nOpca		:= 0

Default aListBox:= {}

Private oListBox:= Nil
Private oDlg	 := Nil
									  
//-- Rotinas Marcadas
Private aRotMark:= {}                                                         
									
aSize    	:= MsAdvSize(.F. )
aObjects 	:= {}
	
AAdd( aObjects, { 100, 000, .T., .F., .T.  } )
AAdd( aObjects, { 100, 100, .T., .T. } )
AAdd( aObjects, { 100, 005, .T., .T. } )

aInfo   := { aSize[ 1 ], aSize[ 2 ], aSize[ 3 ]*0.60, aSize[ 4 ]*0.68, 3, 3, .T.  }
aPosObj := MsObjSize( aInfo, aObjects, .T. )
	
DEFINE MSDIALOG oDlg TITLE STR0193 From aSize[7],0 to aSize[6]*0.68,aSize[5]*0.61 OF oMainWnd PIXEL //--"Simulação de Frete"
	
		oPanel := TPanel():New(aPosObj[1,1],aPosObj[1,2],"",oDlg,,,,,CLR_WHITE,(aPosObj[1,3]), (aPosObj[1,4]), .T.,.T.)
			
		//-- Cabecalho dos campos do Monitor.                                                        
		@ aPosObj[2,1],aPosObj[2,2] LISTBOX oListBox Fields HEADER;
		  "",STR0194,STR0195,STR0196,STR0214,STR0218, STR0219, STR0220, STR0221, STR0222, STR0223, STR0224, STR0225, STR0226, STR0227  SIZE aPosObj[2,4]-aPosObj[2,2],aPosObj[2,3]-aPosObj[2,1] PIXEL //--"Nome Transp.","Valor do Frete","Cod.Transp.","Prazo de Entrega (Dias)"
					
		oListBox:SetArray( aListBox )
		oListBox:bLDblClick := { || a410MrkSml(aListBox,@nItemMrk,@cCodTrans) }                              
		oListBox:bLine      := { || {	Iif(aListBox[ oListBox:nAT,SMMARCA 	] == '1',oOk,oNo),;	
												aListBox[ oListBox:nAT,SMCODTRAN	],;				
												aListBox[ oListBox:nAT,SMNOMETRAN	],;
												aListBox[ oListBox:nAT,SMVALOR	   	],;
												aListBox[ oListBox:nAT,SMPRAZO	   	],; 
												aListBox[ oListBox:nAT,SMNUMCALC	],;
												aListBox[ oListBox:nAT,SMCLASSFRE 	],;
												aListBox[ oListBox:nAT,SMTIPOPER  	],;
												aListBox[ oListBox:nAT,SMTRECHO   	],;
												aListBox[ oListBox:nAT,SMTABELA  	],;
												aListBox[ oListBox:nAT,SMNUMNEGOC 	],;
												aListBox[ oListBox:nAT,SMROTA     	],;
												aListBox[ oListBox:nAT,SMDATVALID 	],;
												aListBox[ oListBox:nAT,SMFAIXA    	],;
												aListBox[ oListBox:nAT,SMTIPOVEI	]}}		        
//	AADD (aRet, {,SA4->A4_COD,SA4->A4_NOME,nVlrFrt,nPrevEnt,nNumCalc,nClassFret,nTipOper,cTrecho,cTabela,cNumNegoc,cRota,dDatValid,cFaixa,cTipoVei,.T.})			   
								
		//-- Botoes da tela do monitor.
		@ aPosObj[3,1],001 BUTTON oBtn01	PROMPT STR0198	ACTION (nOpca := 1, oDlg:End()) OF oDlg PIXEL SIZE 035,011	//-- "Confirmar"
		@ aPosObj[3,1],040 BUTTON oBtn02	PROMPT STR0049	ACTION oDlg:End() OF oDlg PIXEL SIZE 035,011	//-- "Sair"																										                                                    		

		ACTIVATE MSDIALOG oDlg CENTERED

		If nOpca == 1
			M->C5_TRANSP := cCodTrans 
				If ExistBlock('MA410SML')
					ExecBlock('MA410SML',.F.,.F.,{aListBox})
				EndIf
		End If

Return ( Nil )	
	
/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡„o    ³ a410MrkSml³  Autor ³ Leandro Paulino     ³ Data ³07.11.2011³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡„o ³ Escolhe a Transportadora para o Pedido de Venda            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³ a410MrkSml()  		                                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³                                                            ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ Integração  OMS X TOTVSGFE                                 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function a410MrkSml(aListBox,nItemMrk,cCodTrans)

Local nItem   := oListBox:nAt

Default aListBox	:= {}
Default nItemMrk	:= 0 	//Item já marcado        
Default cCodTrans	:= "" 

If nItemMrk == 0  //Nenhum Item Marcado em Memória
	If aListBox[nItem,SMEXISTMP]
		cCodTrans 	:=  aListBox[nItem,SMCODTRAN]
		aListBox[nItem,SMMARCA] := '1'	
		nItemMrk 	:= nItem                         		
	Else
		MsgAlert(STR0199)	//--"Transportadora não cadastrada no Microsiga Protheus!"
	EndIf
ElseIf nItemMrk == nItem //Item Já Marcado
	aListBox[nItem,SMMARCA] := '2'                
	nItemMrk := 0
	cCodTrans 	:=  ""
Else //Marca o Item selecionado e desmarca o Item já marcado anteriormente.
	If aListBox[nItem,SMEXISTMP]
		aListBox[nItem,SMMARCA] 	:= '1'			
		aListBox[nItemMrk,SMMARCA] := '2'				
		nItemMrk 						:= nItem                         		
		cCodTrans 						:=  aListBox[nItem,SMCODTRAN]		
	Else
		MsgAlert(STR0199)	//--"Transportadora não cadastrada no Microsiga Protheus!"
	EndIf	
EndIf	
	
oListBox:Refresh()
						
Return ( Nil )	


//-------------------------------------
/*	Definição de Integração
@author  	Jefferson Tomaz
@version 	P10 R1.4
@build		7.00.101202A
@since 		15/08/2011
@return 		{ lRet, cXml }*/
//-------------------------------------

Static Function IntegDef( cXML, nTypeTrans, cTypeMessage )

Local aRet := {}

If ( FWXX4Seek( 'ORDER', 2 ) )
	aRet := MATI410( cXML, nTypeTrans, cTypeMessage )
						
//Usado para manter a compatibilidade com a SalesOrder
ElseIf FWXX4Seek( 'SALESORDER', 2 )    
	cRotAnt := GetRotInteg()
	SetRotInteg( 'MATA411')
	aRet := MATI411( cXML, nTypeTrans, cTypeMessage )
	SetRotInteg( cRotAnt )
ElseIf cTypeMessage == EAI_MESSAGE_WHOIS
	//WhoIs
	//MATI410  v1.000|3.000|3.001|3.002
	//MATI411  v1.000
	aRet := {.T., '1.000|3.000|3.001|3.002'}
EndIf

Return aRet

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³A410TotPoder3³ Autor ³ Vendas CRM			   ³ Data ³08/02/12  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³Função utilizada para retornar valor total do saldo de poder   ³±±
±±³          ³de/em terceiros.									             ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³A410TotPoder3(ExpC1,ExpC2,ExpC3,ExpC4,ExpC5)                   ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1=Código do produto						                 ³±±
±±³          ³ExpC2=Tipo do Pedido (D=Dev.Compra/B=Util. Fornecedor)	     ³±±
±±³          ³ExpC3=Código do Cliente/Fornecedor		                     ³±±
±±³          ³ExpC4=Loja do Cliente/Fornecedor		                         ³±±
±±³          ³ExpC5=Identificação da Origem			                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³																 ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/             
Static Function A410TotPoder3(cProduto,cTpNF,cCliFor,cLoja,cIdentB6)

Local aArea		:= GetArea()
Local cTpCliFor := IIf(cTpNF $ "DB","F","C")
Local cAliasSD1 := "SD1"
Local cAliasSD2 := "SD2"
Local cAliasSB6 := "SB6"
Local cQuery    := ""
Local cQuery1   := ""
Local cQuery2   := ""
Local lQuery    := .F.
Local lProcessa := .T.
Local nSldLiq   := 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³ MV_VLDDATA - Valida data de emissao do documento de beneficiamento  ³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
Local lVldData   := SuperGetMv("MV_VLDDATA",.F.,.T.)

dbSelectArea("SB6")
dbSetOrder(2)
#IFDEF TOP
	If TcSrvType()<>"AS/400" .And. TcSrvType()<>"iSeries" .And. !("POSTGRES" $ TCGetDB())
		lQuery    := .T.
		cAliasSB6 := "F4PODER3_SQL"
		cAliasSD1 := "F4PODER3_SQL"
		cAliasSD2 := "F4PODER3_SQL"

		cQuery := "SELECT DISTINCT(SD1.R_E_C_N_O_) SD1RECNO,SB6.R_E_C_N_O_ SB6RECNO,D1_VUNIT,D1_TOTAL,D1_VALDESC,D1_VALDEV,0 SD2RECNO,0 D2_PRCVEN,0 D2_TOTAL,0 D2_DESCON,D1_NUMLOTE NUMLOTE,D1_LOTECTL LOTECTL,'' D2_TIPO,D1_TIPO, "
		If SB6->(FieldPos("B6_IDENTB6"))==0
			cQuery += "B6_FILIAL,B6_PRODUTO,B6_CLIFOR,B6_LOJA,B6_PODER3,B6_TPCF,B6_QUANT,B6_QULIB,B6_TIPO "
		Else
			cQuery += "B6_FILIAL,B6_PRODUTO,B6_CLIFOR,B6_LOJA,B6_PODER3,B6_IDENTB6,B6_TPCF,B6_QUANT,B6_QULIB,B6_TIPO "
		EndIf
		cQuery1:= " FROM "+RetSqlName("SB6")+" SB6 ,"
		cQuery1 += RetSqlName("SD1")+" SD1 "
		cQuery1 += "WHERE SB6.B6_FILIAL='"+xFilial("SB6")+"' AND "
		cQuery1 += "SB6.B6_PRODUTO    = '"+cProduto+"' AND "
		If !IsTriangular()
			cQuery1 += "SB6.B6_CLIFOR = '"+cCliFor+"' AND "
			cQuery1 += "SB6.B6_LOJA   = '"+cLoja+"' AND "
		EndIf
		cQuery1 += "SB6.B6_PODER3  = 'R' AND "
		cQuery1 += "(SB6.B6_IDENT = '" +cIdentB6+"' OR "
		cQuery1 += " SB6.B6_IDENTB6 = '" +cIdentB6+"') AND "
		cQuery1 += "SB6.B6_TPCF    = '"+cTpCliFor+"' AND "
		cQuery1 += "SB6.D_E_L_E_T_ = ' ' AND "
		cQuery1 += "SB6.B6_TIPO   = 'D' AND "
		cQuery1 += "SD1.D1_FILIAL = '"+xFilial("SD1")+"' AND "
		cQuery1 += "SD1.D1_NUMSEQ = SB6.B6_IDENT AND "
		If lVldData
			cQuery1 += "SD1.D1_DTDIGIT <= '" + DTOS(dDataBase) + "' AND "
		EndIf	
		cQuery1 += "SD1.D_E_L_E_T_=' ' "
		cQuery += cQuery1 + " UNION ALL "
		cQuery += "SELECT DISTINCT(0) SD1RECNO,SB6.R_E_C_N_O_ SB6RECNO,0 D1_VUNIT,0 D1_TOTAL,0 D1_VALDESC,0 D1_VALDEV,SD2.R_E_C_N_O_ SD2RECNO,D2_PRCVEN,D2_TOTAL,D2_DESCON,D2_NUMLOTE NUMLOTE,D2_LOTECTL LOTECTL, D2_TIPO,'' D1_TIPO, "
		If SB6->(FieldPos("B6_IDENTB6"))==0
			cQuery += "B6_FILIAL,B6_PRODUTO,B6_CLIFOR,B6_LOJA,B6_PODER3,B6_TPCF,B6_QUANT,B6_QULIB,B6_TIPO "
		Else
			cQuery += "B6_FILIAL,B6_PRODUTO,B6_CLIFOR,B6_LOJA,B6_PODER3,B6_IDENTB6,B6_TPCF,B6_QUANT,B6_QULIB,B6_TIPO "
		EndIf
		cQuery2:= " FROM "+RetSqlName("SB6")+" SB6 ,"
		cQuery2 += RetSqlName("SD2")+" SD2 "			
		cQuery2 += "WHERE SB6.B6_FILIAL = '"+xFilial("SB6")+"' AND "
		cQuery2 += "SB6.B6_PRODUTO	   = '"+cProduto+"' AND "
		cQuery2 += "SB6.B6_PODER3	   = 'D' AND "
		cQuery2 += "(SB6.B6_IDENT = '" +cIdentB6+"' OR "
		cQuery2 += " SB6.B6_IDENTB6 = '" +cIdentB6+"') AND "
		cQuery2 += "SB6.B6_TPCF         = '"+cTpCliFor+"' AND "
		cQuery2 += "SB6.D_E_L_E_T_	   = ' ' AND "
		If !IsTriangular()
			cQuery2 += "SB6.B6_CLIFOR='"+cCliFor+"' AND "
			cQuery2 += "SB6.B6_LOJA='"+cLoja+"' AND "
		EndIf
		cQuery2 += "SB6.B6_TIPO    ='D' AND "
		cQuery2 += "SD2.D2_FILIAL  ='"+xFilial("SD2")+"' AND "
		cQuery2 += "SD2.D2_DOC	  = SB6.B6_DOC AND "
		cQuery2 += "SD2.D2_SERIE   = SB6.B6_SERIE AND "
		cQuery2 += "SD2.D2_CLIENTE = SB6.B6_CLIFOR AND "
		cQuery2 += "SD2.D2_LOJA    = SB6.B6_LOJA AND " 
		cQuery2 += "SD2.D2_COD     = SB6.B6_PRODUTO AND "
		cQuery2 += "SD2.D2_IDENTB6 = SB6.B6_IDENT AND "
		cQuery2 += "SD2.D2_QUANT	  = SB6.B6_QUANT AND "
		If lVldData
			cQuery2 += "SD2.D2_EMISSAO <= '" + DTOS(dDataBase) + "' AND "
		EndIf	
		cQuery2 += "SD2.D_E_L_E_T_=' ' "	
		cQuery := cQuery + cQuery2
		cQuery := ChangeQuery(cQuery)
	
		dbUseArea(.T.,"TOPCONN",TcGenQry(,,cQuery),cAliasSB6,.T.,.F.)	
	Else
#ENDIF
	If IsTriangular()
		MsSeek(xFilial("SB6")+cProduto)	
	Else
		MsSeek(xFilial("SB6")+cProduto+cCliFor+cLoja,.F.)
	EndIf
#IFDEF TOP
	EndIf
#ENDIF    

If lQuery
	dbSelectArea(cAliasSB6)
	dbGotop()
EndIf
While !Eof() .And. (cAliasSB6)->B6_FILIAL = xFilial("SB6") .And.;
		(cAliasSB6)->B6_PRODUTO == cProduto .And.;
		IIF(IsTriangular(),.T.,IIf(lQuery,.T.,(cAliasSB6)->B6_CLIFOR == cCliFor .And.;
		(cAliasSB6)->B6_LOJA == cLoja ))

	If lProcessa
		If (cAliasSB6)->B6_TIPO == "D" .And. (cAliasSB6)->B6_TPCF == cTpCliFor
			If !lQuery
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verificar qual eh a tabela de origem do poder de terceiros          ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ((cAliasSB6)->B6_TIPO=="D" .And. (cAliasSB6)->B6_PODER3 == "R" ) .Or. ((cAliasSB6)->B6_TIPO=="E" .And. (cAliasSB6)->B6_PODER3 == "D")
					If (cAliasSB6)->B6_PODER3 == "R"
						dbSelectArea("SD1")
						dbSetOrder(4)
						dbSeek(xFilial("SD1")+(cAliasSB6)->B6_IDENT)
					Else
						dbSelectArea("SD1")
						dbSetOrder(1)
						dbSeek(xFilial("SD1")+(cAliasSB6)->B6_DOC+(cAliasSB6)->B6_SERIE+(cAliasSB6)->B6_CLIFOR+(cAliasSB6)->B6_LOJA+(cAliasSB6)->B6_PRODUTO)
						While !Eof() .And. xFilial("SD1") == SD1->D1_FILIAL .And.;
								(cAliasSB6)->B6_DOC       == SD1->D1_DOC .And.;
								(cAliasSB6)->B6_SERIE     == SD1->D1_SERIE .And.;
								(cAliasSB6)->B6_CLIFOR    == SD1->D1_FORNECE .And.;
								(cAliasSB6)->B6_LOJA      == SD1->D1_LOJA .And.;
								(cAliasSB6)->B6_PRODUTO   == SD1->D1_COD
								
							If (cAliasSB6)->B6_IDENT==SD1->D1_IDENTB6 .And. (cAliasSB6)->B6_QUANT=SD1->D1_QUANT
								Exit
							EndIf				
							dbSelectArea("SD1")
							dbSkip()
						EndDo
					EndIf
				EndIf
			EndIf			                          
			If ((cAliasSB6)->B6_TIPO=="D" .And. (cAliasSB6)->B6_PODER3 == "R" ) .Or. ((cAliasSB6)->B6_TIPO=="E" .And. (cAliasSB6)->B6_PODER3 == "D")
				lProcessa := lProcessa .And. (cAliasSD1)->D1_TIPO<>"I"
			EndIf
			If lProcessa
				//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
				//³ Verificar qual eh a tabela de origem do poder de terceiros e calcula³
				//³ o valor total do saldo de poder de/em terceiros                     ³
				//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
				If ((((cAliasSB6)->B6_TIPO=="D" .And. (cAliasSB6)->B6_PODER3 == "R" ) .Or. ((cAliasSB6)->B6_TIPO=="E" .And. (cAliasSB6)->B6_PODER3 == "D")) .And.;
					IIf (lQuery,.T.,(((cAliasSB6)->B6_IDENT == cIdentB6) .Or. ((cAliasSB6)->B6_IDENTB6 == cIdentB6))))
					If (cAliasSB6)->B6_PODER3 == "R"
						nSldLiq += (cAliasSD1)->D1_TOTAL-(cAliasSD1)->D1_VALDESC-(cAliasSD1)->D1_VALDEV
					Else
						nSldLiq -= (cAliasSD1)->D1_TOTAL-(cAliasSD1)->D1_VALDESC-(cAliasSD1)->D1_VALDEV
					EndIf
				EndIf
			EndIf
		EndIf
	EndIf
	dbSelectArea(cAliasSB6)
	dbSkip()
EndDo

If lQuery
	dbSelectArea(cAliasSB6)
	dbCloseArea()
	RestArea(aArea)
Else
	dbSelectArea("SD1")
	dbSetOrder(4)
	dbSeek(xFilial("SD1")+cIdentB6)
EndIf

Return (nSldLiq)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³a410ISSMunºAutor  ³ Vitor Felipe       º Data ³ 29/06/2012  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Controle dos Abatimentos para o calculo do ISS (Processa). º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function A410ISSMUN()
Local nTamSX1   := Len(SX1->X1_GRUPO)
Local cPerg		:= PadR("ISSXMUN",nTamSX1)
Local cPerg2	:= PadR("MTA410",nTamSX1)
Local lEnd		:=	.F.
Local lCampos	:=	SB1->(FieldPos("B1_MEPLES")) > 0 .And. SD1->(FieldPos("D1_OKISS")) > 0 .And. CE2->(FieldPos("CE2_NUMPV")) > 0 .And.;
					SC5->(FieldPos("C5_ESTPRES")) > 0

If AliasIndic("CE2") .And. lCampos
	CrIISSX1(cPerg)
	If Pergunte(cPerg,.T.)
		Processa({|lEnd| a410INCISS(@lEnd)},,,.T.)		
		 GETDREFRESH()
		 SetFocus(oGetDad:oBrowse:hWnd) 
	Else
		Pergunte(cPerg2,.F.)
	EndIf
	
Else
	Alert("Dicionario de Dados desatualizado Rodar UPDFIS")
EndIf

Return

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³ISSCAMARK ºAutor  ³ Vitor Felipe       º Data ³ 29/06/2012  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Validar o cancelamento do Pedido de Venda.			      º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function ISSCAMARK()

Local lRet := .T.

If !Empty(M->C5_NUM)
	dbSelectArea("CE2")
	dbSetOrder(1)
	If CE2->(msSeek(xFilial("CE2")+M->C5_NUM))
		lRet := .F.			
		Alert("Atenção !!! Existem Abatimentos de ISS selecionados. Desmarque a seleção.")	
	EndIF
	 CE2->(dbCloseArea())
EndIf

Return(lRet)


/*±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao     ³IntPVSServ| Autor ³TOTVS S.A.               ³ Data ³ 20/09/12 ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³ Funcao utilizada para integracao do Pedido de Vendas com     ³±±
±±³           ³ o produto SISCOSERV da TRADE EASY.                        		³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ cPedido = Numero do Pedido de vendas                      		³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³ MATA410                                                  			³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function IntPVSServ(cPedido,nOpcao)
Local aAreaAnt  := GetArea()
Local aAreaSC5  := SC5->(GetArea())
Local aAreaSC6  := SC6->(GetArea())
Local lIntSServ := FindFunction("AvFlags") .And. AvFlags("CONTROLE_SERVICOS_VENDA")
Local lVENSEIC  := SuperGetMV("MV_FATSEEC",.F.,.F.) // Parametro utilizado para Integracao
Local cSeek     := ""
Local aCab      := {}
Local aItens    := {}
Local aLinha    := {} 
Local aPE		:= {} 
Local nItens    := 0  //Trade-Easy - RRC - 11/10/2013 - Integração SIGAFAT x SIGAESS
Local nVlPed    := 0
Local nVlRateio := 0
Local lRateio   := SuperGetMv("MV_ESS0020",,.F.) .And. FindFunction("EasyRateio")
Local oRateio 

Private lMsErroAuto := .F.

Default cPedido := ""
Default nOpcao  := 3 //Inclusao
//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³As funcoes AvFlags e EECPS400 sao de responsabilidade da equipe da ³
//³TRADE-EASY qualquer ocorrencia nestas funcoes favor acionar a      |
//³equipe de parceiros.                                               |
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
If lIntSServ .And. lVENSEIC .And. !Empty(cPedido) .And. FindFunction('EECPS400')
	dbSelectArea("SC5")
	SC5->(dbSetOrder(1))
	
	aadd(aCab,{"EJW_FILIAL"		,xFilial("SC5")	,Nil})
	aadd(aCab,{"EJW_PROCES"		,cPedido        ,Nil})
	aadd(aCab,{"EJW_ORIGEM"		,"SIGAFAT"	    ,Nil})
	
	If dbSeek(cSeek:=xFilial("SC5")+cPedido)
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Montagem do aCab (Array que contem o cabecalho do pedido de vendas)|
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		aadd(aCab,{"EJW_IMPORT"		,SC5->C5_CLIENTE	,Nil})
		aadd(aCab,{"EJW_LOJIMP"		,SC5->C5_LOJACLI	,Nil})
		aadd(aCab,{"EJW_MOEDA"		,SC5->C5_MOEDA	,Nil})		//Numerico de 2
		aadd(aCab,{"EJW_COMPL"   	,SC5->C5_MENNOTA	,Nil})
		  aadd(aCab,{"EJW_CONDPG"		,SC5->C5_CONDPAG	,Nil})
		// Conforme orientacao do Alessandro (TRADE-EASY) nao
		// sera necessario o envio dos campos abaixo
		//aadd(aCab,{"EJW_VL_MOED" 	,SC5->C5_			,Nil}) 
		//aadd(aCab,{"EJW_VL_REA"  	,SC5->C5_			,Nil})
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Montagem do Itens (Array que contem os itens do pedido de vendas)  |
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		dbSelectArea("SC6")
		SC6->(dbGoTop())
		SC6->(dbSetOrder(1)) 
		//Trade-Easy - RRC - 11/10/2013 - Integração SIGAFAT x SIGAESS
		//Tratamento adicional para somar os valores proporcionais do frete e seguro aos itens que farão parte do Processo de Venda no SIGAESS
		//Verifica primeiro a quantidade de itens e o valor total do pedido para realizar rateio do valor para os itens no SIGAESS
		If lRateio
			SC6->(dbSeek(cSeek))
			Do While SC6->(!Eof()) .And. cSeek == SC6->C6_FILIAL+SC6->C6_NUM
				nVlPed+=SC6->C6_VALOR
				nItens++
				SC6->(dbSkip())
			EndDo
			oRateio := EasyRateio():New(SC5->C5_FRETE+SC5->C5_SEGURO+SC5->C5_DESPESA-SC5->C5_DESCONT,nVlPed,nItens,AvSx3("EJX_VL_MOE",4))
		EndIf
		
		SC6->(dbSeek(cSeek))
		Do While !Eof() .And. cSeek == SC6->C6_FILIAL+SC6->C6_NUM
			aLinha := {}
			aadd(aLinha,{"EJX_FILIAL"		,SC6->C6_FILIAL	    ,Nil})
			aadd(aLinha,{"EJX_PROCES"		,SC6->C6_NUM		,Nil})
			aadd(aLinha,{"EJX_SEQPRC"		,SC6->C6_ITEM		,Nil})
			aadd(aLinha,{"EJX_ITEM"			,SC6->C6_PRODUTO	,Nil})
			aadd(aLinha,{"EJX_QTDE"			,SC6->C6_QTDVEN		,Nil})
			//Trade-Easy - RRC - 11/10/2013 - Integração SIGAFAT x SIGAESS
			 /*Caso o valor do frete e seguro do pedido sejam somados ao valor do item ao SIGAESS, fará o rateio para chegar ao novo valor, além de
			 recalcular o preço unitário, dividindo o novo valor pela quantidade.*/
			 If lRateio
				 nVlRateio := oRateio:GetItemRateio(SC6->C6_VALOR)
			 EndIf
			 aadd(aLinha,{"EJX_PRCUN"	  	,If(lRateio,Round((nVlRateio+SC6->C6_VALOR)/SC6->C6_QTDVEN,AvSx3("EJX_PRCUN",4)),SC6->C6_PRCVEN) ,Nil})
			aadd(aLinha,{"EJX_VL_MOE"		,If(lRateio,SC6->C6_VALOR+nVlRateio,SC6->C6_VALOR) ,Nil})
			aadd(aLinha,{"EJX_TX_MOE"		,SC5->C5_TXMOEDA	,Nil})
			//aadd(aLinha,{"EJX_VL_COMPL"		,SC6->		,Nil})
			// Conforme orientacao do Alessandro (TRADE-EASY) nao
			// sera necessario o envio dos campos abaixo pois sera
			// desenvolvida a rotina de manutencao pelo parceiro.
			//aadd(aLinha,{"EJX_NBS"		,""					,Nil})
			//aadd(aLinha,{"EJX_PAIS"		,""				,Nil})
			//aadd(aLinha,{"EJX_MODO"		,""				,Nil})
			//aadd(aLinha,{"EJX_DTPRIN"		,""				,Nil})
			//aadd(aLinha,{"EJX_DTPRFI"		,""				,Nil})
			//aadd(aLinha,{"EJX_DTINI"		,""				,Nil})
			//aadd(aLinha,{"EJX_DTFIM"		,""				,Nil})
			aadd(aItens,aLinha)
			SC6->(dbSkip())
		EndDo
	EndIf	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Execucao da Rotina Automatica EECPS400                              |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ 
	If ExistBlock("M410SSERV")
		aPE    := ExecBlock("M410SSERV",.F.,.F.,{aCab,aItens,nOpcao })
		aCab   := aPE[1]
		aItens := aPE[2]
	EndIf
	//If Len(aCab) > 0 .And. Len(aItens) > 0
	MsExecAuto({|a,b,c,d|EECPS400(a,b,c,d)},aCab,aItens,,nOpcao)
	//EndIf	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Tratamento de Seguranca                                             |
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lMsErroAuto
		ConOut(STR0186) //"EECPS400 - Nao foi possivel realizar a integracao com o SISCOSERV entre em contato com a equipe da TRADE-EASY."
		MostraErro()
	EndIf

EndIf	

RestArea(aAreaSC5)
RestArea(aAreaSC6)
RestArea(aAreaAnt)

Return




/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Mat410RentºAutor  ³ Vendas & CRM       º Data ³ 05/10/2012  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Busca os valores de rentabilidade de um determinado pedido º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function Mat410Rent(cNumPedido)
Local aArea := GetArea()
Local aAreaSC5 := SC5->(GetArea())
Local aAreaSC6 := SC6->(GetArea())
Local aCab := {}
Local aItens := {}

Local cSeek     := ""
Local aNoFields := {"C6_NUM","C6_QTDEMP","C6_QTDENT","C6_QTDEMP2","C6_QTDENT2","C6_INFAD"}	
Local bWhile    := {|| }
Local aRentab := {}

/*
aRentab
[n]    Item do pedido
[n][1] codigo do produto
[n][2] Valor Total (unit * qtde)
[n][3] C.M.V. (custo)
[n][4] Valor Presente
[n][5] Lucro Bruto (Valor presente - CMV)
[n][6] Margem de Contribuicao (%)
*/

Private aHeader := {}
Private aCols := {}


dbSelectArea("SC5")
dbSetOrder(1)
If DbSeek(xFilial("SC5") + cNumPedido)
	RegToMemory ( "SC5" )
		
	DbSelectArea("SC6")
	dbSetOrder(1)
	cSeek  := xFilial("SC6")+SC5->C5_NUM
	bWhile := {|| C6_FILIAL+C6_NUM }
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³ Montagem do aHeader e aCols                          ³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	FillGetDados(2,"SC6",1,cSeek,bWhile,/*uSeekFor*/,aNoFields,/*aYesFields*/,/*lOnlyYes*/,/*cQuery*/,/*bMontCols*/,.F.)

EndIF


Pergunte("MTA410",.F.)
Ma410Impos(0, .T. , @aRentab)

SC6->(RestArea(aAreaSC6))
SC5->(RestArea(aAreaSC5))
RestArea(aArea)

Return aRentab
							

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410ConPadºAutor  ³ Caio Murakami        º Data ³  27/12/12   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDescricao ³ Consulta especifica para a SC5                               º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ C6_PEDVINC                                                	 º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/

Function A410ConPad()
Local aArea 		:= GetArea()
Local aAreaSC5    := SC5->( GetArea() ) 
Local lRet 			:= .F.
Local aCampos     := {}
Local   aRotina   := {}
Private nOpcSel   := 0 

AAdd(aCampos, "C5_NUM")
AAdd(aCampos, "C5_CLIENTE")
AAdd(aCampos, "C5_LOJACLI")
AAdd(aCampos, "C5_EMISSAO")

AAdd( aRotina, { STR0198,'TMSConfSel',0,2,,,.T.} ) //-- 'Confirmar'  

MaWndBrowse(0,0,300,600,cCadastro,"SC5",aCampos,aRotina,,,,.T.)

If nOpcSel == 1
	VAR_IXB := SC5->C5_NUM
	lRet    := .T.
EndIf

RestArea( aAreaSC5 )
RestArea( aArea    ) 

Return lRet                                           

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡ao    ³A410LiqPro ³ Autor ³ Marco Aurelio - Mano    ³ Data ³13/06/11  ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡ao ³Valida relacao entre os campos C5_LIQPRO/C5_TIPOREM e          ³±±
±±³          ³F2_LIQPROD/F2_TIPOREM processo "Liquido Produto".              ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Sintaxe   ³A410LiqPro(ExpC1,ExpC2)                                        ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Parametros³ExpC1=Alias da tabela do campo a ser validado                  ³±±
±±³          ³ExpC2=Campo a ser validado pela funcao                         ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³Uso       ³Chamada a partir do X3_VALID dos campos C5_LIQPROD, C5_TIPOREM ³±±
±±³          ³F2_LIQPROD e F2_TIPOREM                                        ³±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/             
Function A410LiqPro() 
Local cVar     := ReadVar()									// Nome da variavel de memoria editada
Local cContVar := &(ReadVar())								// Conteudo da variavel
Local cCampo   := StrTran(cVar,"M->","")					// Nome da campo a ser validado
Local lRet     := .T.										// Conteudo de retorno
Local cAlias   := Posicione("SX3",2,cCampo,"X3_ARQUIVO")	// Alias do arquivo
Local lFieldOK := ((cAlias)->(FieldPos(cCampo))>0)			// Determina se o campo existe na estrutura da tabela

If lFieldOK

	If ( 	( cCampo=="C5_LIQPROD" .and. M->C5_LIQPROD == "1" .and. M->C5_TIPOREM # "A" ) .or.; 
			( cCampo=="C5_TIPOREM" .and. M->C5_TIPOREM # "A" .and. M->C5_LIQPROD == "1" ) .or.; 
			( cCampo=="F2_LIQPROD" .and. M->F2_LIQPROD == "1" .and. M->F2_TIPOREM # "A" ) .or.; 
			( cCampo=="F2_TIPOREM" .and. M->F2_TIPOREM # "A" .and. M->F2_LIQPROD == "1" ) ) 
	
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³HELP: Para "Tipo de Remito=Consignacao", campo "Liquido Prod" deve ser preenchido com "Sim" ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ			
		Help(" ",1,Iif(cCampo$"C5_LIQPROD.F2_LIQPROD","A410LIQPRO","A410TIPREM"))
		 lRet := .f.
	
	EndIf

EndIf

Return(lRet)

/*/
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÚÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÂÄÄÄÄÄÄÂÄÄÄÄÄÄÄÄÄÄ¿±±
±±³Fun‡…o    ³ AjustaSX3³ Autor ³ VENDAS CRM		   ³ Data ³ 25/04/2013³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄ´±±
±±³Descri‡…o ³ Ajuste do dicionario de dados		                      ³±±
±±ÃÄÄÄÄÄÄÄÄÄÄÅÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ´±±
±±³ Uso      ³ MATA410  		                        				  |±±
±±ÀÄÄÄÄÄÄÄÄÄÄÁÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
/*/
Static Function AjustaSX3()
Local aArea 	 := GetArea() 
Local aCamposSX3 := {}   
Local nX		 := 0

dbSelectArea("SX3")
dbSetOrder(2)                              

If dbSeek("C6_LOTECTL") .And. SX3->X3_NIVEL <> 1
	RecLock("SX3",.F.)
	SX3->X3_NIVEL := 1
	MsUnlock()
EndIf

If dbSeek("C6_NUMLOTE") .And. SX3->X3_NIVEL <> 1
	RecLock("SX3",.F.)
	SX3->X3_NIVEL := 1
	MsUnlock()
EndIf                 

If dbSeek("C6_PRCVEN") .and. !'MTA410TROP' $ Upper(SX3->X3_VALID)
	Reclock("SX3",.F.)
	SX3->X3_VALID := 'A410QtdGra() .And. A410MultT() .And. A410Zera() .AND. MTA410TROP(n)'
	MsUnlock()
Endif                 

If dbSeek("C6_SERIORI") .AND. (UPPER(SX3->X3_USADO) <> "€€€€€€€€€€€€€€ " .OR. X3_RESERV <> "’€")
    RecLock("SX3",.F.)
    SX3->X3_USADO := "€€€€€€€€€€€€€€ " 
    SX3->X3_RESERV := "’€"
    MsUnLock()
Endif                 

If SX3->(DbSeek("C6_REGWMS")) .And. !('VAZIO()' $ Upper(SX3->X3_VALID))
   RecLock("SX3")
   SX3->X3_VALID := "Vazio() .Or. Pertence('1234')"
   SX3->(MsUnlock())
EndIf

If dbSeek("C6_LOCALIZ") .And. 'A410WnLoc()' $ SX3->X3_WHEN
	RecLock("SX3",.F.)
	SX3->X3_WHEN := ''
	MsUnlock()
EndIf

If	cPaisLoc == "BRA"
	If dbSeek("C5_NATUREZ") .And. AllTrim(SX3->X3_VALID) <> 'ExistCPO("SED") .And. MafisGet("NF_NATUREZA")'
		RecLock("SX3", .F.)
		SX3->X3_VALID := 'ExistCPO("SED") .And. MafisGet("NF_NATUREZA")'
		MsUnlock()
	EndIf
EndIf

If	cPaisLoc == "BRA"
	If dbSeek("C5_FORNISS") .And. AllTrim(SX3->X3_VALID) <> 'ExistCpo("SA2",M->C5_FORNISS)'
		RecLock("SX3", .F.)
		SX3->X3_VALID := 'ExistCpo("SA2",M->C5_FORNISS)'
		MsUnlock()
	EndIf
EndIf

// Validacao devido ao Release 11.80                             
// Os campos mencionados no aCamposSX3 precisam ficar como USADO 	
aCamposSX3 := {"C5_MUNPRES","C5_SERSUBS","C5_DESCMUN","C6_ITEMPC","C6_NUMPCOM","C5_NFSUBST"}
For nX :=1 To Len(aCamposSX3)   
	If dbSeek(aCamposSX3[nX]) .And. SX3->X3_USADO <> "€€€€€€€€€€€€€€ " 
		RecLock("SX3",.F.)
		SX3->X3_USADO := "€€€€€€€€€€€€€€ " 
		SX3->(MsUnlock())
	EndIf 
Next

//Não permite que seja alterado o tamanho do campo C9_SEQUEN.
If dbSeek("C9_SEQUEN") .AND. X3_RESERV <> "„€"
    RecLock("SX3",.F.)
    SX3->X3_RESERV := "„€"
    MsUnLock()
Endif    

If SX3->(dbSeek("C6_TPPROD")) .AND. Empty(SX3->X3_RELACAO)
    RecLock("SX3",.F.)
    SX3->X3_RELACAO := '"1"'
    MsUnLock()
EndIf

If SX3->(dbSeek("C5_MENNOTA")) .AND. AllTrim(SX3->X3_VALID) <> 'Vazio().Or.A410MenNo()'
		RecLock("SX3", .F.)
		SX3->X3_VALID := 'Vazio().Or.A410MenNo()'
		MsUnlock()
EndIf

If SX3->(dbSeek("AD0_FILIAL")) .AND. AllTrim(SX3->X3_PROPRI) <> ''
		RecLock("SX3", .F.)
		SX3->X3_PROPRI := ''
		MsUnlock()
EndIf

If SX3->(dbSeek("AD0_CNPJ")) .AND. AllTrim(SX3->X3_PROPRI) <> ''
		RecLock("SX3", .F.)
		SX3->X3_PROPRI := ''
		MsUnlock()
EndIf

If SX3->(dbSeek("AD0_SERIE")) .AND. AllTrim(SX3->X3_PROPRI) <> ''
		RecLock("SX3", .F.)
		SX3->X3_PROPRI := ''
		MsUnlock()
EndIf

If SX3->(dbSeek("AD0_DOC")) .AND. AllTrim(SX3->X3_PROPRI) <> ''
		RecLock("SX3", .F.)
		SX3->X3_PROPRI := ''
		MsUnlock()
EndIf

If SX3->(dbSeek("D9_CNPJ")) .AND. AllTrim(SX3->X3_PROPRI) <> ''
		RecLock("SX3", .F.)
		SX3->X3_PROPRI := ''
		MsUnlock()
EndIf

If SX3->(dbSeek("D9_FILORI")) .AND. AllTrim(SX3->X3_PROPRI) <> ''
		RecLock("SX3", .F.)
		SX3->X3_PROPRI := ''
		MsUnlock()
EndIf

RestArea(aArea)

Return

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³Ma410VlDavºAutor  ³Cesar A. Bianchi    º Data ³  18/12/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Valida se o pedido de venda possui relacionamento com algum º±±
±±º          ³DAV no SIGALOJA. Se sim, permite alteracao somente se o DAV º±±
±±º          ³encontra-se com status de "Orçamento em Aberto" e chama a   º±±
±±º          ³funcao de exclusao de DAV									  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MP10 - SIGAPAF/SIGALOJA                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function	Ma410VlDav(cNumPed)
Local aArea 	:= getArea()                                   
Local lRet 		:= .T.
Local aItenSL2	:= {}
Local nI		:= 0

//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
//³Varre a SL2 em busca de itens que utilizem este nro de pedido³
//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
dbSelectArea('SL2')
SL2->(dbSetOrder(6))
if SL2->(dbSeek(xFilial('SL2')+cNumPed))

	While SL2->(!Eof()) .and. alltrim(SL2->L2_PEDSC5) == cNumPed
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Se ja emitiu DOC para este orcamento, entao aborta ³
		//³a busca e retorna .F. para a alteracao do pedido   ³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
		  If !Empty(SL2->L2_DOC) .and. !Empty(SL2->L2_SERIE) .or. !FR271CVldImp(SL2->L2_NUM)
			If len(aAutoCab) > 0
				Conout(STR0159 + cNumPed + STR0160 ) //' O Pedido de venda: xxxx tem relacionamento com um DAV e o mesmo possui documento fiscal emitido, portanto nao sera alterado'
			Else
				Aviso(STR0161,STR0162,{STR0163}) //'Este pedido de venda tem relacionamento com um DAV e o mesmo possui documento fiscal emitido'
			EndIf
			lRet := .F.
			exit
		  Else
		
		//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
		//³Adiciona no array de DAV's a cancelar³
		//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
			If aScan(aItenSL2, { |x| Alltrim(x[1]) == SL2->L2_NUM } ) <= 0
			aAdd(aItenSL2,{SL2->L2_NUM,SL2->L2_ITEM,SL2->L2_PEDSC5,SL2->L2_ITESC6,SL2->L2_SEQUEN})
					lRet := .T.	
				EndIf
		  EndIf
		SL2->(dbSkip())
	EndDo
	
	//ÚÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄ¿
	//³Cancela os DAVs que possuem relacao a este pedido de venda³
	//ÀÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÄÙ
	If lRet
		For nI := 1 to len(aItenSL2)
			MsgRun(STR0164 + alltrim(aItenSL2[nI,1] + STR0165),STR0166,{||  Mt410DelDv(aItenSL2[nI,1]) }) //"Excluindo DAV nro: "                           
		Next nI
	EndIf
EndIf

RestArea(aArea)
Return lRet

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MT410DelDvºAutor  ³Cesar A. Bianchi    º Data ³  18/12/10   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³Exclui DAV (SIGAPAF) passado como parametro                 º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MP10 - SIGAPAF/SIGALOJA                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function Mt410DelDv(cNumDAV)
Local aArea 	:= getArea()
Default cNumDAV := ""

If !Empty(cNumDAV)
	//Abre areas
	dbSelectArea('SL1')
	SL1->(dbSetOrder(1))
	dbSelectArea('SL2')
	SL2->(dbSetOrder(1))
	dbSelectArea('SL4')
	SL4->(dbSetOrder(1))
	dbSelectArea('SC9')
	SC9->(dbSetOrder(1))
	 
	//Exclui SL1
	If SL1->(dbSeek(xFilial('SL1')+cNumDAV))
		RecLock('SL1',.F.)
		SL1->(dbDelete())	//Confirmar se eh dbDelete ou alteracao de campo
		SL1->(msUnlock())
	EndIf
		
	//Exclui a SL2
	If SL2->(dbSeek(xFilial('SL2')+cNumDAV))
		While SL2->(!Eof()) .and. SL2->(L2_NUM) == cNumDAV
			
			//Limpa o C9_DAV deste item como DAV nao emitido
			If SC9->(dbSeek(xFilial('SC9') + SL2->L2_PEDSC5 + SL2->L2_ITESC6 + SL2->L2_SEQUEN ))
				RecLock('SC9',.F.)
				SC9->C9_DAV := ""
				SC9->(msUnlock())
			EndIf
			
			RecLock('SL2',.F.)
			SL2->(dbDelete())	//Confirmar se eh dbDelete ou alteracao de campo
			SL2->(msUnlock())
			SL2->(dbSkip())
		EndDo
	EndIf
	
	//Exlui a SL4
	If SL4->(dbSeek(xFilial('SL4')+cNumDAV))
		RecLock('SL4',.F.)
		SL4->(dbDelete())	//Confirmar se eh dbDelete ou alteracao de campo
		SL4->(msUnlock())			
	EndIf
EndIf

RestArea(aArea)
Return

//-------------------------------------------------------------------
/*{Protheus.doc} A410GrInDs()
Função que inicializa o valor de desonto na grade de produtos multicampo
@author Andre Anjos
@since 19/08/2013
@version 1.0
@return Valor do desconto aplicado ao item da grade*/
//-------------------------------------------------------------------
Static Function A410GrInDs(nLinha,nColuna)
Local nRet 	:= 0
Local nPrUnit := oGrade:aColsFieldByName("C6_PRUNIT",,nLinha,nColuna)
Local nPrcVen := oGrade:GetFieldMC("C6_PRCVEN")

If Empty(nPrUnit) 
	nRet := (((&(ReadVar()) * 100) / oGrade:aColsFieldByName("C6_QTDVEN",,nLinha,nColuna)) / 100) * oGrade:aColsFieldByName("C6_VALDESC",,nLinha,nColuna)
ElseIf !Empty(nPrcVen)
	nRet := (&(ReadVar()) * nPrUnit) - (&(ReadVar()) * nPrcVen)  
EndIf 

Return nRet
					 


/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MTA410TROPºAutor  ³Microsiga           º Data ³  08/24/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funçao para automatizar digitação de tipos de operações no º±±
±±º          ³ Pedido de Venda                                            º±±
±±º          ³                                                            º±±
±±º          ³ Parämetro: nItem - Linha do acols que está posicionado     º±±
±±º          ³                                                            º±±
±±º          ³ Incluído na validação do campo C6_PRCVEN                   º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MTA410TROP(nItem)

Local lRet	:= .T.
Local nPosOpe	:= 0
Local nPosTes	:= 0
Local nPosCod	:= 0
Local aArea		:= GetArea()
Local aAreaSB1	:= SB1->(GetArea())
Local aAreaSF4	:= SF4->(GetArea())
Local lIntgVeic := SuperGetMv("MV_VEICULO",.F.,"N") == "S"
Local lMsExcAut := Type("l410Auto") == "L" .And. l410Auto

Default nItem	:= 0
If INCLUI .or. IsInCallStack("A410COPIA")
	If lValOp .and. nItem > 1 .And. ( !lMsExcAut .Or. ( lMsExcAut .And. !lIntgVeic ) )
		If ( nPosOpe:= aScan(aHeader, { |x| AllTrim(Upper(x[2])) == 'C6_OPER'}) ) > 0
			aCols[nItem][nPosOpe]	:= aCols[nItem-1][nPosOpe]
		
			nPosTes:= aScan(aHeader, { |x| AllTrim(Upper(x[2])) == 'C6_TES'})
			nPosCod:= aScan(aHeader, { |x| AllTrim(Upper(x[2])) == 'C6_PRODUTO'})
			nPosCla:= aScan(aHeader, { |x| AllTrim(Upper(x[2])) == 'C6_CLASFIS'})
			nPosLan:= aScan(aHeader, { |x| AllTrim(Upper(x[2])) == 'C6_CODLAN'})
									
			If SB1->B1_COD # aCols[nItem][nPosCod]
				SB1->(dbSetOrder(1))
				SB1->(MsSeek(xFilial('SB1')+aCols[nItem][nPosCod]))
			EndIf
						
			aCols[nItem][nPosTes]	:= MaTesInt(2,aCols[nItem][nPosOpe],M->C5_CLIENT,M->C5_LOJAENT,If(M->C5_TIPO$'DB',"F","C"),aCols[nItem][nPosCod],"C6_TES")  
				
			If nPosCla > 0
				aCols[nItem][nPosCla]	:= CodSitTri()
			EndIf
			RestArea(aAreaSB1)
	
			If nPosLan > 0
					If SF4->F4_CODIGO # aCols[nItem][nPosTes]
					SF4->(dbSetOrder(1))
					SF4->(MsSeek(xFilial('SF4')+aCols[nItem][nPosTes]))
				EndIf
				aCols[nItem][nPosLan]	:= SF4->F4_CODLAN
				RestArea(aAreaSF4)
			EndIf

		EndIf
	EndIf
	RestArea(aArea)
EndIf
	
Return(lRet)



/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MTA410OPERºAutor  ³Microsiga           º Data ³  08/24/13   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funçao para automatizar digitação de tipos de operações na º±±
±±º          ³ Cópia dos pedidos de venda                                 º±±
±±º          ³                                                            º±±
±±º          ³ Parämetro: nItem - Linha do acols que está posicionado     º±±
±±º          ³                                                            º±±
±±º          ³ Incluído na validação do campo C6_OPER                     º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Function MTA410OPER(nItem)

Local nPosOpe	:= 0
Local nPosTes	:= 0
Local nPosCod	:= 0
Local nVezes	:= 0
Local cTpOpAtu	:= M->c6_OPER
Local lTrocAll	:= .F.
Local lAtualiz	:= .F.
Local lFirst	:= .T.
Local nItemOri	:= nItem
Local aArea		:= GetArea()
Local aAreaSB1	:= SB1->(GetArea())
Local aAreaSF4	:= SF4->(GetArea())

Static lRepOP	:= GetNewPar("MV_A410ROP",.T.) // Verifica se o sistema irá trabalhar do modo antigo (Não replica) ou do novo (Pergunta antes de replicar).

Default nItem	:= 0

If INCLUI .and. IsInCallStack("A410COPIA") .and. nItem >= 1 .And. lRepOP
	If nItem < Len(aCols) .and. ( nPosOpe:= aScan(aHeader, { |x| AllTrim(Upper(x[2])) == 'C6_OPER'}) ) > 0
		cTpOpAtu	:= M->C6_OPER
		nPosTes := aScan(aHeader, { |x| AllTrim(Upper(x[2])) == 'C6_TES'})
		nPosCod := aScan(aHeader, { |x| AllTrim(Upper(x[2])) == 'C6_PRODUTO'})
		nPosCla := aScan(aHeader, { |x| AllTrim(Upper(x[2])) == 'C6_CLASFIS'})
		nPosLan := aScan(aHeader, { |x| AllTrim(Upper(x[2])) == 'C6_CODLAN'})
		
		For nVezes	:= nItem to Len(aCols)
			
			// Se está na linha do item que está sendo digitado, pula
			If nVezes == nItemOri
				Loop
			EndIf
			
			// Substituo o valor do item do aCols para atualizaçoes na função MaTesInt()
			n	:= nVezes
			
			// Se é um item válido
			If !aCols[nVezes][Len(aHeader)+1]
				
				// Sempre questiona o usuário se deseja substituir todos
				If !lTrocAll
					If lFirst
						lTrocAll := IIf( nItemOri < Len(aCols), MsgYesNo(STR0237+cTpOpAtu+'?', STR0238), .F. )
						lFirst	:= .F.
					EndIf
					// Se não está preenchido ou solicitou trocar todos
				Else
					lAtualiz := .T.
				EndIf
				
				// Realiza atualização
				If lAtualiz	.or. lTrocAll
					
					aCols[nVezes][nPosOpe]	:= cTpOpAtu
					If SB1->B1_COD # aCols[nVezes][nPosCod]
						SB1->(dbSetOrder(1))
						SB1->(MsSeek(xFilial('SB1')+aCols[nVezes][nPosCod]))
					EndIf
					
					aCols[nVezes][nPosTes]	:= MaTesInt(2,aCols[nVezes][nPosOpe],M->C5_CLIENT,M->C5_LOJAENT,If(M->C5_TIPO$'DB',"F","C"),aCols[nVezes][nPosCod],"C6_TES")
					
					If nPosCla > 0
						aCols[nVezes][nPosCla]	:= CodSitTri()
					EndIf
					
					If nPosLan > 0
						If SF4->F4_CODIGO # aCols[nVezes][nPosTes]
							SF4->(dbSetOrder(1))
							SF4->(MsSeek(xFilial('SF4')+aCols[nVezes][nPosTes]))
						EndIf
						aCols[nVezes][nPosLan]	:= SF4->F4_CODLAN
					EndIf
					
					lAtualiz := .F.
				EndIf
				
				// Se já perguntou e não irá trocar os demais, sai do loop
				If !lFirst .and. !lTrocAll
					Exit
				EndIf
				
			EndIf
			
		Next
		RestArea(aAreaSB1)
		RestArea(aAreaSF4)
		
	EndIf
	RestArea(aArea)
EndIf

n := nItemOri

Return(.T.)

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MTA410ChkEmit ºAutor  ³VENDAS/CRM      º Data ³  19/03/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Função para verificar se existe o emitente com o codigo    º±±
±±º          ³ informado. Não foi utilizado a funcao existchav ou existcpoº±±
±±º          ³ para não apresentar a mensagem caso nao encontrado         º±±
±±º          ³                                                            º±±
±±º          ³ Parämetro: cCod - Codigo a verificar                       º±±
±±º          ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MTA410ChkEmit(cCod)

Local aArea  := GetArea()
Local lEncontrou := .F.

dbSelectArea("GU3")
dbSetOrder(1)

If DBSeek(xFilial("GU3") + cCod)
	lEncontrou := .T.
EndIf
	 
RestArea(aArea)

Return lEncontrou

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MTA410RetEmit ºAutor  ³VENDAS/CRM      º Data ³  19/03/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Função para retornar o codigo do emitente a partir da      º±±
±±º          ³ filial.                                                    º±±
±±º          ³                                                            º±±
±±º          ³                                                            º±±
±±º          ³ Parämetro: cFil - Codigo da filial                         º±±
±±º          ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MTA410RetEmit(cFil)

Local aAreaGW0
Local aArea := GetArea()
Local cCodGFE := ""

aAreaGW0 := GW0->( GetArea() )
dbSelectArea("GW0")
GW0->( dbSetOrder(1) )
GW0->( DbSeek( Space( TamSx3("F2_FILIAL")[1] )+PadR( "FILIALEMIT",TamSx3("GW0_TABELA")[1] )+PadR( cFil,TamSx3("GW0_CHAVE")[1] ) ) )
If !GW0->( EOF() ) .And. GW0->GW0_FILIAL == Space( TamSx3("F2_FILIAL")[1] );
					  .And. GW0->GW0_TABELA == PadR( "FILIALEMIT",TamSx3("GW0_TABELA")[1] );
					  .And. GW0->GW0_CHAVE == PadR( cFil,TamSx3("GW0_CHAVE")[1] )

	cCodGFE := PadR( GW0->GW0_CHAR01,TamSx3("GW1_EMISDC")[1] )
EndIf
RestArea( aAreaGW0 )

RestArea( aArea )
		
Return cCodGFE

/*
ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³MTA410RetCGC ºAutor  ³VENDAS/CRM       º Data ³  19/03/14   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Funçao para retornar o CGC de um determinado emitente na   º±±
±±º          ³ simulaçao de frete. Pois, nem sempre o codigo do emitente  º±±
±±º          ³ será o cnpj.                                               º±±
±±º          ³                                                            º±±
±±º          ³ Parämetro: cCodEmit - Codigo do emitente                   º±±
±±º          ³                                                            º±±
±±º          ³                                                            º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ P11                                                        º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß
*/
Static Function MTA410RetCGC(cCodEmit)

Local cCGC  := ""
Local aArea := GetArea()

dbSelectArea("GU3")
dbSetOrder(1)

If DBSeek(xFilial("GU3") + cCodEmit)
	cCGC := GU3->GU3_IDFED
EndIf

RestArea( aArea )

Return cCGC

//------------------------------------------------------------------------------
/*/{Protheus.doc} A410GrvDPR

Rotina de manipulação das pendência de desenvolvimento no SIGADPR

@sample	A410GrvDPR(aItens)

@param		ExpA1 Item ou Itens a serem manipulados

@return	ExpL  Processamento realizado - Verdadeiro/Falso

@author	Alexandre Felicio
@since		06/05/2014
@version	11.90
/*/
//------------------------------------------------------------------------------
Function A410GrvDPR(aItemDPR)

Local lRet 		:= .T.
Local aArea		:= GetArea()
Local aAreaSB1	:= SB1->(GetArea())
Local nIndex		:= 2
Local lAchou	 	:= .F.
Local nOpcao 		:= aItemDPR[1]
Local cChaveP		:= "DGC_FILIAL+DGC_NRPD+DGC_NRSQPD+DGC_CDACPD"
Local cCodProd 	:= aItemDPR[5] 

// Se FOR Efetivação de Orçamento mudar o index a chave primaria do model de 2 para 3
// 2 = DGC_FILIAL+DGC_NRPD+DGC_NRSQPD+DGC_CDACPD
// 3 = DGC_FILIAL+DGC_NRBU+DGC_NRSQBU+DGC_CDACBU
If IsInCallStack("MaBxOrc") 
	nIndex := 3
	cChaveP := "DGC_FILIAL+DGC_NRBU+DGC_NRSQBU+DGC_CDACBU"
EndIf

// aItemDPR[1] -> nOpc 3 = Inclusão 4 = Alteração 5 = Exclusão 
// aItemDPR[2] -> CK_FILIAL->DGC_FILIAL 
// aItemDPR[3] -> DGC_NRPD
// aItemDPR[4] -> DGC_NRSQPD
// aItemDPR[5] -> DGC_CDACPD

DbSelectArea( "DGC" )	  // Pendencia de Desenvolvimento
DGC->(DbSetOrder( nIndex ))   

If ( aItemDPR[1] == 7 )
	nOpcao = 4
EndIf 

//If (nOpcao == MODEL_OPERATION_UPDATE .Or. (Type("lExAutoDPR") == "L" .And. lExAutoDPR)) .And. ( (aItemDPR[5] <> aItemDPR[6]) .And. !Empty(aItemDPR[6]) ) .And. !(IsInCallStack("MaBxOrc"))
If (nOpcao == 4 .Or. (Type("lExAutoDPR") == "L" .And. lExAutoDPR)) .And. ( (aItemDPR[5] <> aItemDPR[6]) .And. !Empty(aItemDPR[6]) ) .And. !(IsInCallStack("MaBxOrc"))
	cCodProd := aItemDPR[6]
EndIf		
	
If IsInCallStack("MaBxOrc") 
	lAchou := DGC->(DbSeek(	PADR(aItemDPR[2], TAMSX3("DGC_FILIAL")[1],	" ") + ;
								PADR(aItemDPR[3], TAMSX3("DGC_NRBU")[1],		" ") + ;
								PADR(aItemDPR[4], TAMSX3("DGC_NRSQBU")[1],	" ") + ;
								PADR(cCodProd,	TAMSX3("DGC_CDACBU")[1],	" ")))
Else
	lAchou := DGC->(DbSeek(	PADR(aItemDPR[2], TAMSX3("DGC_FILIAL")[1],	" ") + ;
								PADR(aItemDPR[3], TAMSX3("DGC_NRPD")[1],		" ") + ;
								PADR(aItemDPR[4], TAMSX3("DGC_NRSQPD")[1],	" ") + ;
								PADR(cCodProd,	 TAMSX3("DGC_CDACPD")[1],	" ")))
EndIf

//If ( lAchou .And. aItemDPR[nX, 1] == MODEL_OPERATION_INSERT )
If ( lAchou .And. aItemDPR[1] == 3 )
	MsgInfo(STR0235)  // "Já existe uma pendência como esse número de pedido de venda. Favor, digitar outro número."
	Return(.F.)
EndIf
	
If lAchou .OR. nOpcao == 3
		
	oModel := FWLoadModel( 'DPRA350' )
	oModel:SetOperation( nOpcao )
	oModel:SetPrimaryKey( {cChaveP} )
	oModel:Activate()
	
	// Efetivando
	If aItemDPR[1] == 7	
	
		// Caso seja efetivação e não achou a dependencia, insere
		If !(lAchou) .And. IsInCallStack("MaBxOrc")
			oModel:DeActivate()
			oModel:SetOperation( 3 )
			oModel:SetPrimaryKey( {cChaveP} )
			oModel:Activate()
			oModel:SetValue( "DGCMASTER", "DGC_NRBU",	  "" )
			oModel:SetValue( "DGCMASTER", "DGC_NRSQBU", "" )
			oModel:SetValue( "DGCMASTER", "DGC_CDACBU", "" )
		EndIf
			
		oModel:SetValue( "DGCMASTER", "DGC_FILIAL", aItemDPR[2] )
		oModel:SetValue( "DGCMASTER", "DGC_NRPD",   aItemDPR[6] )
		oModel:SetValue( "DGCMASTER", "DGC_NRSQPD", aItemDPR[7] )
		oModel:SetValue( "DGCMASTER", "DGC_CDACPD", aItemDPR[8] )
		oModel:SetValue( "DGCMASTER", "DGC_LGFTEV", "0" )		
	// Inclusao
	//ElseIf nOpcao == MODEL_OPERATION_INSERT
	ElseIf nOpcao == 3  
			
		oModel:SetValue( "DGCMASTER", "DGC_FILIAL", aItemDPR[2] )
		oModel:SetValue( "DGCMASTER", "DGC_NRBU",	  "" )
		oModel:SetValue( "DGCMASTER", "DGC_NRSQBU", "" )
		oModel:SetValue( "DGCMASTER", "DGC_CDACBU", "" )
		oModel:SetValue( "DGCMASTER", "DGC_NRPD",   aItemDPR[3] )
		oModel:SetValue( "DGCMASTER", "DGC_NRSQPD", aItemDPR[4] )
		oModel:SetValue( "DGCMASTER", "DGC_CDACPD", aItemDPR[5] )
		
	// Alteracao
	//ElseIf nOpcao == MODEL_OPERATION_UPDATE
	ElseIf nOpcao == 4
		oModel:SetValue( "DGCMASTER", "DGC_NRPD",   aItemDPR[3] )
		oModel:SetValue( "DGCMASTER", "DGC_NRSQPD", aItemDPR[4] )
		oModel:SetValue( "DGCMASTER", "DGC_CDACPD", aItemDPR[5] )
	EndIf
		
	If oModel:VldData()
		oModel:CommitData()
	Else
		aErro := oModel:GetErrorMessage()
		DPRXError( "DPRA350", aErro[6])    	
		lRet  := .F.
	EndIf
	
	oModel:DeActivate() 
	oModel:Destroy()
		
EndIf 
 
RestArea(aAreaSB1)
RestArea(aArea)

Return(lRet)

/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410GrdOP º Autor ³ Materiais          º Data ³ 30/12/2014  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Retorna o Numero da OP amarrada ao Item do PV com Grade    º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Static Function A410GrdOP(cItem,cProduto)

Local aAreaSC6 := SC6->(GetArea())
Local aRet     := {}

dbSelectArea("SC6")
dbSetOrder(1)

If MsSeek(xFilial("SC6")+M->C5_NUM+cItem+cProduto)
	aRet := {SC6->C6_NUMOP,SC6->C6_ITEMOP}
Else
	aRet := {Space(Len(SC6->C6_NUMOP)),Space(Len(SC6->C6_ITEMOP))}
EndIf

RestArea(aAreaSC6)

Return aRet


/*ÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜÜ
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
±±ÉÍÍÍÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍËÍÍÍÍÍÍÑÍÍÍÍÍÍÍÍÍÍÍÍÍ»±±
±±ºPrograma  ³A410WnLoc º Autor ³ Materiais          º Data ³ 09/06/2015  º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÊÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºDesc.     ³ Valida se o Prod é Pai e bloqueia a inclusão do Endereço   º±±
±±ÌÍÍÍÍÍÍÍÍÍÍØÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¹±±
±±ºUso       ³ MATA410                                                    º±±
±±ÈÍÍÍÍÍÍÍÍÍÍÏÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍÍ¼±±
±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±±
ßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßßß*/
Function A410WnLoc()

Local lRet 	 := .T.
Local nPos 	 := aScan(aHeader,{|X| ALLTRIM(X[2]) == "C6_PRODUTO"})
Local nI		 := 0
Local lGtPai   := FindFunction("MtWMSGtPai")
Local lVerPai  := FindFunction("MTVerPai")
Local lWmsNew  := SuperGetMv("MV_WMSNEW",.F.,.F.) //-- Utiliza novo WMS

If lWmsNew .And. lGtPai .And. lVerPai
	For nI := 1 to Len(aCols)
		If aCols[nI][nPos] == MtWMSGtPai(aCols[nI][nPos])
			If !MTVerPai(aCols[nI][nPos],.F.)
				lRet := .F.
			EndIf	
		EndIf
	Next nI
EndIf

Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} A410ComCons
Funcao para ajsuta o sxB

@author TOTVS Protheus
@since  01/09/2015
@obs   Materiais
@version 1.0
/*/
//--------------------------------------------------------------------
Function A410ComCons(nEscolha)

Local nFilPed		:= aScan(aHeader,{|x| AllTrim(x[2]) == "C6_FILPED"})
Local nNumDoc		:= aScan(aHeader,{|x| AllTrim(x[2]) == "C6_PEDCOM"})
Local nItem		:= aScan(aHeader,{|x| AllTrim(x[2]) == "C6_ITPC"})
Local nProd		:= aScan(aHeader,{|x| AllTrim(x[2]) == "C6_PRODUTO"})
Local cNumDoc		:= M->C6_PEDCOM
Local cItem		:= aCols[n][nItem]       // Numero do Item do Pedido
Local cFilPed		:= aCols[n][nFilPed]     // Filial do Ped. de compras
Local cProd		:= aCols[n][nProd]
local lRet		:= .T.

DbSelectArea("SC7")
DbSetOrder(1)

If DbSeek(cFilPed + cNumDoc + cItem )
	If cProd <> SC7->C7_PRODUTO
		Help( ,,'A410CROSWMS',, STR0315, 1, 0 ) 
		lRet:= .F.
	EndIf
Else
	Help( ,,'A410CROSWMS',, STR0316, 1, 0 )
	lRet:= .F.
EndIf

Return lRet

//--------------------------------------------------------------------
/*/{Protheus.doc} A410VenComp
Função apra verificar se existe amarração de CrossDoc do novo WMS

@author TOTVS Protheus
@since  01/09/2015
@obs   Materiais
@version 1.0
/*/
//--------------------------------------------------------------------
Static Function A410VenComp(aCols,aHeader)   
Local nFilPed		:= aScan(aHeader,{|x| AllTrim(x[2]) == "C6_FILPED"})
Local nNumDoc		:= aScan(aHeader,{|x| AllTrim(x[2]) == "C6_PEDCOM"})
Local nItem		:= aScan(aHeader,{|x| AllTrim(x[2]) == "C6_ITPC"})
Local lRet		:=	.T.
Local nI			:= 0
Local nX			:= 0

For nx := 1 to Len(aCols)  //ITENS DO PEDIDO DE COMPRAS
	If !Empty(aCols[nx][nFilPed]) .and. !Empty(aCols[nx][nNumDoc]) .and. !Empty(aCols[nx][nItem]) 
		ni++
	Endif
Next nx	
	
If nI > 0	
	Help( ,,'A410CROSWMS',, STR0314, 1, 0 ) //Somente
	lRet:= .F.
EndIf

Return lRet
/*/{Protheus.doc} MATA410CAN
A rotina MATA410CAN será executada com o objetivo cancelar um pedido de venda no cockpit logistico
@author Mohamed Saido Ba Djalo
@since 03/10/2016
@version version
@param nOpc - tipo de operação,cTabela - define em que case entrar,idPedido - chave do pedido
@return return, True
@example
(examples)
@see (links_or_references)
/*/
Function MATA410CAN(nOpc,cTabela)
Local lRet		:= .F.
Local aAreaAnt	:= GetArea()
    
   	If SC6->(FieldPos('C6_INTROT')) > 0 .And. FindFunction('CPLENVBATCH') 
		If(nOpc == 1)     
	   		nOpc := 3       //INCLUSÃO
	   	ElseIf(nOpc == 2) 
	   		nOpc := 4       //ALTERAÇÃO
	   	ElseIf(nOpc == 3)  
	   		nOpc := 5       //DELEÇÃO
	   	EndIf
	 
		If ((SC6->C6_INTROT == "2") .And. nOpc == 4 )  
		   	lRet := CPLENVBATCH(cTabela, 5) // Cancela no cockpit
			If lRet
				RecLock("SC6",.F.)
				SC6->C6_INTROT := '1'
				SC6->C6_DATCPL := CTOD('')
				SC6->C6_HORCPL := ''
				MsUnlock()
		   	Else
		   		Help(" ",1,"410CANPED")
		   		lRet := .F.
		   	EndIf
		EndIf
	EndIf
	RESTAREA(aAreaAnt)
Return lRet
/*/{Protheus.doc} A410VIAG
A rotina A410VIAG verifica se existe viagem vinculado ao pedido
@author Mohamed Saido Ba Djalo
@since 09/01/2017
@version version
@param cPedido - Número de pedido, cItem - Item de pedido
@return return, True
@example
(examples)
@see (links_or_references)
/*/
Function A410VIAG(cPedido, cItem)
    Local lRet  := .F.
    Local aArea := GetArea()
    Local cQryDK1 := ""
    
    dbSelectArea("SC6")
    dbSetOrder(1)
     
    If SC6->(MSseek(xFilial("SC6") + cPedido + cItem))
        If SC6->C6_INTROT == "2"
		    dbSelectArea("DK1")
		    cQryDK1 := " SELECT DISTINCT DK1_PEDIDO FROM " + RetSqlName("DK1")
			cQryDK1 += " WHERE D_E_L_E_T_ = ''  "
			cQryDK1 += " AND DK1_FILIAL = '" + xFilial("DK1") + "' "
			cQryDK1 += " AND DK1_FILPED = '" + xFilial("SC6") + "' "
			cQryDK1 += " AND DK1_PEDIDO = '" + cPedido + "' "
			cQryDK1 += " AND DK1_ITEMPE = '" + cItem + "' "
		    
		    cQryDK1 := ChangeQuery( cQryDK1 ) 
				 
			cAlsDK1 := GetNextAlias()
			 
			dbUseArea( .T., "TOPCONN", TCGENQRY(,,ChangeQuery(cQryDK1)), cAlsDK1, .F., .T.)
			  
			//TEM VIAGEM VINCULADO??? Mostra a mensagem     
			If !Empty((cAlsDK1)->DK1_PEDIDO)
			    Help(" ",1,"410CPLCAN")
			    lRet := .T.
			EndIf
			 
			(cAlsDK1)->(dbCloseArea())
		Else	 
			lRet := .F.
		EndIf	 
	EndIf
	RESTAREA(aArea)
Return lRet
//--------------------------------------------------------------------
/*/{Protheus.doc} A410MenNo
Função para verificar o conteudo do campo C5_MENNOTA

@author TOTVS Protheus
@since  12/01/2017
@obs   Serviços
@version 1.0
/*/
//--------------------------------------------------------------------
Function A410MenNo()

Local lRet := .T.

If "M->C5_MENNOTA" $ ReadVar()
	lRet:= Texto()
EndIf

Return lRet
